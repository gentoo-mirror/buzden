diff --git a/jc/jc_fenv.ml b/jc/jc_fenv.ml
index 41af292..d8d7b76 100644
--- a/jc/jc_fenv.ml
+++ b/jc/jc_fenv.ml
@@ -105,6 +105,7 @@ sig
     mutable fun_param_regions     : region list;
     mutable fun_calls             : fun_info list;
     mutable fun_component         : int;
+    mutable fun_may_diverge       : bool;
     mutable fun_logic_apps        : logic_info list;
     mutable fun_effects           : fun_effect;
   }
diff --git a/jc/jc_interp.ml b/jc/jc_interp.ml
index c751a6b..7e7adca 100644
--- a/jc/jc_interp.ml
+++ b/jc/jc_interp.ml
@@ -2407,6 +2407,7 @@ and expr e =
             let current_comp = (get_current_function ()).fun_component in
             if safety_checking () && this_comp = current_comp then
              try
+               f.fun_may_diverge <- true;
                let cur_measure, cur_r = get_measure_for @@ get_current_function () in
                let cur_measure_why =
                  term
@@ -2600,6 +2601,7 @@ and expr e =
         | Acheck -> void
       end
     | JCEloop (la, e1) ->
+        infunction.fun_may_diverge <- true;
         let inv, assume_from_inv =
           List.fold_left
             (fun ((invariants, assumes) as acc) (names, inv,_) ->
@@ -3701,7 +3703,7 @@ let tr_fun f funpos spec body acc =
                            ~e:(new assertion JCAtrue :> < mark : _; pos: _ >)
                            ~kind:JCVCpost
                            internal_post,
-                         false (* Why3 would otherwise give errors for non-recursive definitions *),
+                         f.fun_may_diverge, (* Adding `diverges' clause for recursive and looping functions *)
                          excep_posts_for_others None excep_behaviors))
                    :: acc
                  else acc
diff --git a/jc/jc_pervasives.ml b/jc/jc_pervasives.ml
index 9c5cc0f..6177ca1 100644
--- a/jc/jc_pervasives.ml
+++ b/jc/jc_pervasives.ml
@@ -385,6 +385,7 @@ let make_fun_info name ty =
     fun_param_regions = [];
     fun_calls = [];
     fun_component = -1;
+    fun_may_diverge = false;
     fun_logic_apps = [];
     fun_effects = empty_fun_effect;
   }
