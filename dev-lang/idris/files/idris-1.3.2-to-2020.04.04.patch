diff --git a/.travis.yml b/.travis.yml
index 7b2491582..259a04469 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,5 +1,4 @@
-dist: trusty
-sudo: false
+dist: xenial
 
 language: c
 
@@ -9,35 +8,37 @@ env:
 
 matrix:
   include:
-    - env: CABALVER="2.2" GHCVER="8.4.1" STACKVER="7.14" STYLISH=YES
-      addons: {apt: {packages: [cabal-install-2.2,ghc-8.4.1,hscolour], sources: [hvr-ghc]}}
-    - env: CABALVER="2.2" GHCVER="7.10.3" TESTS="test_c"
-      compiler: ": #GHC 7.10.3"
-      addons: {apt: {packages: [cabal-install-2.2,ghc-7.10.3,cppcheck,hscolour], sources: [hvr-ghc]}}
-# Disabled because it's always timing out
-#    - env: CABALVER="1.24" GHCVER="8.0.1" TESTS="test_c"
-#      compiler: ": #GHC 8.0.1"
-#      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,cppcheck,hscolour], sources: [hvr-ghc]}}
-    - env: CABALVER="2.0" GHCVER="8.2.2" TESTS="lib_doc doc"
+    - env: CABALVER="2.4" GHCVER="8.6.5" STACKVER="15.4" STYLISH=YES
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.6.5,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="2.4" GHCVER="8.2.2" TESTS="lib_doc doc"
       compiler: ": #GHC 8.2.2"
-      addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.2,cppcheck,hscolour], sources: [hvr-ghc]}}
-    - env: CABALVER="2.0" GHCVER="8.2.2" TESTS="test_js"
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.2.2,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="2.4" GHCVER="8.2.2" TESTS="test_js"
       compiler: ": #GHC 8.2.2"
-      addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.2,cppcheck,hscolour], sources: [hvr-ghc]}}
-    - env: CABALVER="2.0" GHCVER="8.2.2" TESTS="test_c"
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.2.2,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="2.4" GHCVER="8.2.2" TESTS="test_c"
       compiler: ": #GHC 8.2.2"
-      addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.2,cppcheck,hscolour], sources: [hvr-ghc]}}
-#TODO: The idris built with those fails due to libffi dynamic linking version mismatch.
-#      Caused by the GHC backport to Trusty?
-#    - env: CABALVER="2.2" GHCVER="8.4.1" TESTS="lib_doc doc"
-#      compiler: ": #GHC 8.4.1"
-#      addons: {apt: {packages: [cabal-install-2.2,ghc-8.4.1,cppcheck,hscolour], sources: [hvr-ghc]}}
-#    - env: CABALVER="2.2" GHCVER="8.4.1" TESTS="test_js"
-#      compiler: ": #GHC 8.4.1"
-#      addons: {apt: {packages: [cabal-install-2.2,ghc-8.4.1,cppcheck,hscolour], sources: [hvr-ghc]}}
-#    - env: CABALVER="2.2" GHCVER="8.4.1" TESTS="test_c"
-#      compiler: ": #GHC 8.4.1"
-#      addons: {apt: {packages: [cabal-install-2.2,ghc-8.4.1,cppcheck,hscolour], sources: [hvr-ghc]}}
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.2.2,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="2.4" GHCVER="8.4.4" TESTS="lib_doc doc"
+      compiler: ": #GHC 8.4.4"
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.4.4,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="2.4" GHCVER="8.4.4" TESTS="test_js"
+      compiler: ": #GHC 8.4.4"
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.4.4,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="2.4" GHCVER="8.4.4" TESTS="test_c"
+      compiler: ": #GHC 8.4.4"
+      addons: {apt: {packages: [cabal-install-2.4,ghc-8.4.4,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="3.0" GHCVER="8.8.3" TESTS="lib_doc doc"
+      compiler: ": #GHC 8.8.3"
+      addons: {apt: {packages: [cabal-install-3.0,ghc-8.8.3,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="3.0" GHCVER="8.8.3" TESTS="test_js"
+      compiler: ": #GHC 8.8.3"
+      addons: {apt: {packages: [cabal-install-3.0,ghc-8.8.3,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="3.0" GHCVER="8.8.3" TESTS="test_c"
+      compiler: ": #GHC 8.8.3"
+      addons: {apt: {packages: [cabal-install-3.0,ghc-8.8.3,cppcheck,hscolour], sources: [hvr-ghc]}}
+    - env: CABALVER="3.0" GHCVER="8.8.3" IDRIS2=YES
+      addons: {apt: {packages: [cabal-install-3.0,ghc-8.8.3], sources: [hvr-ghc]}}
   fast-finish: true
 
 cache:
@@ -56,7 +57,7 @@ before_install:
   - unset CC
   - if [[ $TRAVIS_OS_NAME == 'linux' ]];
     then
-        export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH;
+        export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$HOME/opt/scheme/bin/:$PATH;
         export SED=sed;
         export ZCAT=zcat;
     fi
@@ -71,6 +72,21 @@ before_install:
         export PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH;
     fi
   - if [ -n "$STYLISH" ]; then ./stylize.sh; exit $?; fi
+  - if [ -n "$IDRIS2" ];
+    then
+      git clone https://github.com/edwinb/Idris2 &&
+      wget https://github.com/cisco/ChezScheme/archive/v9.5.2.tar.gz &&
+      tar xvzf v9.5.2.tar.gz &&
+      cd ChezScheme-9.5.2 &&
+      ./configure --threads --installprefix=$HOME/opt/scheme &&
+      make -j install &&
+      cd .. &&
+      cabal v1-update &&
+      travis_wait cabal v1-install &&
+      cd Idris2 &&
+      make idris2 && make base && make contrib;
+      exit $?;
+    fi
 
 install:
   - which cabal
@@ -88,7 +104,7 @@ install:
   # causing cabal's default configuration (jobs: $ncpus)
   # to run into the GHC #9221 bug which can result in longer build-times.
   - $SED -i -r 's/(^jobs:).*/\1 2/' $HOME/.cabal/config
-  - cabal install -f FFI --only-dependencies --enable-tests --dry -v > installplan.txt
+  - cabal v1-install -f FFI --only-dependencies --enable-tests --dry -v > installplan.txt
   - $SED -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt
   # check whether current requested install-plan matches cached package-db snapshot
   - if diff -u installplan.txt $HOME/.cabsnap/installplan.txt;
@@ -101,7 +117,7 @@ install:
       echo "cabal build-cache MISS";
       rm -rf $HOME/.cabsnap;
       mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin;
-      cabal install -f FFI --only-dependencies --enable-tests;
+      cabal v1-install -f FFI --only-dependencies --enable-tests;
     fi
   # snapshot package-db on cache miss
   - if [ ! -d $HOME/.cabsnap ];
@@ -112,28 +128,30 @@ install:
       cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/;
     fi
 
+
 before_script:
   - ORIGINAL_DIR=$(pwd)
-  - cabal sdist
+  - cabal v1-sdist
   - cd ..
   - tar -xf ${ORIGINAL_DIR}/dist/${PKGNAME}*.tar.gz
   - cd ${PKGNAME}*
 script:
+  - export LD_PRELOAD=/opt/ghc/${GHCVER}/lib/ghc-${GHCVER}/rts/libffi.so.7
 ###
   - echo 'Configure...' && echo -en 'travis_fold:start:script.configure\\r'
-  - cabal configure -f FFI -f CI --enable-tests
+  - cabal v1-configure -f FFI -f CI --enable-tests
   - echo -en 'travis_fold:end:script.configure\\r'
 ###
   - echo 'Build...' && echo -en 'travis_fold:start:script.build\\r'
-  - cabal build
+  - cabal v1-build
   - echo -en 'travis_fold:end:script.build\\r'
 ###
   - echo 'Copy...' && echo -en 'travis_fold:start:script.copy\\r'
-  - cabal copy
+  - cabal v1-copy
   - echo -en 'travis_fold:end:script.copy\\r'
 ###
   - echo 'Register...' && echo -en 'travis_fold:start:script.register\\r'
-  - cabal register
+  - cabal v1-register
   - echo -en 'travis_fold:end:script.register\\r'
 ###
   - echo 'Cppcheck...' && echo -en 'travis_fold:start:script.cppcheck\\r'
diff --git a/CITATION.md b/CITATION.md
index 61b29049d..9331dbc84 100644
--- a/CITATION.md
+++ b/CITATION.md
@@ -17,7 +17,7 @@ If you use `Idris` in your work we would prefer it if you would use the followin
   pages = {552--593},
   numpages = {42},
   doi = {10.1017/S095679681300018X},
-  URL = {http://journals.cambridge.org/article_S095679681300018X},
+  URL = {https://journals.cambridge.org/article_S095679681300018X},
 }
 ```
 
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 71fd267ee..237c3da41 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -6,9 +6,9 @@ Here are a few guidelines that we would like contributors to follow so that we c
 
 ## Getting Started
 
-1. Make sure you are familiar with [Git](http://git-scm.com/book).
+1. Make sure you are familiar with [Git](https://git-scm.com/book).
 1. Make sure you have a [GitHub account](https://github.com/signup/free).
-1. Make sure you are familiar with: [Idris](http://eb.host.cs.st-andrews.ac.uk/writings/idris-tutorial.pdf).
+1. Make sure you are familiar with: [Idris](https://eb.host.cs.st-andrews.ac.uk/writings/idris-tutorial.pdf).
 1. Make sure you can install Idris:
   * [Mac OS X](https://github.com/idris-lang/Idris-dev/wiki/Idris-on-OS-X-using-Homebrew)
   * [Ubuntu](https://github.com/idris-lang/Idris-dev/wiki/Idris-on-Ubuntu)
@@ -72,7 +72,7 @@ We do not want you wasting your time nor duplicating somebody's work!
 
 ## Making Changes
 
-Idris developers and hackers try to adhere to something similar to the [successful git branching model](http://nvie.com/posts/a-successful-git-branching-model/).
+Idris developers and hackers try to adhere to something similar to the [successful git branching model](https://nvie.com/posts/a-successful-git-branching-model/).
 The steps are described below.
 
 ### New contributors
@@ -175,8 +175,8 @@ To help increase the chance of your pull request being accepted:
 * Idris FAQs: [Official](https://idris.readthedocs.io/en/latest/faq/faq.html); [Unofficial](https://github.com/idris-lang/Idris-dev/wiki/Unofficial-FAQ);
 * [Idris Manual](https://github.com/idris-lang/Idris-dev/wiki/Manual);
 * [Idris Tutorial](https://idris.readthedocs.io/en/latest/tutorial/index.html);
-* [Idris News](http://www.idris-lang.org/news/);
-* [other Idris docs](http://www.idris-lang.org/documentation/).
+* [Idris News](https://www.idris-lang.org/news/);
+* [other Idris docs](https://www.idris-lang.org/documentation/).
 * [Using Pull Requests](https://help.github.com/articles/using-pull-requests)
 * [General GitHub Documentation](https://help.github.com/).
 
diff --git a/INSTALL.md b/INSTALL.md
index 526ec8090..efa2f8491 100644
--- a/INSTALL.md
+++ b/INSTALL.md
@@ -70,7 +70,7 @@ NixOS unstable.
 
 *Important* Stack will not install any external dependencies required
 to build Idris. Before you try stack please ensure you have the
-correct depenencies.
+correct dependencies.
 
 To build Idris with stack use the following command:
 
@@ -130,7 +130,8 @@ PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig stack build
 ## Issue with GHC on Ubuntu/Fedora
 
 There is an upstream issue with GHC on some Ubuntu and Fedora machines.
-The issue is that for GHC versions greater than 8.4.X linking to libFFI is broken.
+The issue is that for GHC versions greater than 8.4.X linking to libFFI uses the version of libFFI shipped with GHC, instead of the system version.
+
 See the following GHC issue page for more information:
 
   <https://gitlab.haskell.org/ghc/ghc/issues/15397>
@@ -141,4 +142,12 @@ Specifically, one will see an error message along the lines of:
 
 > error while loading shared libraries: libffi.so.7: cannot open shared object file: No such file or directory
 
-We have supplied an alternative stack configuration file (`stack-alt.yaml`) that will use a version of GHC prior to the upstream issue being introduced.
+A workround for this bug is to override the used libffi version (this is what we use on CI):
+
+```bash
+export LD_PRELOAD=/opt/ghc/${GHCVER}/lib/ghc-${GHCVER}/rts/libffi.so.7
+```
+
+## GHC 8.6
+
+For reasons that haven't been investigated building the Idris compiler with GHC 8.6 leads to a compiler which doesn't pass test.
diff --git a/Makefile b/Makefile
index 63b62a201..4914401e5 100644
--- a/Makefile
+++ b/Makefile
@@ -15,14 +15,14 @@ endif
 endif
 
 install:
-	$(CABAL) install $(CABALFLAGS)
+	$(CABAL) v1-install $(CABALFLAGS)
 
 pinstall: CABALFLAGS += --enable-executable-profiling
 pinstall: dist/setup-config
-	$(CABAL) install $(CABALFLAGS)
+	$(CABAL) v1-install $(CABALFLAGS)
 
 build: dist/setup-config
-	$(CABAL) build $(CABALFLAGS)
+	$(CABAL) v1-build $(CABALFLAGS)
 
 test: doc test_c stylize
 
@@ -30,15 +30,15 @@ stylize:
 	./stylize.sh
 
 test_c:
-	$(CABAL) test $(ARGS) --test-options \
+	$(CABAL) v1-test $(ARGS) --test-options \
 		"$(TEST-ARGS) --rerun-update +RTS -N$(TEST-JOBS) -RTS"
 
 test_js:
-	$(CABAL) test $(ARGS) --test-options \
+	$(CABAL) v1-test $(ARGS) --test-options \
 		"$(TEST-ARGS) --node --rerun-update +RTS -N$(TEST-JOBS) -RTS"
 
 test_update:
-	$(CABAL) test $(ARGS) --test-options \
+	$(CABAL) v1-test $(ARGS) --test-options \
 		"$(TEST-ARGS) --accept +RTS -N$(TEST-JOBS) -RTS"
 
 test_clean:
@@ -49,14 +49,14 @@ lib_clean:
 	$(MAKE) -C libs IDRIS=../../dist/build/idris/idris RTS=../../dist/build/rts/libidris_rts clean
 
 relib: lib_clean
-	$(CABAL) install $(CABALFLAGS)
+	$(CABAL) v1-install $(CABALFLAGS)
 
 linecount:
 	wc -l src/Idris/*.hs src/Idris/Elab/*.hs src/Idris/Core/*.hs src/IRTS/*.hs src/Pkg/*.hs src/Util/*.hs
 
 #Note: this doesn't yet link to Hackage properly
 doc: dist/setup-config
-	$(CABAL) haddock --hyperlink-source --html --hoogle --html-location="http://hackage.haskell.org/packages/archive/\$$pkg/latest/doc/html" --haddock-options="--title Idris"
+	$(CABAL) v1-haddock --hyperlink-source --html --hoogle --html-location="https://hackage.haskell.org/packages/archive/\$$pkg/latest/doc/html" --haddock-options="--title Idris"
 
 lib_doc:
 	$(MAKE) -C libs IDRIS=../../dist/build/idris/idris doc
@@ -76,7 +76,7 @@ user_doc_pdf:
 	$(MAKE) -C docs latexpdf
 
 fast:
-	$(CABAL) install $(CABALFLAGS) --ghc-option=-O0
+	$(CABAL) v1-install $(CABALFLAGS) --ghc-option=-O0
 
 dist/setup-config:
-	$(CABAL) configure $(CABALFLAGS)
+	$(CABAL) v1-configure $(CABALFLAGS)
diff --git a/README.md b/README.md
index 8878328f3..271b8d1ba 100644
--- a/README.md
+++ b/README.md
@@ -4,11 +4,11 @@
 [![Appveyor build](https://ci.appveyor.com/api/projects/status/xi8yu81oy1134g7o/branch/master?svg=true)](https://ci.appveyor.com/project/idrislang/idris-dev)
 [![Documentation Status](https://readthedocs.org/projects/idris/badge/?version=latest)](https://readthedocs.org/projects/idris/?badge=latest)
 [![Hackage](https://img.shields.io/hackage/v/idris.svg)](https://hackage.haskell.org/package/idris)
-[![Stackage LTS](http://stackage.org/package/idris/badge/lts)](http://stackage.org/lts/package/idris)
-[![Stackage Nightly](http://stackage.org/package/idris/badge/nightly)](http://stackage.org/nightly/package/idris)
+[![Stackage LTS](https://stackage.org/package/idris/badge/lts)](https://stackage.org/lts/package/idris)
+[![Stackage Nightly](https://stackage.org/package/idris/badge/nightly)](https://stackage.org/nightly/package/idris)
 [![IRC](https://img.shields.io/badge/IRC-%23idris-1e72ff.svg?style=flat)](https://www.irccloud.com/invite?channel=%23idris&hostname=irc.freenode.net&port=6697&ssl=1)
 
-Idris (http://idris-lang.org/) is a general-purpose functional programming
+Idris (https://idris-lang.org/) is a general-purpose functional programming
 language with dependent types.
 
 ## Installation Guides.
@@ -28,7 +28,7 @@ Idris has support for external code generators. Supplied with the distribution
 is a C code generator to compile executables, and a JavaScript code generator
 with support for node.js and browser JavaScript.
 
-More information about [code generators can be found on the wiki](http://idris.readthedocs.io/en/latest/reference/codegen.html).
+More information about [code generators can be found on the wiki](https://idris.readthedocs.io/en/latest/reference/codegen.html).
 
 ## More Information
 
@@ -44,3 +44,6 @@ where some interesting projects are being hosted.
 
 For those interested in contributing to Idris directly we kindly ask that
 prospective developers please consult the [Contributing Guide](CONTRIBUTING.md) first.
+
+[Idris 2](https://github.com/edwinb/Idris2) is an early preview of the next generation
+of Idris, implemented in Idris.
diff --git a/Setup.hs b/Setup.hs
index 1db0c20e8..d8963d73a 100644
--- a/Setup.hs
+++ b/Setup.hs
@@ -215,36 +215,6 @@ idrisConfigure _ flags pkgdesc local = do
       autogenComponentModulesDir lbi _ = autogenModulesDir lbi
 #endif
 
-idrisPreSDist args flags = do
-  let dir = S.fromFlag (S.sDistDirectory flags)
-  let verb = S.fromFlag (S.sDistVerbosity flags)
-  generateVersionModule verb "src" True
-  generateBuildFlagsModule verb "src" []
-  generateTargetModule verb "src" "./libs"
-  generateToolchainModule verb "src" Nothing
-  preSDist simpleUserHooks args flags
-
-idrisSDist sdist pkgDesc bi hooks flags = do
-  pkgDesc' <- addGitFiles pkgDesc
-  sdist pkgDesc' bi hooks flags
-    where
-      addGitFiles :: PackageDescription -> IO PackageDescription
-      addGitFiles pkgDesc = do
-        files <- gitFiles
-        return $ pkgDesc { extraSrcFiles = extraSrcFiles pkgDesc ++ files}
-      gitFiles :: IO [FilePath]
-      gitFiles = liftM lines (readProcess "git" ["ls-files"] "")
-
-idrisPostSDist args flags desc lbi = do
-  Control.Exception.catch (do let file = "src" </> "Version_idris" Px.<.> "hs"
-                              let targetFile = "src" </> "Target_idris" Px.<.> "hs"
-                              putStrLn $ "Removing generated modules:\n "
-                                        ++ file ++ "\n" ++ targetFile
-                              removeFile file
-                              removeFile targetFile)
-             (\e -> let e' = (e :: SomeException) in return ())
-  postSDist simpleUserHooks args flags desc lbi
-
 #if !(MIN_VERSION_Cabal(2,0,0))
 rewriteFileEx :: Verbosity -> FilePath -> String -> IO ()
 rewriteFileEx _ = rewriteFile
@@ -353,8 +323,5 @@ main = defaultMainWithHooks $ simpleUserHooks
    , postInst = \_ flags pkg local ->
                   idrisInstall (S.fromFlag $ S.installVerbosity flags)
                                NoCopyDest pkg local
-   , preSDist = idrisPreSDist
-   , sDistHook = idrisSDist (sDistHook simpleUserHooks)
-   , postSDist = idrisPostSDist
    , testHook = idrisTestHook
    }
diff --git a/appveyor.yml b/appveyor.yml
index 85fe67498..f4afbb7dd 100644
--- a/appveyor.yml
+++ b/appveyor.yml
@@ -5,13 +5,13 @@ init:
 
     mkdir C:\ghc
 
-    Invoke-WebRequest "http://downloads.haskell.org/~ghc/8.4.3/ghc-8.4.3-x86_64-unknown-mingw32.tar.xz" -OutFile C:\ghc\ghc.tar.xz -UserAgent "Curl"
+    Invoke-WebRequest "https://downloads.haskell.org/~ghc/8.8.2/ghc-8.8.2-x86_64-unknown-mingw32.tar.xz" -OutFile C:\ghc\ghc.tar.xz -UserAgent "Curl"
 
     7z x C:\ghc\ghc.tar.xz -oC:\ghc
 
     7z x C:\ghc\ghc.tar -oC:\ghc
 
-    $env:PATH="$env:PATH;c:\ghc\ghc-8.4.3\bin;$HOME\AppData\Roaming\cabal\bin"
+    $env:PATH="$env:PATH;c:\ghc\ghc-8.8.2\bin;$HOME\AppData\Roaming\cabal\bin"
 
     cabal v1-update
 
diff --git a/azure-pipelines.yml b/azure-pipelines.yml
index 6f82f755b..243f45625 100644
--- a/azure-pipelines.yml
+++ b/azure-pipelines.yml
@@ -68,7 +68,7 @@ jobs:
         choco install 7zip.portable -y --no-progress
         choco install msys2 -y --no-progress --params "/InstallDir=C:/msys64/"
         mkdir C:\ghc
-        Invoke-WebRequest "http://downloads.haskell.org/~ghc/8.4.3/ghc-8.4.3-x86_64-unknown-mingw32.tar.xz" -OutFile C:\ghc\ghc.tar.xz -UserAgent "Curl"
+        Invoke-WebRequest "https://downloads.haskell.org/~ghc/8.4.3/ghc-8.4.3-x86_64-unknown-mingw32.tar.xz" -OutFile C:\ghc\ghc.tar.xz -UserAgent "Curl"
         7z x C:\ghc\ghc.tar.xz -oC:\ghc
         7z x C:\ghc\ghc.tar -oC:\ghc
       displayName: "Setting up environment"
diff --git a/benchmarks/pidigits/pidigits.idr b/benchmarks/pidigits/pidigits.idr
index 97cbbdd61..167982ca5 100644
--- a/benchmarks/pidigits/pidigits.idr
+++ b/benchmarks/pidigits/pidigits.idr
@@ -3,7 +3,7 @@ import Data.Vect
 
 {- Toy program that outputs the n first digits of Pi.
 
-   Inspired from http://www.haskell.org/haskellwiki/Shootout/Pidigits.
+   Inspired from https://www.haskell.org/haskellwiki/Shootout/Pidigits.
    The original ns and str lazy lists have been replaced by strict functions.
 
    Memory usage seems to be excessive. One of the branches of str is tail recursive, and
diff --git a/docs/LICENSE b/docs/LICENSE
index d1580a419..897ab8f97 100644
--- a/docs/LICENSE
+++ b/docs/LICENSE
@@ -7,4 +7,4 @@ rights to Documentation for Idris.
 
 More information concerning the CC0 can be found online at:
 
-    http://creativecommons.org/publicdomain/zero/1.0/
+    https://creativecommons.org/publicdomain/zero/1.0/
diff --git a/docs/Makefile b/docs/Makefile
index 21b2726bd..9baab9d92 100644
--- a/docs/Makefile
+++ b/docs/Makefile
@@ -9,7 +9,7 @@ BUILDDIR      = _build
 
 # User-friendly check for sphinx-build
 ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)
-$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)
+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from https://www.sphinx-doc.org/)
 endif
 
 # Internal variables.
diff --git a/docs/README.md b/docs/README.md
index 15511d3af..bdce2e24c 100644
--- a/docs/README.md
+++ b/docs/README.md
@@ -1,7 +1,7 @@
 # Documentation for the Idris Language.
 
 
-This manual has been prepared using ReStructured Text and the [Sphinx Documentation Generator](http://sphinx-doc.org) for future inclusion on [Read The Docs](http://www.readthedocs.org).
+This manual has been prepared using ReStructured Text and the [Sphinx Documentation Generator](https://www.sphinx-doc.org) for future inclusion on [Read The Docs](https://www.readthedocs.org).
 
 ## Dependencies
 
@@ -12,7 +12,7 @@ To build the manual the following dependencies must be met. We assume that you h
 Python should be installed by default on most systems.
 Sphinx can be installed either through your hosts package manager or using pip/easy_install.
 
-*Note* [ReadTheDocs](http://www.readthedocs.org) works with Sphinx
+*Note* [ReadTheDocs](https://www.readthedocs.org) works with Sphinx
  `v1.2.2`. If you install a more recent version of sphinx then
  'incorrectly' marked up documentation may get passed the build system
  of readthedocs and be ignored. In the past we had several code-blocks
@@ -45,7 +45,7 @@ rights to Documentation for Idris.
 
 More information concerning the CC0 can be found online at:
 
-    http://creativecommons.org/publicdomain/zero/1.0/
+    https://creativecommons.org/publicdomain/zero/1.0/
 
 
 When contributing material to the manual please bear in mind that the work will be licensed as above.
diff --git a/docs/_static/theme_overrides.css b/docs/_static/theme_overrides.css
new file mode 100644
index 000000000..63ee6cc74
--- /dev/null
+++ b/docs/_static/theme_overrides.css
@@ -0,0 +1,13 @@
+/* override table width restrictions */
+@media screen and (min-width: 767px) {
+
+   .wy-table-responsive table td {
+      /* !important prevents the common CSS stylesheets from overriding
+         this as on RTD they are loaded after this stylesheet */
+      white-space: normal !important;
+   }
+
+   .wy-table-responsive {
+      overflow: visible !important;
+   }
+}
diff --git a/docs/conf.py b/docs/conf.py
index c3cb63998..35563206e 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -51,7 +51,7 @@ master_doc = 'index'
 
 # General information about the project.
 project = u'Idris'
-copyright = u'2017, The Idris Community'
+copyright = u'2017-2020, The Idris Community'
 author = u'The Idris Community'
 
 # The version info for the project you're documenting, acts as replacement for
@@ -151,6 +151,12 @@ if not on_rtd:  # only import and set the theme if we're building docs locally
 # so a file named "default.css" will overwrite the builtin "default.css".
 html_static_path = ['_static']
 
+html_context = {
+    'css_files': [
+        '_static/theme_overrides.css',  # override wide tables in RTD theme
+        ],
+     }
+
 # Add any extra paths that contain custom files (such as robots.txt or
 # .htaccess) here, relative to this directory. These files are copied
 # directly to the root of the documentation.
@@ -245,6 +251,7 @@ latex_elements = {
 # Additional stuff for the LaTeX preamble.
 'preamble': r'''
 \usepackage{lmodern}
+\usepackage{textalpha}
 \usepackage[T1]{fontenc}
 \usepackage[utf8x]{inputenc}
 \usepackage{titlesec}
@@ -294,7 +301,7 @@ latex_elements = {
 # (source start file, target name, title,
 #  author, documentclass [howto, manual, or own class]).
 latex_documents = [
-  ('index',  'idris-documentation-complete.tex',  u'Documentation for the Idris Language',    u'The Idris Community', 'report'),
+    # (master_doc,  'idris.tex',  u'Documentation for the Idris Language',    u'The Idris Community', 'report')
    ('tutorial/index',  'idris-tutorial.tex',  u'The Idris Tutorial',    u'The Idris Community', 'howto'),
 ]
 
diff --git a/docs/effects/conclusions.rst b/docs/effects/conclusions.rst
index 7018c9387..c167b416a 100644
--- a/docs/effects/conclusions.rst
+++ b/docs/effects/conclusions.rst
@@ -51,7 +51,7 @@ foundations are also well-studied see [5]_, [6]_, [7]_, [8]_.
        Programming Languages and Systems (APLAS '09), Zhenjiang Hu
        (Ed.). Springer-Verlag, Berlin, Heidelberg,
        95-110. DOI=10.1007/978-3-642-10672-9_9
-       http://link.springer.com/chapter/10.1007%2F978-3-642-10672-9_9
+       https://link.springer.com/chapter/10.1007%2F978-3-642-10672-9_9
 
 
 .. [4] Ohad Kammar, Sam Lindley, and Nicolas Oury. 2013. Handlers in
diff --git a/docs/effects/depeff.rst b/docs/effects/depeff.rst
index 38e12bee2..aaa15e8e7 100644
--- a/docs/effects/depeff.rst
+++ b/docs/effects/depeff.rst
@@ -43,8 +43,8 @@ express this as follows:
 
 .. code-block:: idris
 
-    readInt : Eff ()[STATE (Vect n Int), STDIO] 
-                    [STATE (Vect (S n) Int), STDIO]
+    readInt : Eff () [STATE (Vect n Int), STDIO]
+                     [STATE (Vect (S n) Int), STDIO]
     readInt = do let x = trim !getStr
                  putM (cast x :: !get)
 
@@ -153,12 +153,21 @@ file management follows a resource usage protocol with the following
 
 -  When a file is closed, its handle should no longer be used
 
-These requirements can be expressed formally in , by creating a
+These requirements can be expressed formally by creating a
 ``FILE_IO`` effect parameterised over a file handle state, which is
 either empty, open for reading, or open for writing. The ``FILE_IO``
-effect’s definition is given below. Note that this
-effect is mainly for illustrative purposes—typically we would also like
-to support random access files and better reporting of error conditions.
+effect’s definition is given below.
+
+.. note::
+    This effect is mainly for illustrative purposes.
+    Typically we would also like to support random access files and
+    better reporting of error conditions.
+
+    Moreover, the ``FILE`` effect in the ``Effect.File`` module of
+    the ``effects`` library uses slightly more complicated types to
+    support erroneous behaviour of each function and to support more
+    compilcated modes of opening, like for reading **and** writing,
+    appending or truncating.
 
 .. code-block:: idris
 
@@ -173,7 +182,7 @@ to support random access files and better reporting of error conditions.
 
     open : (fname : String)
            -> (m : Mode)
-           -> Eff Bool [FILE_IO ()] 
+           -> Eff Bool [FILE_IO ()]
                        (\res => [FILE_IO (case res of
                                                True => OpenFile m
                                                False => ())])
@@ -191,7 +200,7 @@ In particular, consider the type of ``open``:
 
     open : (fname : String)
            -> (m : Mode)
-           -> Eff Bool [FILE_IO ()] 
+           -> Eff Bool [FILE_IO ()]
                        (\res => [FILE_IO (case res of
                                                True => OpenFile m
                                                False => ())])
@@ -207,7 +216,7 @@ we continue the protocol accordingly.
 
     readFile : Eff (List String) [FILE_IO (OpenFile Read)]
     readFile = readAcc [] where
-        readAcc : List String -> Eff (List String) [FILE_IO (OpenFile Read)] 
+        readAcc : List String -> Eff (List String) [FILE_IO (OpenFile Read)]
         readAcc acc = if (not !eof)
                          then readAcc (!readLine :: acc)
                          else pure (reverse acc)
diff --git a/docs/effects/index.rst b/docs/effects/index.rst
index a7c2ed695..921fb9458 100644
--- a/docs/effects/index.rst
+++ b/docs/effects/index.rst
@@ -25,7 +25,7 @@ A tutorial on the `Effects` package in `Idris`.
    Idris Community* has waived all copyright and related or neighbouring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 .. toctree::
    :maxdepth: 1
diff --git a/docs/effects/introduction.rst b/docs/effects/introduction.rst
index ec3b481dd..19e551b1a 100644
--- a/docs/effects/introduction.rst
+++ b/docs/effects/introduction.rst
@@ -3,7 +3,7 @@ Introduction
 ************
 
 Pure functional languages with dependent types such as `Idris
-<http://www.idris-lang.org/>`_ support reasoning about programs directly
+<https://www.idris-lang.org/>`_ support reasoning about programs directly
 in the type system, promising that we can *know* a program will run
 correctly (i.e. according to the specification in its type) simply
 because it compiles. Realistically, though, things are not so simple:
@@ -17,7 +17,8 @@ exceptions, and verified resource management.
 This tutorial assumes familiarity with pure programming in Idris,
 as described in Sections 1–6 of the main tutorial [1]_. The examples
 presented are tested with Idris and can be found in the
-examples directory of the Idris repository.
+examples directory of the Idris repository. The ``-p effects`` flag 
+is needed when starting Idris.
 
 Consider, for example, the following introductory function which
 illustrates the kind of properties which can be expressed in the type
diff --git a/docs/effects/summary.rst b/docs/effects/summary.rst
index 6110cd903..d73dd15db 100644
--- a/docs/effects/summary.rst
+++ b/docs/effects/summary.rst
@@ -43,16 +43,16 @@ FILE\_IO
     data OpenFile : Mode -> Type
 
     open : (fname : String)
-           -> (m : Mode)
-           -> Eff Bool [FILE_IO ()] 
-                       (\res => [FILE_IO (case res of
-                                               True => OpenFile m
-                                               False => ())])
+        -> (m : Mode)
+        -> Eff Bool [FILE_IO ()]
+                    (\res => [FILE_IO (case res of
+                                            True => OpenFile m
+                                            False => ())])
     close : Eff () [FILE_IO (OpenFile m)] [FILE_IO ()]
 
-    readLine  : Eff String [FILE_IO (OpenFile Read)]
+    readLine  :           Eff String [FILE_IO (OpenFile Read)]
     writeLine : String -> Eff () [FILE_IO (OpenFile Write)]
-    eof       : Eff Bool [FILE_IO (OpenFile Read)]
+    eof       :           Eff Bool [FILE_IO (OpenFile Read)]
 
     Handler FileIO IO where { ... }
 
@@ -69,9 +69,9 @@ RND
 
     RND : EFFECT
 
-    srand  : Integer ->            Eff m () [RND]
-    rndInt : Integer -> Integer -> Eff m Integer [RND]
-    rndFin : (k : Nat) ->          Eff m (Fin (S k)) [RND]
+    srand  : Integer ->            Eff () [RND]
+    rndInt : Integer -> Integer -> Eff Integer [RND]
+    rndFin : (k : Nat) ->          Eff (Fin (S k)) [RND]
 
     Handler Random m where { ... }
 
@@ -86,7 +86,7 @@ SELECT
 
     SELECT : EFFECT
 
-    select : List a -> Eff m a [SELECT]
+    select : List a -> Eff a [SELECT]
 
     Handler Selection Maybe where { ... }
     Handler Selection List where { ... }
@@ -102,10 +102,10 @@ STATE
 
     STATE : Type -> EFFECT
 
-    get    :             Eff m x [STATE x]
-    put    : x ->        Eff m () [STATE x]
-    putM   : y ->        Eff m () [STATE x] [STATE y]
-    update : (x -> x) -> Eff m () [STATE x]
+    get    :             Eff x [STATE x]
+    put    : x ->        Eff () [STATE x]
+    putM   : y ->        Eff () [STATE x] [STATE y]
+    update : (x -> x) -> Eff () [STATE x]
 
     Handler State m where { ... }
 
@@ -121,12 +121,12 @@ STDIO
 
     STDIO : EFFECT
 
-    putChar  : Handler StdIO m => Char ->   Eff m () [STDIO]
-    putStr   : Handler StdIO m => String -> Eff m () [STDIO]
-    putStrLn : Handler StdIO m => String -> Eff m () [STDIO]
+    putChar  : Char   -> Eff () [STDIO]
+    putStr   : String -> Eff () [STDIO]
+    putStrLn : String -> Eff () [STDIO]
 
-    getStr   : Handler StdIO m =>           Eff m String [STDIO]
-    getChar  : Handler StdIO m =>           Eff m Char [STDIO]
+    getStr   :           Eff String [STDIO]
+    getChar  :           Eff Char [STDIO]
 
     Handler StdIO IO where { ... }
     Handler StdIO (IOExcept a) where { ... }
@@ -144,9 +144,9 @@ SYSTEM
 
     SYSTEM : EFFECT
 
-    getArgs : Handler System e =>           Eff e (List String) [SYSTEM]
-    time    : Handler System e =>           Eff e Int [SYSTEM]
-    getEnv  : Handler System e => String -> Eff e (Maybe String) [SYSTEM]
+    getArgs :           Eff (List String) [SYSTEM]
+    time    :           Eff Int [SYSTEM]
+    getEnv  : String -> Eff (Maybe String) [SYSTEM]
 
     Handler System IO where { ... }
     Handler System (IOExcept a) where { ... }
diff --git a/docs/elaboratorReflection/elabReflection.rst b/docs/elaboratorReflection/elabReflection.rst
new file mode 100644
index 000000000..f2866f93a
--- /dev/null
+++ b/docs/elaboratorReflection/elabReflection.rst
@@ -0,0 +1,60 @@
+Extending Idris using Elaborator Reflection
+===========================================
+
+Idris provides a mechanism to modify the language without having to recompile Idris itself. We can think of this in terms of metaprogramming or domain specific languages or just building in new capabilities.
+
+In order to extend the language we need to know something about how Idris is compiled. This page explains only what is needed to customise the elaboration. For more information about the compiler's implementation see `Edwin Brady's 2013 paper`_ and for customising the elaboration process see `Elaborator reflection: extending Idris in Idris`_ and `David Christiansen's PhD thesis`_.
+
+Compilation of Idris proceeds through a number of stages.
+
+- First, Idris is desugared by inserting placeholders for terms to be guessed by the compiler and replacing certain syntactic forms, such as do-notation, with the functions that implement them.
+- Then, this desugared Idris is translated into a much simpler core language, called TT. This translation process is called elaboration.
+- Finally, TT is type checked a second time to rule out errors, and then compiled into the target language.
+
+.. image:: ../image/idrisTopLevel.png
+   :width: 484px
+   :height: 147px
+   :alt: diagram illustrating these stages of Idris compilation
+
+TT is a core language which is syntactically very simple. This makes it easy for computers to process but very verbose and hard for humans to read. The Idris elaborator is written in Haskell using an elaboration library that was inspired by the tactics in interactive proof assistants such as Coq.
+
+.. list-table::
+
+   * - There are some similarities with a proof assistant but in Idris the elaborator is an interpreter of Idris source in the elaboration monad, where each syntactic construct of Idris is interpreted as a sequence of tactics.
+     - .. image:: ../image/compareToProofAssist.png
+          :width: 206px
+          :height: 112px
+          :alt: diagram comparing elaboration with proof assistant
+
+The primitives in the elaboration library are not just useful for the implementors of Idris itself. They can also be used by authors of extensions to the compiler, using a mechanism known as elaborator reflection.
+During elaboration TT (Raw) structure contains:
+
+- holes - placeholders for terms that have not yet been filled in.
+- guesses - similar to let bindings, except with no reduction rule, so that elaboration programs can control the precise shape of terms that are under construction.
+
+For more information about holes and guesses see `Dependently Typed Functional Programs and their Proofs by McBride 1999`_.
+
+The following diagram is intended to illustrate a high level view of the tactics and how this eventually results in the TT language being generated. It is not necessary to understand the details at this stage. The intention is to help build up some intuition so that, when we get into the details, we can recognise how this fits into the big picture.
+
+.. image:: ../image/elabOverview.png
+   :width: 410px
+   :height: 282px
+   :alt: diagram illustrating overview of TT language being generated from tactics.
+
+As already mentioned the TT core language is kept syntactically very simple, for instance, here are the binders in TT with corresponding code and logic type validity rules:
+
+.. list-table::
+
+   * - This diagram illustrates the basis of the compilation process in logic (in this case for binders). It is not necessary to be an expert logician to understand elaborator reflection. However, when learning about tactics, they may appear arbitrary without knowing some theory. For more information about this see `Edwin Brady's 2013 paper`_.
+     - .. image:: ../image/binders.png
+          :width: 310px
+          :height: 203px
+          :alt: diagram illustrating basis of code in logic
+
+.. target-notes::
+.. _`Edwin Brady's 2013 paper`: https://eb.host.cs.st-andrews.ac.uk/drafts/impldtp.pdf
+.. _`Elaborator reflection: extending Idris in Idris`: https://dl.acm.org/citation.cfm?doid=2951913.2951932
+.. _`David Christiansen's PhD thesis`: https://davidchristiansen.dk/david-christiansen-phd.pdf
+.. _`Dependently Typed Functional Programs and their Proofs by McBride 1999`: https://www.era.lib.ed.ac.uk/handle/1842/374
+
+
diff --git a/docs/reference/elaborator-reflection.rst b/docs/elaboratorReflection/elaborator-reflection.rst
similarity index 93%
rename from docs/reference/elaborator-reflection.rst
rename to docs/elaboratorReflection/elaborator-reflection.rst
index 06c38501e..782be0235 100644
--- a/docs/reference/elaborator-reflection.rst
+++ b/docs/elaboratorReflection/elaborator-reflection.rst
@@ -1,8 +1,8 @@
 .. _elaborator-reflection:
 
-*********************
-Elaborator Reflection
-*********************
+**********************************
+Elaborator Reflection Introduction
+**********************************
 
 The Idris elaborator is responsible for converting high-level Idris code into the core language.
 It is implemented as a kind of embedded tactic language in Haskell, where tactic scripts are written in an *elaboration monad* that provides error handling and a proof state.
@@ -198,6 +198,12 @@ This is primarily useful for code generation, particularly for generating patter
 
 Learn More
 ==========
-While this documentation is still incomplete, elaboration reflection works in Idris today.
-As you wait for the completion of the documentation, the list of built-in tactics can be obtained using the ``:browse`` command in an Idris REPL or the corresponding feature in one of the graphical IDE clients to explore the ``Language.Reflection.Elab.Tactics`` namespace.
+
+Some tactics are introduced in the :ref:`proofs-index` section with further details, of those most relevant to elaborator reflection, on the following pages.
+
+The list of built-in tactics can be obtained using the ``:browse`` command in an Idris REPL or the corresponding feature in one of the graphical IDE clients to explore the ``Language.Reflection.Elab.Tactics`` namespace.
 All of the built-in tactics contain documentation strings.
+
+For alternative ways to extend the Idris language see the :ref:`reference-index` section.
+
+The following pages explain more about the theory and practice of elaborator reflection.
diff --git a/docs/elaboratorReflection/example1.rst b/docs/elaboratorReflection/example1.rst
new file mode 100644
index 000000000..9ba1e97e2
--- /dev/null
+++ b/docs/elaboratorReflection/example1.rst
@@ -0,0 +1,192 @@
+Elaborator Reflection - Identity Example
+========================================
+
+.. list-table::
+
+   * - This example of elaborator reflection steps through this metaprogram that generates the identity function:
+     - .. code-block:: idris
+
+         %language ElabReflection
+
+         idNat : Nat -> Nat
+         idNat = %runElab (do intro `{{x}}
+                              fill (Var `{{x}})
+                              solve)
+
+.. list-table::
+   :widths: 200 100
+
+   * - At the beginning of executing the elaboration script, the initial state consists of a single hole of type Nat -> Nat.
+
+       As a first approximation, the state consists of a term with holes in it, an indicator of which hole is focused, a queue of the next holes to focus on, and miscellaneous information like a source of fresh names. The intro tactic modifies this state, replacing the focused hole with a lambda and focusing on the lambda's body.
+     - .. image:: ../image/tree.png
+          :width: 119px
+          :height: 109px
+
+The following is a walkthough looking at the state after each tactic:
+
+.. list-table::
+
+   * - Start with the type signature like this:
+     - .. code-block:: idris
+
+         %language ElabReflection
+
+         idNat : Nat -> Nat
+         idNat = %runElab (do
+
+   * - In order to investigate how the program works this table shows the proof state at each stage as the tactics are applied. So here is the proof state at the start:
+     - .. image:: ../image/elabProofStateEx1_1.png
+          :width: 310px
+          :height: 115px
+
+   * - This table shows the hole types and what they depend on. The aim is to illustrate the types by analogy with proofs, as a line with the premises above it and the conclusion below it.
+     - .. image:: ../image/elabLogicEx1_1.png
+          :width: 277px
+          :height: 15px
+
+   * - The term is:
+     - ?{hole_0} ≈ ? {hole_2} . {hole_2} . {hole_0}
+
+   * - It is possible to read the state from the script by calling getEnv, getGoal and getHoles.
+
+     - The output of these calls contain structures with TT code. To show the results I hacked this: `my code`_. TT code is not really designed to be readable by humans, all the names are fully expanded, everything has a type down to universes (type of types). This is shown here to illustrate the information available.
+
+       .. code-block:: idris
+
+         getEnv=[]
+
+         getGoal=(hole_2, __pi_arg:(Nat.["Nat", "Prelude"]:{
+            type constructor tag=8 number=0}.Type:U=(20:./Prelude/Nat.idr)->.
+               {name ref{type constructor tag=8 number=0}Nat.["Nat","Prelude"]:
+                    Type:U=(20:./Prelude/Nat.idr)
+               })
+            })
+
+         getHoles=[{hole_2},{hole_0}]
+
+   * - getGuess
+     - error no guess
+
+   * - Introduce a lambda binding around the current hole and focus on the body.
+     - intro \`{{x}}
+
+   * - The state now looks like this:
+     - .. image:: ../image/elabProofStateEx1_2.png
+          :width: 312px
+          :height: 84px
+
+   * - The hole types now looks like this:
+     - .. image:: ../image/elabLogicEx1_2.png
+          :width: 279px
+          :height: 26px
+
+   * - The term now looks like this:
+     - ?{hole_0} ≈ λ x . ? {hole_2} . {hole_2} . {hole_0}
+
+   * - Again we can check the state by calling getEnv, getGoal and getHoles: see `my code`_
+
+     - .. code-block:: idris
+
+         getEnv=[(x, {λ (Nat.["Nat", "Prelude"]:{
+            type constructor tag=8 number=0}).
+               Type:U=(20:./Prelude/Nat.idr)
+            })]
+
+         getGoal=(hole_2, {name ref{type constructor tag=8 number=0}
+            Nat.["Nat","Prelude"]:Type:U=(20:./Prelude/Nat.idr)
+            })
+
+          getHoles=[{hole_2},{hole_0}]
+
+   * - getGuess
+     - error no guess
+
+   * - Place a term into a hole, unifying its type
+     - fill (Var \`{{x}})
+
+   * - The state still looks like this:
+     - .. image:: ../image/elabProofStateEx1_3.png
+          :width: 312px
+          :height: 57px
+
+   * - The hole types now looks like this:
+     - .. image:: ../image/elabLogicEx1_3.png
+          :width: 290px
+          :height: 26px
+
+   * - The term now looks like this:
+     - ?{hole_0} ≈ λ x . ?{hole_2} ≈ x . {hole_2} . {hole_0}
+
+   * - Again we can check the state by calling getEnv, getGoal and getHoles: see `my code`_
+
+     - .. code-block:: idris
+
+         getEnv=[(x, {λ (Nat.["Nat", "Prelude"]:
+            {type constructor tag=8 number=0}).
+               Type:U=(20:./Prelude/Nat.idr)
+            })]
+
+         getGoal=(hole_2, {name ref{type constructor tag=8 number=0}
+            Nat.["Nat","Prelude"]:Type:U=(20:./Prelude/Nat.idr)
+            })
+
+         getHoles=[{hole_2}, {hole_0}]
+
+   * - getGuess
+     - .. code-block:: idris
+
+         {name ref bound x:
+           {name ref{type constructor tag=8 number=0}
+              Nat.["Nat","Prelude"]:Type:U=(20:./Prelude/Nat.idr)
+           }
+         }
+
+   * - Substitute a guess into a hole.
+     - solve
+
+   * - The hole types now looks like this:
+     - .. image:: ../image/elabLogicEx1_4.png
+          :width: 131px
+          :height: 14px
+
+   * - The term now looks like this:
+     - ?{hole_0} ≈ λ x . x . {hole_0}
+
+   * - getEnv
+
+       getGoal
+
+       getHoles
+
+     - .. code-block:: idris
+
+         getEnv=[]
+
+         getGoal=(hole_0, __pi_arg:(Nat.["Nat", "Prelude"]:{
+           type constructor tag=8 number=0}.
+              Type:U=(20:./Prelude/Nat.idr)
+           ->.{name ref
+             {type constructor tag=8 number=0}
+                Nat.["Nat","Prelude"]:Type:U=(20:./Prelude/Nat.idr)
+             })
+          })
+
+         getHoles=[{hole_0}]
+
+   * - getGuess
+     - .. code-block:: idris
+
+         x:({λ (Nat.["Nat", "Prelude"]:{
+           type constructor tag=8 number=0}).
+              Type:U=(20:./Prelude/Nat.idr)
+            }.{
+            name ref bound
+              x:{name ref {type constructor tag=8 number=0}
+                Nat.["Nat","Prelude"]:Type:U=(20:./Prelude/Nat.idr)
+                }
+              })
+            }
+
+.. target-notes::
+.. _`my code`: https://github.com/martinbaker/Idris-dev/blob/uglyTTPrinter/libs/prelude/Language/Reflection/TTPrinter.idr
diff --git a/docs/elaboratorReflection/generatingData.rst b/docs/elaboratorReflection/generatingData.rst
new file mode 100644
index 000000000..9c43e7bb6
--- /dev/null
+++ b/docs/elaboratorReflection/generatingData.rst
@@ -0,0 +1,385 @@
+Generating Datatypes and Functions at Compile Time
+==================================================
+
+Program elements, such as datatypes and functions can be constructed at compile-time in the Elab monad.
+This can allow proofs to be generated for user defined types or it could allow types to be automatically generated to support user defined types.
+An example is the code, from `Elaborator reflection: extending Idris in Idris`_, that automatically generates accessibility predicates using the Bove-Capretta method.
+
+Generating Datatypes
+--------------------
+
+There are two main 'tactics' associated with generating datatypes:
+
+- declareDatatype
+- defineDatatype
+
+Which declare and define the datatype as the names suggest.
+
+.. list-table::
+
+   * - These 'tactics' and the data structures associated with them are listed in the tables later on this page, for now, here is a summary:
+     - .. image:: ../image/generateDatatype.png
+          :width: 332px
+          :height: 246px
+          :alt: diagram illustrating data structures associated with declareDatatype defineDatatype.
+
+.. list-table::
+
+   * - As a first example, the following boolean-like type can be constructed. When the compiler has run it will be available to us as if we had compiled it in the usual way:
+     - .. code-block:: idris
+
+         λΠ> :printdef Two
+         data Two : Type where
+         F : Two
+         T : Two
+
+This was generated by the following code:
+
+.. code-block:: idris
+
+  module TwoDef
+  %language ElabReflection
+
+  addTwo : Elab ()
+  addTwo = do let twoname : TTName = `{{TwoDef.Two}}
+              let F2 = `{{TwoDef.F}}
+              let T2 = `{{TwoDef.T}}
+              declareDatatype $ Declare twoname [] `(Type)
+              defineDatatype $ DefineDatatype twoname [
+                 Constructor `{{F}} [] (Var `{{TwoDef.Two}}),
+                 Constructor `{{T}} [] (Var `{{TwoDef.Two}})
+              ]
+
+  %runElab addTwo
+
+.. list-table::
+
+   * - The constructors T and F can be called as would be expected:
+     - .. code-block:: idris
+
+         λΠ> F
+         F : Two
+         λΠ> T
+         T : Two
+
+Generating Functions
+--------------------
+
+There are two main 'tactics' associated with generating functions:
+
+- declareType
+- defineFunction
+
+Which declare and define the function as the names suggest.
+
+.. list-table::
+
+   * - These 'tactics' and the data structures associated with them are listed in the tables later on this page, for now, here is a summary:
+     - .. image:: ../image/generateFunction.png
+          :width: 332px
+          :height: 246px
+          :alt: diagram illustrating data structures associated with function declare and define.
+
+Note: The left hand side (lhs) and right hand side (rhs) of FunClause typically is of type 'Raw'.
+
+.. list-table::
+
+   * - Bound pattern variables are represented by 'PVar' binders:
+       This diagram shows an example of a possible Raw structure that might be used in a function definition.
+     - .. image:: ../image/generateFunction2.png
+          :width: 264px
+          :height: 239px
+          :alt: diagram illustrating data structures associated with functions.
+
+.. list-table::
+
+   * - Some function definitions can now be added to the above datatype. This is what they will look like:
+     - .. code-block:: idris
+
+         λΠ> :printdef perm1
+         perm1 : Two -> Two
+         perm1 F = F
+         perm1 T = T
+         λΠ> :printdef perm2
+         perm2 : Two -> Two
+         perm1 F = T
+         perm1 T = F
+
+This was generated with the following code:
+
+.. code-block:: idris
+
+  let perm1 = `{{TwoDef.perm1}}
+  declareType (Declare perm1 [MkFunArg `{{code}} (Var twoname) Explicit NotErased] (Var twoname))
+  defineFunction $ DefineFun perm1 [
+    MkFunClause (RApp (Var perm1) (Var `{{TwoDef.F}})) (Var F2),
+    MkFunClause (RApp (Var perm1) (Var `{{TwoDef.T}})) (Var T2)
+  ]
+
+  let perm2 = `{{TwoDef.perm2}}
+  declareType (Declare perm2 [MkFunArg `{{code}} (Var twoname) Explicit NotErased] (Var twoname))
+  defineFunction $ DefineFun perm2 [
+    MkFunClause (RApp (Var perm1) (Var `{{TwoDef.F}})) (Var T2),
+    MkFunClause (RApp (Var perm1) (Var `{{TwoDef.T}})) (Var F2)
+  ]
+
+.. list-table::
+
+   * - This is what happens when we call the functions:
+     - .. code-block:: idris
+
+         λΠ> perm1 F
+         F : Two
+         λΠ> perm1 T
+         T : Two
+         λΠ> perm2 F
+         T : Two
+         λΠ> perm2 T
+         F : Two
+
+So far these datatypes and functions could have been written, statically, in the usual way. However, it is possible to imagine situations where we may need a lot of functions to be generated automatically at compile time. For example, if we extend this Boolean datatype to a datatype with more simple constructors (a finite set), we could generate a function for every possible permutation of that datatype back to itself.
+
+A Different Example which has Type Parameters
+---------------------------------------------
+
+.. list-table::
+
+   * - Here is an example of a datatype with type parameters:
+     - .. code-block:: idris
+
+         data N : Nat -> Type where
+           MkN : N x
+           MkN' : (x : Nat) -> N (S x)
+
+This was produced by the following code:
+
+.. code-block:: idris
+
+  module DataDef
+  %language ElabReflection
+
+  addData : Elab ()
+  addData = do
+    let dataname : TTName = `{{DataDef.N}}
+    declareDatatype $ Declare dataname [MkFunArg `{{n}} `(Nat) Explicit NotErased] `(Type)
+    defineDatatype $ DefineDatatype dataname [
+        Constructor `{{MkN}} [MkFunArg `{{x}} `(Nat) Implicit NotErased]
+            (RApp (Var dataname) (Var `{{x}})),
+        Constructor `{{MkN'}} [MkFunArg `{{x}} `(Nat) Explicit NotErased]
+            (RApp (Var dataname) (RApp (Var `{S}) (Var `{{x}})))
+    ]
+
+  %runElab addData
+
+So this declares and defines the following data structure 'N' with a constructor 'MkN' which can have an implicit or an explicit Nat argument. Which can be used like this:
+
+.. code-block:: idris
+
+  λΠ> :t N
+  N : Nat -> Type
+  λΠ> N 2
+  N 2 : Type
+  λΠ> N 0
+  N 0 : Type
+  λΠ> :t MkN
+  MkN : N x
+
+Table of 'tactics' for Generating Data and Functions
+----------------------------------------------------
+
+These are the functions that we can use to create data and functions in the Elab monad:
+
+.. list-table::
+   :widths: 10 30
+   :stub-columns: 1
+
+   * - declareType
+     - Add a type declaration to the global context.
+
+       Signature:
+
+       declareType : TyDecl -> Elab ()
+   * - defineFunction
+     - Define a function in the global context. The function must have already been declared, either in ordinary Idris code or using `declareType`.
+
+       Signature:
+
+       defineFunction : FunDefn Raw -> Elab ()
+
+   * - declareDatatype
+     - Declare a datatype in the global context. This step only establishes the type constructor; use `defineDatatype` to give it constructors.
+
+       Signature:
+
+       declareDatatype : TyDecl -> Elab ()
+
+   * - defineDatatype
+     - Signature:
+
+       defineDatatype : DataDefn -> Elab ()
+
+   * - addImplementation
+     - Register a new implementation for interface resolution.
+
+       Arguments:
+
+       - ifaceName the name of the interface for which an implementation is being registered
+       - implName the name of the definition to use in implementation search
+
+       Signature:
+
+       addImplementation : (ifaceName, implName : TTName) -> Elab ()
+
+   * - isTCName
+     - Determine whether a name denotes an interface.
+
+       Arguments:
+
+       - name - a name that might denote an interface.
+
+       Signature:
+
+       isTCName : (name : TTName) -> Elab Bool
+
+Table of Datatypes Associated with Generating Data and Functions
+----------------------------------------------------------------
+
+The above functions use the following data/records:
+
+.. list-table::
+   :widths: 10 30
+   :stub-columns: 1
+
+   * - Plicity
+     - How an argument is provided in high-level Idris
+
+       .. code-block:: idris
+
+         data  Plicity=
+           ||| The argument is directly provided at the application site
+           Explicit |
+           ||| The argument is found by Idris at the application site
+           Implicit |
+           ||| The argument is solved using interface resolution
+           Constraint
+
+   * - FunArg
+     - Function arguments
+ 
+       These are the simplest representation of argument lists, and are used for functions. Additionally, because a FunArg provides enough
+       information to build an application, a generic type lookup of a top-level identifier will return its FunArgs, if applicable.
+
+       .. code-block:: idris
+
+         record FunArg where
+           constructor MkFunArg
+           name    : TTName
+           type    : Raw
+           plicity : Plicity
+           erasure : Erasure
+
+   * - TyConArg
+     - Type constructor arguments
+
+       Each argument is identified as being either a parameter that is
+
+       consistent in all constructors, or an index that varies based on
+
+       which constructor is selected.
+
+       .. code-block:: idris
+
+          data TyConArg =
+            ||| Parameters are uniform across the constructors
+            TyConParameter FunArg |
+            ||| Indices are not uniform
+            TyConIndex FunArg
+
+   * - TyDecl
+     - A type declaration for a function or datatype
+
+       .. code-block:: idris
+
+         record TyDecl where
+           constructor Declare
+           ||| The fully-qualified name of the function or datatype being declared.
+           name : TTName
+           ||| Each argument is in the scope of the names of previous arguments.
+           arguments : List FunArg
+           ||| The return type is in the scope of all the argument names.
+           returnType : Raw
+
+   * - FunClause
+     - A single pattern-matching clause
+
+       .. code-block:: idris
+
+         data FunClause : Type -> Type where
+           MkFunClause : (lhs, rhs : a) -> FunClause a
+           MkImpossibleClause : (lhs : a) -> FunClause a
+
+   * - FunDefn
+     - A reflected function definition.
+
+       .. code-block:: idris
+
+         record FunDefn a where
+           constructor DefineFun
+           name : TTName
+           clauses : List (FunClause a)
+
+   * - ConstructorDefn
+     - A constructor to be associated with a new datatype.
+
+       .. code-block:: idris
+
+         record ConstructorDefn where
+           constructor Constructor
+           ||| The name of the constructor. The name must _not_ be qualified -
+           ||| that is, it should begin with the `UN` or `MN` constructors.
+           name : TTName
+           ||| The constructor arguments. Idris will infer which arguments are
+           ||| datatype parameters.
+           arguments : List FunArg
+           ||| The specific type constructed by the constructor.
+           returnType : Raw
+
+   * - DataDefn
+     - A definition of a datatype to be added during an elaboration script.
+
+       .. code-block:: idris
+
+         record DataDefn where
+           constructor DefineDatatype
+           ||| The name of the datatype being defined. It must be
+           ||| fully-qualified, and it must have been previously declared as a
+           ||| datatype.
+           name : TTName
+           ||| A list of constructors for the datatype.
+           constructors : List ConstructorDefn
+
+   * - CtorArg
+     - CtorParameter
+
+       .. code-block:: idris
+
+         data CtorArg = CtorParameter FunArg | CtorField FunArg
+
+   * - Datatype
+     - A reflected datatype definition
+
+       .. code-block:: idris
+
+         record Datatype where
+           constructor MkDatatype
+           ||| The name of the type constructor
+           name : TTName
+           ||| The arguments to the type constructor
+           tyConArgs : List TyConArg
+           ||| The result of the type constructor
+           tyConRes : Raw
+           ||| The constructors for the family
+           constructors : List (TTName, List CtorArg, Raw)</td>
+
+.. target-notes::
+.. _`Elaborator reflection: extending Idris in Idris`: https://dl.acm.org/citation.cfm?doid=2951913.2951932
diff --git a/docs/elaboratorReflection/holes.rst b/docs/elaboratorReflection/holes.rst
new file mode 100644
index 000000000..731b0a8b4
--- /dev/null
+++ b/docs/elaboratorReflection/holes.rst
@@ -0,0 +1,196 @@
+Elaborator Reflection - Holes
+=============================
+
+The process of doing proofs and elaborator reflection tends to involve stating with a desired conclusion and working back to known premises. This often needs intermediate sub-goals which may only be partially solved, these are encoded using 'holes' and 'guesses'.
+
+* A hole is a term (an expression - a chunk of code) which is yet to be determined. We do have information about its type (this process tends to be type driven).
+* A guess is like a hole that is not yet bound.
+
+The theory around this was developed in `Dependently Typed Functional Programs and their Proofs by McBride 1999`_.
+
+Notation for Holes and Guesses
+------------------------------
+
+There is a notation used in the McBride 1999 thesis which is adapted for the TT language. When working on elaborator reflection it is useful to know this notation, for instance when reading the output of the 'debug' tactic.
+
+* A focused hole is notated like this ?x:t . t
+* A guess is notated like this ?x ≈ t:t . t
+
+The following example shows how this is used:
+
+Simple Example
+--------------
+
+Start with a code file that just contains:
+
+.. code-block:: idris
+
+  %language ElabReflection
+
+  testFn : Nat
+  testFn = %runElab (do debug {a = ()})
+
+when this is loaded the following is displayed:
+
+.. code-block:: idris
+
+  Holes:
+        ----------------------------------
+        {hole_2} : Prelude.Nat.Nat
+
+        ----------------------------------
+        {hole_0} : Prelude.Nat.Nat
+
+  Term:
+        ?{hole_0} ≈ ? {hole_2} . {hole_2} . {hole_0}
+
+This shows information about the state when debug is encountered, during tactic execution, which allows us to investigate what is happening at each stage.
+
+* The "Holes" part shows the types of the holes and the local context of each
+* The "Term" part shows where these holes are in the expression being constructed.
+
+So starting with the "Term" part we have.
+
+.. code-block:: idris
+
+  ?{hole_0} ≈ ? {hole_2} . {hole_2} . {hole_0}
+
+.. sidebar:: attack tactic
+
+  This kind of thing tends to arise from "attack", which helps keep binding forms in order.
+
+The meaning of this is not immediately apparent so it helps to add some parentheses to make the structure clearer:
+
+.. code-block:: idris
+
+  (?{hole_0} ≈ (? {hole_2} . {hole_2}) . {hole_0})
+
+First lets look at the inner part:
+
+.. code-block:: idris
+
+  ? {hole_2} . {hole_2}
+
+We can substitute in the type from the "Holes" part:
+
+.. code-block:: idris
+
+  ? {hole_2}:Nat . {hole_2}:Nat
+
+So we are looking for a hole of type Nat and all we know is it has type Nat.
+
+Going back to the full term, the above is wrapped in a guess, so it means: 'a guess that is itself a hole'.
+
+Since the elaborator does not have any further information it has to be given a value:
+
+.. code-block:: idris
+
+  %language ElabReflection
+
+  testFn : Nat
+  testFn = %runElab (do fill `(Z)
+                        debug {a = ()}
+                        solve)
+
+Now we have a guess for hole_2 which is itself a guess for hole_0:
+
+.. code-block:: idris
+
+  ?{hole_0} ≈ ?{hole_2} ≈ Prelude.Nat.Z . {hole_2} . {hole_0}
+
+The guesses can be accepted by calling the 'solve' tactic.
+
+Example Showing Patterns
+------------------------
+
+In this next example a parameter 'n' has been added to the function. This allows us to see how patterns are used. Starting with this file:
+
+.. code-block:: idris
+
+  %language ElabReflection
+
+  testFn : Nat -> Nat
+  testFn n = %runElab (do debug {a = ()})
+
+when loaded gives:
+
+.. code-block:: idris
+
+  Holes:
+        n : Prelude.Nat.Nat
+        ----------------------------------
+        {hole_3} : Prelude.Nat.Nat
+
+        n : Prelude.Nat.Nat
+        ----------------------------------
+        {hole_1} : Prelude.Nat.Nat
+
+        ----------------------------------
+        {hole_0} : patTy n : Prelude.Nat.Nat . Prelude.Nat.Nat
+
+  Term: 
+        ?{hole_0} ≈ pat n : Prelude.Nat.Nat .
+                      ?{hole_1} ≈ ? {hole_3} . {hole_3} . {hole_1} .
+          {hole_0}
+
+The ns above the lines show the context of the holes on the right hand side - they include the variable n that is an argument!
+
+patTy is a binding form in Idris's core language that introduces a pattern variable. The idea is that the left-hand side and right-hand side of each pattern should have the same type. Because pattern variables may occur multiple times on either side of the equation, we can achieve this by documenting their types with a binding form that wraps each side. This new binding form is why an "attack" was necessary prior to elaborating the RHS.
+
+patTy is a type former, and pat is the corresponding introduction form. So you can think of patTy as being a bit like a dependent function type, and pat as being a bit like lambda, except they don't introduce functions (they instead are used for pattern-matching definitions).
+
+More Complicated Example
+------------------------
+
+This example does not introduce any new notation but the extra complexity gives a more realistic idea of how it is used. Here we start with this file:
+
+.. code-block:: idris
+
+  %language ElabReflection
+
+  testFn : (n : Nat) -> (n = plus n Z) -> (S n = S (plus n Z))
+  testFn k ih = %runElab (do debug {a = ()})
+
+when loaded gives:
+
+.. code-block:: idris
+
+  Holes:
+        k : Prelude.Nat.Nat
+        ih : = Prelude.Nat.Nat Prelude.Nat.Nat k
+               (Prelude.Nat.plus k Prelude.Nat.Z)
+        ----------------------------------
+        {hole_4} : = Prelude.Nat.Nat Prelude.Nat.Nat (Prelude.Nat.S k)
+                     (Prelude.Nat.S (Prelude.Nat.plus k Prelude.Nat.Z))
+
+        k : Prelude.Nat.Nat
+        ih : = Prelude.Nat.Nat Prelude.Nat.Nat k
+               (Prelude.Nat.plus k Prelude.Nat.Z)
+        ----------------------------------
+        {hole_2} : = Prelude.Nat.Nat Prelude.Nat.Nat (Prelude.Nat.S k)
+                     (Prelude.Nat.S (Prelude.Nat.plus k Prelude.Nat.Z))
+
+        k : Prelude.Nat.Nat
+        ----------------------------------
+        {hole_1} : patTy ih : = Prelude.Nat.Nat Prelude.Nat.Nat k
+                                (Prelude.Nat.plus k Prelude.Nat.Z) .
+                     = Prelude.Nat.Nat Prelude.Nat.Nat (Prelude.Nat.S k)
+                       (Prelude.Nat.S (Prelude.Nat.plus k Prelude.Nat.Z))
+
+        ----------------------------------
+        {hole_0} : patTy k : Prelude.Nat.Nat .
+                     patTy ih : = Prelude.Nat.Nat Prelude.Nat.Nat k
+                                  (Prelude.Nat.plus k Prelude.Nat.Z) .
+                       = Prelude.Nat.Nat Prelude.Nat.Nat (Prelude.Nat.S k)
+                         (Prelude.Nat.S (Prelude.Nat.plus k Prelude.Nat.Z))
+
+  Term: 
+        ?{hole_0} ≈ pat k : Prelude.Nat.Nat .
+                      ?{hole_1} ≈ pat ih : = Prelude.Nat.Nat Prelude.Nat.Nat k
+                                             (Prelude.Nat.plus k Prelude.Nat.Z) .
+                                    ?{hole_2} ≈ ? {hole_4} . {hole_4} . {hole_2} .
+                        {hole_1} .
+          {hole_0}
+
+.. target-notes::
+.. _`Dependently Typed Functional Programs and their Proofs by McBride 1999`: https://www.era.lib.ed.ac.uk/handle/1842/374
diff --git a/docs/elaboratorReflection/index.rst b/docs/elaboratorReflection/index.rst
new file mode 100644
index 000000000..f8f3402cc
--- /dev/null
+++ b/docs/elaboratorReflection/index.rst
@@ -0,0 +1,27 @@
+.. _elaborator-index:
+
+#####################
+Elaborator Reflection
+#####################
+
+A tutorial on theorem proving in Idris.
+
+.. note::
+
+   The documentation for Idris has been published under the Creative
+   Commons CC0 License. As such to the extent possible under law, *The
+   Idris Community* has waived all copyright and related or neighboring
+   rights to Documentation for Idris.
+
+   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+
+.. toctree::
+   :maxdepth: 1
+
+   elaborator-reflection
+   elabReflection
+   tactics
+   holes
+   example1
+   primitive
+   generatingData
diff --git a/docs/elaboratorReflection/primitive.rst b/docs/elaboratorReflection/primitive.rst
new file mode 100644
index 000000000..89b87ab3f
--- /dev/null
+++ b/docs/elaboratorReflection/primitive.rst
@@ -0,0 +1,518 @@
+Primitive Operators
+===================
+
+.. list-table::
+   :widths: 10 30
+   :stub-columns: 1
+
+   * - gensym
+     - Generate a unique name based on some hint.
+
+       Useful when establishing a new binder.
+
+       **NB**: the generated name is unique **for this run of the elaborator**.
+
+       Do not assume that they are globally unique.
+
+       Signature:
+
+       gensym : (hint : String) -> Elab TTName
+
+   * - solve
+     - Substitute a guess into a hole.
+
+
+       .. image:: ../image/solve.png
+          :width: 141px
+          :height: 74px
+          :alt: diagram illustrating solve tactic
+
+
+       Substitute the focused guess throughout its scope, eliminating it and moving focus to the next element of the hole queue. Fail if the focus is not a guess.
+
+       Signature:
+
+       solve : Elab ()
+
+        Example:
+
+        .. code-block:: idris
+
+          %language ElabReflection
+
+          testFn : Nat
+          testFn = %runElab (do fill `(Z)
+                                solve)
+
+   * - fill
+     -  Place a term into a hole, unifying its type. Fails if the focus is not a hole.
+
+
+        .. image:: ../image/fill.png
+           :width: 140px
+           :height: 74px
+           :alt: diagram illustrating fill tactic
+
+
+        Signature:
+
+        fill : (e : Raw) -> Elab ()
+
+        Place a term e with type tc into the focused hole:
+
+        ?h : th.e'
+
+        and convert it to a guess:
+
+        ?h ≈ e:t.e'
+
+        and fail if the current focus is not a hole. The type t of the  guess is constructed by unifying tc and th, which may instantiate holes that they refer to. Fail if the current focus is not a hole or if unification fails.
+
+        This unification can result in the solution of further holes or the establishment of additional unsolved unification constraints.
+
+        Example:
+
+        .. code-block:: idris
+
+          %language ElabReflection
+
+          testFn : Nat
+          testFn = %runElab (do fill `(Z)
+                                solve)
+
+   * - apply
+     - Attempt to apply an operator to fill the current hole, potentially solving arguments by unification.
+
+       A hole is established for each argument.
+
+       The return value is the list of holes established for the arguments to the function.
+
+       Note that not all of the returned hole names still exist, as they may have been solved.
+
+       - @ op the term to apply
+       - @ argSpec - A list of booleans, one for each argument that the operator will be applied to. If true then attempt to solve the argument by unification.
+
+       Signature:
+
+       apply : (op : Raw) -> (argSpec : List Bool) -> Elab (List TTName)
+
+       Example: elaborating an application of a function f that takes one implicit and two explicit arguments might invoke:
+
+       apply \`(f) [False, True, True]
+
+       Here is an example of an elab script that uses apply to insert the term plus Z (S Z) into a goal of type Nat.
+
+       .. code-block:: idris
+
+         do [x,y] <- apply `(plus) [False, False] 
+         solve
+         focus x; fill `(Z); solve
+         focus y; fill `(S Z); solve
+
+       The names of the established holes are returned.
+
+       Note: This was added to the original tactic language to allow elaborator reflection.
+
+   * - matchApply
+     - Attempt to apply an operator to fill the current hole, potentially solving arguments by matching.
+
+       The return value is the list of holes established for the arguments to the function.
+
+       Note that not all of the returned hole names still exist, as they may have been solved.
+
+       - @ op the term to apply
+       - @ argSpec instructions for finding the arguments to the term, where the Boolean states whether or not to attempt to solve the argument by matching.
+
+       Signature:
+
+       matchApply : (op : Raw) -> (argSpec : List Bool) -> Elab (List TTName)
+
+   * - focus
+     - Move the focus to the specified hole, bringing it to the front of the hole queue. Fails if the hole does not exist.
+
+       @ hole the hole to focus on
+
+       Signature:
+
+       focus : (hole : TTName) -> Elab ()
+
+   * - unfocus
+     - Send the currently-focused hole to the end of the hole queue and focus on the next hole.
+
+       Signature:
+
+       unfocus : TTName -> Elab ()
+
+   * - attack
+     - Convert a hole to make it suitable for bindings.
+
+
+       .. image:: ../image/attack.png
+          :width: 152px
+          :height: 70px
+          :alt: diagram illustrating attack tactic
+
+
+       The binding tactics require that a hole be directly under its binding, or else the scopes of the generated terms won't make sense. This tactic creates a new hole of the proper form, and points the old hole at it.
+
+       Signature:
+
+       attack : Elab ()
+
+   * - claim
+     - Establish a new hole binding named n with type t, surrounding the current focus.
+
+       Introduce a new hole with a specified name and type.
+
+       The new hole will be focused, and the previously-focused hole will be immediately after it in the hole queue. Because this tactic introduces a new binding, you may need to 'attack' first.
+
+       Signature:
+
+       claim : TTName -> Raw -> Elab ()
+
+   * - patvar
+     - Convert a hole into a pattern variable.
+
+       Signature:
+
+       patvar : TTName -> Elab ()
+
+   * - compute
+     - Normalise the goal.
+
+       Often this is not necessary because normanisation is applied during other tactics.
+
+       Signature:
+
+       compute : Elab ()
+
+   * - normalise
+     - Normalise a term in some lexical environment
+
+       - @ env the environment in which to compute (get one of these from `getEnv`)
+       - @ term the term to normalise
+
+       Signature:
+
+       normalise : (env : List (TTName, Binder TT)) -> (term : TT) -> Elab TT
+
+   * - whnf
+     - Reduce a closed term to weak-head normal form
+
+       @ term the term to reduce
+
+       Signature:
+
+       whnf : (term : TT) -> Elab TT
+
+   * - convertsInEnv
+     - Check that two terms are convertible in the current context and in some environment.
+
+       - @ env a lexical environment to compare the terms in (see `getEnv`)
+       - @ term1 the first term to convert
+       - @ term2 the second term to convert
+
+       Signature:
+
+       convertsInEnv : (env : List (TTName, Binder TT)) -> (term1, term2 : TT) -> Elab ()
+
+   * - converts
+     - Check that two terms are convertable in the current context and environment
+
+       - @ term1 the first term to convert
+       - @ term2 the second term to convertconverts : (term1, term2 : TT) -> Elab ()
+
+       converts term1 term2 = convertsInEnv !getEnv term1 term2
+
+   * - getSourceLocation
+     - Find the source context for the elaboration script
+
+       Signature:
+
+       getSourceLocation : Elab SourceLocation
+
+   * - sourceLocation
+     - Attempt to solve the current goal with the source code
+
+       locationsourceLocation : Elab ()
+
+       .. code-block:: idris
+
+         sourceLocation = do loc <- getSourceLocation
+           fill (quote loc)
+           solve
+
+   * - currentNamespace
+     - Get the current namespace at the point of tactic execution. This allows scripts to define top-level names conveniently.
+
+       The namespace is represented as a reverse-order list of strings, just as in the representation of names.
+
+       Signature:
+
+       currentNamespace : Elab (List String)
+
+   * - rewriteWith
+     - Attempt to rewrite the goal using an equality.
+
+       The tactic searches the goal for applicable subterms, and constructs a context for `replace` using them. In some cases, this is not possible, and `replace` must be called manually with an appropriate context.
+
+       Because this tactic internally introduces a `let` binding, it requires that the hole be immediately under its binder (use 'attack' if it might not be).
+
+       Signature:
+
+       rewriteWith : Raw -> Elab ()
+
+   * - resolveTC
+     - Attempt to solve the current goal with an interface dictionary
+
+       @ fn the name of the definition being elaborated (to prevent Idris from looping)
+
+       Signature:
+
+       resolveTC : (fn : TTName) -> Elab ()
+
+   * - search
+     - Use Idris's internal proof search.
+
+       Signature:
+
+       search : Elab ()
+
+   * - search'
+     - Use Idris's internal proof search, with more control.
+
+       - @ depth the search depth
+       - @ hints additional names to try
+
+       Signature:
+
+       search' : (depth : Int) -> (hints : List TTName) -> Elab ()
+
+   * - operatorFixity
+     - Look up the declared fixity for an operator.
+
+       The lookup fails if the operator does not yet have a fixity or if the string is not a valid operator.
+
+       @ operator the operator string to look up
+
+       Signature:
+
+       operatorFixity : (operator : String) -> Elab Fixity
+
+   * - debug
+     - Halt elaboration, dumping the internal state for inspection.
+
+       This is intended for elaboration script developers, not for end-users. Use `fail` for final scripts.
+
+       Signature:
+
+       debug : Elab a
+
+       If 'debug' is not the last tactic then make sure its type is sufficiently constrained. In particular, its type is Elab a, but there's no way for Idris to find out which type was meant for a. This can be fixed by either writing an explicit type (e.g. debug {a = ()}) or by using a helper that constrains the type (such as simple in Pruviloj, e.g. simple debug as a line).
+
+       .. code-block:: idris
+
+         %language ElabReflection
+
+         idNat : Nat -> Nat
+         idNat = %runElab (do intro `{{x}}
+                              debug {a = ()}
+                              fill (Var `{{x}})
+                              solve)
+
+   * - debugMessage
+     - Halt elaboration, dumping the internal state and displaying a message.
+
+       This is intended for elaboration script developers, not for end-users. Use `fail` for final scripts.
+
+       @ msg the message to display
+
+       Signature:
+
+       debugMessage : (msg : List ErrorReportPart) -> Elab a 
+
+       If 'debugMessage' is not the last tactic then make sure its type is sufficiently constrained. In particular, its type is Elab a, but there's no way for Idris to find out which type was meant for a. This can be fixed by either writing an explicit type (e.g. debugMessage [TextPart "message"] {a = ()}) or by using a helper that constrains the type (such as simple in Pruviloj, e.g. simple debug as a line).
+
+       .. code-block:: idris
+
+          %language ElabReflection
+          idNat : Nat -> Nat
+          idNat = %runElab (do intro `{{x}}
+                               debugMessage [TextPart "error message"] {a = ()}
+                               fill (Var `{{x}})
+                               solve)
+
+   * - metavar
+     - Create a new top-level metavariable to solve the current hole.
+
+       @ name the name for the top-level variable
+
+       Signature:
+
+       metavar : (name : TTName) -> Elab ()
+
+   * - runElab
+     - Recursively invoke the reflected elaborator with some goal.
+
+       The result is the final term and its type.
+
+       Signature:
+
+       runElab : Raw -> Elab () -> Elab (TT, TT)
+
+
+Read and Write State
+--------------------
+
+.. list-table::
+   :widths: 10 30
+   :stub-columns: 1
+
+   * - getEnv
+     - Look up the lexical binding at the focused hole. Fails if no holes are present.
+
+       Signature:
+
+       getEnv : Elab (List (TTName, Binder TT))
+
+   * - getGoal
+     - Get the name and type of the focused hole. Fails if not holes are present.
+
+       Signature:
+
+       getGoal : Elab (TTName, TT)
+
+   * - getHoles
+     - Get the hole queue, in order.
+
+       Signature:
+
+       getHoles : Elab (List TTName)
+
+   * - getGuess
+     - If the current hole contains a guess, return it. Otherwise, fail. 
+
+       Signature:
+
+       getGuess : Elab TT
+
+   * - lookupTy
+     - Look up the types of every overloading of a name.
+
+       Signature:
+
+       lookupTy :  TTName -> Elab (List (TTName, NameType, TT))
+
+   * - lookupTyExact
+     - Get the type of a fully-qualified name. Fail if it doesn't  resolve uniquely. 
+
+       Signature:
+
+       lookupTyExact : TTName -> Elab (TTName, NameType, TT)
+
+   * - lookupDatatype
+     - Find the reflected representation of all datatypes whose names are overloadings of some name.
+
+       Signature:
+
+       lookupDatatype : TTName -> Elab (List Datatype)
+
+   * - lookupDatatypeExact
+     - Find the reflected representation of a datatype, given its fully-qualified name. Fail if the name does not uniquely resolve to a datatype.
+
+       Signature:
+
+       lookupDatatypeExact : TTName -> Elab Datatype
+
+   * - lookupFunDefn
+     - Find the reflected function definition of all functions whose names are overloadings of some name.
+
+       Signature:
+
+       lookupFunDefn : TTName -> Elab (List (FunDefn TT))
+
+   * - lookupFunDefnExact
+     - Find the reflected function definition of a function, given its fully-qualified name. Fail if the name does not uniquely resolve to a function.
+
+       Signature:
+
+       lookupFunDefnExact : TTName -> Elab (FunDefn TT)
+
+   * - lookupArgs
+     - Get the argument specification for each overloading of a name.
+
+       Signature:
+
+       lookupArgs : TTName -> Elab (List (TTName, List FunArg, Raw))
+
+   * - lookupArgsExact
+     - Get the argument specification for a name. Fail if the name does not uniquely resolve.
+
+       Signature:
+
+       lookupArgsExact : TTName -> Elab (TTName, List FunArg, Raw)
+
+   * - check
+     - Attempt to type-check a term, getting back itself and its type.
+
+       - @ env the environment within which to check the type
+       - @ tm the term to check
+
+       Signature:
+
+       check : (env : List (TTName, Binder TT)) -> (tm : Raw) -> Elab (TT, TT)
+
+Error Handling
+--------------
+
+.. list-table::
+   :widths: 10 30
+   :stub-columns: 1
+
+   * - tryCatch
+     - `tryCatch t (\err => t')` will run `t`, and if it fails, roll back the elaboration state and run `t'`,
+       but with access to the knowledge of why `t` failed.
+
+       Signature:
+
+       tryCatch : Elab a -> (Err -> Elab a) -> Elab a
+
+       .. code-block:: idris
+
+         %language ElabReflection
+
+         f : Err -> Elab ()
+         f (Msg _) = fill `("message error")
+         f (CantUnify _ _ _ _ _ _) = fill `("unification error")
+         f _ = fill `("other")
+
+         s2 : String
+         s2 = %runElab (do tryCatch (fill `(True)) f ; solve)
+
+   * - fail
+     - Halt elaboration with an error
+
+       Signature:
+
+       fail : List ErrorReportPart -> Elab a
+
+       Note: we may need to make sure the return type 'a' is sufficiently constrained. If required add an explicit type {a = ()}.
+
+       Below is some code which includes 'fail'. This will always fail but we could replace 'True' with some more useful condition.
+
+       .. code-block:: idris
+
+         %language ElabReflection
+
+         id1 : Elab ()
+         id1 = do
+           intro `{{x}}
+           fill (Var `{{x}})
+           if True
+             then
+               fail [TextPart "put error message here"]
+             else
+               solve
+
+         idNat : Nat -> Nat
+         idNat = %runElab id1
diff --git a/docs/elaboratorReflection/tactics.rst b/docs/elaboratorReflection/tactics.rst
new file mode 100644
index 000000000..be34a4e6a
--- /dev/null
+++ b/docs/elaboratorReflection/tactics.rst
@@ -0,0 +1,430 @@
+Elaborator Reflection - Tactics
+===============================
+
+The Idris part of the code for elaborator reflection is in
+Elab.idr `<https://github.com/idris-lang/Idris-dev/blob/master/libs/prelude/Language/Reflection/Elab.idr>`_
+Before looking at the Elab monad we need to know how to construct terms.
+
+
+Proof State
+-----------
+
+The terminology 'Proof State' is used by analogy to proof assistants but, as used here, it's really more of a metaprogramming state.
+
+Tactics operate on the proof state. The proof state contains various pieces of information, at this stage, the important ones for us are:
+
+- A hole queue - This contains a list of the names of the holes used in the proof term. The solution to each hole may depend on the other holes. For more information about holes and guesses see `Dependently Typed Functional Programs and their Proofs by McBride 1999`_.
+- A goal type - The type of the term that is under construction for the current goal.
+- A possibly incomplete proof term, which is being calculated and should be the goal type at the end of elaboration.
+- Context - A collection of open unification problems, representing recoverable failures of unification that may yet unify once more variables are solved.
+
+There  are many other pieces of information in the proof state such as the names used , such as the bodies of case blocks that need to be elaborated.but, for now, we will leave the system to handle these.
+
+.. image:: ../image/elabProofState.png
+   :width: 283px
+   :height: 232px
+
+Names TTName
+------------
+
+Names in an Idris program are evaluated at runtime but sometimes a 'variable name' is needed, which can be referred to as an unevaluated symbol.
+The  names used in terms have different constructors depending on their type:
+
++---------------------------+-----------------------------------------------+
+| UN String                 | A user-provided name                          |
++---------------------------+-----------------------------------------------+
+| NS (UN "foo") ["B", "A"]) | A name in some namespace                      |
++---------------------------+-----------------------------------------------+
+| MN Int String             | Machine-chosen names                          |
++---------------------------+-----------------------------------------------+
+| SN SpecialName            | Special names, to make conflicts impossible   |
+|                           | and language features predictable             |
++---------------------------+-----------------------------------------------+
+
+
+A user defined name can be constructed like this:
+
+.. code-block:: idris
+
+  Idris> UN "x"
+  UN "x" : TTName
+
+.. code-block:: idris
+
+  Idris> NS (UN "x") ["b","a"]
+  NS (UN "x") ["b", "a"] : TTName
+
+.. list-table:: machine-chosen names
+
+   * - A machine-chosen name needs to be generated within an Elab monad (see below for details) and is unique within that monad. This produced: {abc_140}{abc_141} so although gensym "abc" was called twice each one had a different integer:
+     - example of unique names:
+
+       .. code-block:: idris
+
+         implementation Show TTName where
+           show (UN s) = "`{{"++s++"}}"
+           show (NS t a) = "{"++(show t)++
+                           "."++(show a)++"}"
+           show (MN i s) = "{"++s++"_"++(show i)++"}"
+           show (SN sn) = "TTName special name"
+
+         showGensym : String
+         showGensym = %runElab (do
+           debugMessage [TextPart (
+             show !(gensym "abc") ++
+               show !(gensym "abc")
+           )]
+         )
+
+Quasiquotation
+--------------
+
+Since names are used frequently in elaborator reflection there is a shortcut for constructing them:
+
+.. list-table::
+
+   * - An unresolved variable "x" is wrapped in backtick and double braces:
+     - .. code-block:: idris
+
+          Idris> `{{x}}
+          UN "x" : TTName
+
+
+   * - Single braces are used for existing variables:
+     - .. code-block:: idris
+
+         Idris> `{x}
+         No such variable x
+         Idris> :let x=2
+         Idris> `{x}
+         UN "x" : TTName
+
+
+   * - brackets are used for an expression:
+
+       here type is inferable
+     - .. code-block:: idris
+
+         Idris> :let a=2
+         Idris> `(a)
+         P Ref (UN "a") (TConst (AType (ATInt ITBig))) : TT
+
+
+   * - Expression with explicit type:
+     - .. code-block:: idris
+
+         Idris> `(a:Integer)
+         P Ref (UN "a") (TConst (AType (ATInt ITBig))) : TT
+
+
+   * - If we want the value we can escape from quasiquotation by using anti-quotation (tilde)
+     - .. code-block:: idris
+
+         Idris> `(~a)
+         2 : Integer
+
+quasiquotation summary:
+
++------------+-----------+----------------------------------------------------------+
+|            |Reification|                                                          |
++============+===========+==========================================================+
+| \`{{n}}    | TTName    | Use for new names. Unresolved quotation of the name n.   |
++------------+-----------+----------------------------------------------------------+
+| \`{n}      | TTName    | Use for existing names. Resolved quotation of the name   |
+|            |           | n. n is a reference to a unique name in scope.           |
++------------+-----------+----------------------------------------------------------+
+| \`(e)      |           | expression e for which a type is inferable.              |
++------------+-----------+----------------------------------------------------------+
+| \`(e:t)    |           | expression e with a given type e.                        |
++------------+-----------+----------------------------------------------------------+
+| ~a         |           | anti-quotation - sub region which can be evaluated rather|
+|            |           | than quoted.                                             |
++------------+-----------+----------------------------------------------------------+
+|(Var\`{{x}})| Raw       |                                                          |
++------------+-----------+----------------------------------------------------------+
+
+TT
+--
+
+There is a notation for a term in TT as it is being constructed (based on a BNF-like grammar), this is used for example in the debug output, it is a compact way to see the state of the term so it is used here.
+So internally the program is stored as a tree structure using the following syntax:
+
++------------+-------+-------------+---------------------------------------------+
+|            |       | Syntax      | More Information                            |
++============+=======+=============+=============================================+
+| term       |       | t           |                                             |
++------------+-------+-------------+---------------------------------------------+
+| binding    |       | b           |                                             |
++------------+-------+-------------+---------------------------------------------+
+| constant   | t ::= | c           |                                             |
++------------+-------+-------------+---------------------------------------------+
+| variable   | t ::= | x           |                                             |
++------------+-------+-------------+---------------------------------------------+
+| variable   | t ::= | b.t         | so a dot '.' tells us this is some sort of  |
+| binding    |       |             | binding.                                    |
++------------+-------+-------------+---------------------------------------------+
+| application| t ::= | t t         | As with Idris, juxtaposition indicates      |
+|            |       |             | function application. Note: the same symbol |
+|            |       |             | 't' is used for both terms, this does not   |
+|            |       |             | imply they are the same term.               |
++------------+-------+-------------+---------------------------------------------+
+| Type       | t ::= | T           |                                             |
+| constructor|       |             |                                             |
++------------+-------+-------------+---------------------------------------------+
+| Data       | t ::= | C           |                                             |
+| constructor|       |             |                                             |
++------------+-------+-------------+---------------------------------------------+
+| function   | b::=  | λ c:t       | colon ':' separates parameters from body of |
+|            |       |             | binding.                                    |
++------------+-------+-------------+---------------------------------------------+
+| let binding| b::=  | let\|-> t:t |                                             |
++------------+-------+-------------+---------------------------------------------+
+| function   | b::=  | ∀ x:t       |                                             |
++------------+-------+-------------+---------------------------------------------+
+| Type       | c::=  | \*i         | The universe hierarchy is usually handled   |
+| universe   |       |             | automatically so we can just use\* for the  |
+|            |       |             | type of types.                              |
++------------+-------+-------------+---------------------------------------------+
+| integer    | c:==  | i           |                                             |
+| literal    |       |             |                                             |
++------------+-------+-------------+---------------------------------------------+
+|integer type| c:==  | Integer     |                                             |
++------------+-------+-------------+---------------------------------------------+
+| string     | c:==  | s           |                                             |
+| literal    |       |             |                                             |
++------------+-------+-------------+---------------------------------------------+
+| string type| c:==  | String      |                                             |
++------------+-------+-------------+---------------------------------------------+
+|focused hole|       | ?x : t      | Conor McBride 1999 thesis.                  |
++------------+-------+-------------+---------------------------------------------+
+| guess      |       | ?x ≈ t : t  | Conor McBride 1999 thesis.                  |
++------------+-------+-------------+---------------------------------------------+
+
+Sometimes the part of the term in focus is underlined.
+
+Reflection of the well typed core language
+
+.. code-block:: idris
+
+  data TT =
+        ||| A reference to some name (P for Parameter)
+        P NameType TTName TT |
+        ||| de Bruijn variables
+        V Int |
+        ||| Bind a variable
+        Bind TTName (Binder TT) TT |
+        ||| Apply one term to another
+        App TT TT |
+        ||| Embed a constant
+        TConst Const |
+        ||| Erased terms
+        Erased |
+        ||| The type of types along (with universe constraints)
+        TType TTUExp |
+        ||| Alternative universes for dealing with uniqueness
+        UType Universe |
+
+TT stores local bound variables using De Bruijn index, when working in Idris this does not concern the user because string names are used for variables. Converting bound variables internally to index values means that the same variable name can be used, in different lambda terms, without ambiguity and without the need for α-substitution.
+De Bruijn index which is a integer where:
+
+- 0=inside current (inner) lambda term
+- 1= next outer lambda term
+- 2= next outer and so on
+
+Raw
+---
+
+Raw is similar to TT except it is used before types are known. The types should be resolved by the type checker.
+
+.. code-block:: idris
+
+  data Raw =
+    ||| Variables, global or local
+    Var TTName |
+    ||| Bind a variable
+    RBind TTName (Binder Raw) Raw |
+    ||| Application
+    RApp Raw Raw |
+    ||| The type of types
+    RType |
+    ||| Alternative universes for dealing with uniqueness
+    RUType Universe |
+    ||| Embed a constant
+    RConstant Const |
+
+Expression Syntax
+-----------------
+
+There is a way of notating expressions such as those used in the proof state (example: goal type and proof terms) which is reasonably standard in the papers written about this subject.
+
+This notation is not entered directly by metaprogrammers but it is seen, for example in debug output. So this notation is explained here because it is useful to be familiar with it.
+
+The notation assumes right-associativity, in the absence of brackets, the term to the right binds more tightly than the one on the left.
+So, for nested lambda terms:
+
++---------------+--------+-------------------+
+| λ a . λ b . f | means  | λ a .( λ b . f)   |
++---------------+--------+-------------------+
+
+and the same for function application:
+
++---------------+--------+-------------------+
+| f g x         | means  | f (g x)           |
++---------------+--------+-------------------+
+
+In contrast, in lambda calculus, function application is usually regarded as left-associative,
+Here are some typical examples of the notation used for expressions:
+
++-----------------------+
+| ? {hole_0} . {hole_0} |
++-----------------------+
+
+The term, to be derived, may start off in this state following something like this:
+
+.. code-block:: idris
+
+  myScript : Elab ()
+  myScript= do
+
+The dot '.' tells us this is some sort of binding.
+
++----------------------------------------------+
+| ?{hole_0} ≈ ? {hole_2} . {hole_2} . {hole_0} |
++----------------------------------------------+
+
+This is a slightly more complicated example arising from:
+
+.. code-block:: idris
+
+  idNat : Nat -> Nat
+  idNat = %runElab (do
+
+This introduces a guess that hole_0 = hole_2 .
+
++----------------------------------------------------+
+| ?{hole_0} ≈ λ x . ? {hole_2} . {hole_2} . {hole_0} |
++----------------------------------------------------+
+
+Following on from the previous example  a lambda function is introduced like this:
+
+.. code-block:: idris
+
+  intro `{{x}}
+
+So now the expression is wrapped in a lambda binding.
+
++-------------------------------------------------------+
+| ?{hole_0} ≈ λ x . ?{hole_2} ≈ x . {hole_2} . {hole_0} |
++-------------------------------------------------------+
+
+Following on, we can use the fill tactic like this:
+
+.. code-block:: idris
+
+  fill (Var `{{x}})
+
+which introduces another guess.
+
++--------------------------------+
+| ?{hole_0} ≈ λ x . x . {hole_0} |
++--------------------------------+
+
+The solve tactic completes the proof
+
+Binders
+-------
+
+Here we look at each tactic in turn to see how they affect the proof state.
+
+Introduction tactics for binders. The binder types are:
+
+- lambda function (intro)
+- dependent function (forall)
+- let (letBind)
+- pattern (patbind)
+
+A precondition of these tactics is that the focused hole is of the form:
+
++-----------+
+| ?h : t.h  |
++-----------+
+
+that is, that the body of its scope consists directly of a reference to the hole-bound variable.  If a hole binder were of the form:
+
++--------------------+
+| ?h : t1 -> t2.f h  |
++--------------------+
+
+and a tactic such as
+
++------------------+
+| intro \`{{x}}    |
++------------------+
+
+were applied, the result would be the term
+
++---------------------------+
+| ?h : t2 .    λ x:t1. f h  |
++---------------------------+
+
+However this would cause the application of f to be ill-typed, as it expects an argument of type t1->t2, not an argument of type t2. Additionally, some binding tactics require that t, the type of the hole h, have a specific form, because the binder to be established may have a typing rule associated with it.
+
+.. list-table:: Binders
+   :widths: 10 30
+   :stub-columns: 1
+
+   * - intro
+     - Introduce a lambda binding around the current hole and focus on the body.
+
+       Requires that the hole be in binding form (use 'attack' if it might not be).
+
+       @ n the name to use for the argument.
+
+       Signature:
+
+       intro : (n : TTName) -> Elab ()
+
+       Result
+
+       λn:t1.?h:[n/x]t2.h
+
+   * - intro'
+     - Introduce a lambda binding around the current hole and focus on the body, using the name provided by the type of the hole.
+
+       Requires that the hole be immediately under its binder (use 'attack' if it might not be).
+
+       Signature:
+
+       intro' : Elab ()
+
+   * - forall
+     - Introduce a dependent function type binding into the current hole, and focus on the body. Requires that the hole be immediately under its binder
+
+       (use 'attack' if it might not be).
+
+       Signature:
+
+       forall : TTName -> Raw -> Elab ()
+
+   * - patbind
+     - Introduce a new pattern binding. Requires that the hole be immediately under its binder (use 'attack' if it might not be).
+
+       Signature:
+
+       patbind : TTName -> Elab ()
+
+   * - letbind
+     - Introduce a new let binding.
+
+       Requires that the hole be immediately under its binder (use 'attack' if it might not be).
+
+       - @ n the name to let bind
+       - @ ty the type of the term to be let-bound
+       - @ tm the term to be bound
+
+       Signature:
+
+       letbind : (n : TTName) -> (ty, tm : Raw) -> Elab ()
+
+.. target-notes::
+.. _`Dependently Typed Functional Programs and their Proofs by McBride 1999`: https://www.era.lib.ed.ac.uk/handle/1842/374
diff --git a/docs/faq/faq.rst b/docs/faq/faq.rst
index 916415bc8..b1e9d00a5 100644
--- a/docs/faq/faq.rst
+++ b/docs/faq/faq.rst
@@ -37,7 +37,7 @@ Is there some documentation for the standard lib? List of functions?
 =====================================================================
 
 API documentation for the shipped packages is listed on `the
-documentation page <http://www.idris-lang.org/documentation/>`_.
+documentation page <https://www.idris-lang.org/documentation/>`_.
 
 Unfortunately, the default prelude and shipped packages for `Idris`
 are not necessarily complete with regards to documentation.  Other
@@ -310,7 +310,7 @@ better and it will make sense to revisit this. For now, however, Idris will not
 be offering arbitrary Unicode symbols in operators.
 
 This seems like an instance of `Wadler's
-Law <http://www.haskell.org/haskellwiki/Wadler%27s_Law>`__ in action.
+Law <https://www.haskell.org/haskellwiki/Wadler%27s_Law>`__ in action.
 
 This answer is based on Edwin Brady's response in the following
 `pull request <https://github.com/idris-lang/Idris-dev/pull/694#issuecomment-29559291>`_.
diff --git a/docs/guides/index.rst b/docs/guides/index.rst
index 22a654a4b..12ff25d10 100644
--- a/docs/guides/index.rst
+++ b/docs/guides/index.rst
@@ -12,7 +12,7 @@ Tutorials submitted by community members.
    Idris Community* has waived all copyright and related or neighboring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 
 .. toctree::
diff --git a/docs/guides/theorem-prover.rst b/docs/guides/theorem-prover.rst
index ba35ac347..5fe0e6795 100644
--- a/docs/guides/theorem-prover.rst
+++ b/docs/guides/theorem-prover.rst
@@ -22,7 +22,7 @@ We will be given the following prompt, in future releases the version string wil
          ____    __     _
         /  _/___/ /____(_)____
         / // __  / ___/ / ___/     Version 0.9.18.1
-      _/ // /_/ / /  / (__  )      http://www.idris-lang.org/
+      _/ // /_/ / /  / (__  )      https://www.idris-lang.org/
      /___/\__,_/_/  /_/____/       Type :? for help
 
     Idris is free software with ABSOLUTELY NO WARRANTY.
diff --git a/docs/guides/type-providers-ffi.rst b/docs/guides/type-providers-ffi.rst
index 21b9702de..655622451 100644
--- a/docs/guides/type-providers-ffi.rst
+++ b/docs/guides/type-providers-ffi.rst
@@ -3,7 +3,7 @@ Type Providers in Idris
 ***********************
 
 `Type providers in Idris
-<http://www.davidchristiansen.dk/pubs/dependent-type-providers.pdf>`__
+<https://www.davidchristiansen.dk/pubs/dependent-type-providers.pdf>`__
 are simple enough, but there are a few caveats to using them that it
 would be worthwhile to go through the basic steps. We also go over
 foreign functions, because these will often be used with type
diff --git a/docs/image/README.md b/docs/image/README.md
new file mode 100644
index 000000000..6e2d3f87f
--- /dev/null
+++ b/docs/image/README.md
@@ -0,0 +1,16 @@
+Many of the images in this directory have two files with the same name but a different extension:
+
+* The SVG file, being vector graphics, is best for drawing and modifying.
+* The PNG file, being raster graphics, gives more consistent rendering.
+
+The image has therefore been generated as an SVG file and then exported to the PNG file.
+
+So, if you need to modify an image, I suggest the following sequence:
+
+* Edit the SVG file using a suitable editor (I use Inkscape).
+* Export the changes to the PNG file, overwriting the old version.
+* upload both files.
+
+Note, when exporting in Inkscape:
+* Select everything first, this stops an enormous boundary being exported.
+* After selecting the file to export to and clicking OK, don't forget to click on export button as well.
diff --git a/docs/image/attack.png b/docs/image/attack.png
new file mode 100644
index 000000000..e6b1844ca
Binary files /dev/null and b/docs/image/attack.png differ
diff --git a/docs/image/attack.svg b/docs/image/attack.svg
new file mode 100644
index 000000000..57a084037
--- /dev/null
+++ b/docs/image/attack.svg
@@ -0,0 +1,199 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="attack.svg">
+  <defs
+     id="defs2">
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker890"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path888"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker838"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path836" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4529"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#ff0000;stroke-width:1pt;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="313.5"
+     inkscape:cy="696.5"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="fill:#ffff00;fill-opacity:1;stroke-width:0.26458332"
+       id="rect22"
+       width="28.839582"
+       height="6.0854182"
+       x="66.67498"
+       y="114.4375"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="65.352081"
+       y="105.17709"
+       id="text12"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="65.352081"
+         y="105.17709"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         id="tspan847">?h ∶  t1→t2 . f h</tspan></text>
+    <text
+       id="text16"
+       y="118.67083"
+       x="56.356247"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="118.67083"
+         x="56.356247"
+         id="tspan14"
+         sodipodi:role="line">?h ≈ (?h' ∶  t1→t2 . h')∶  t1→t2 . f h</tspan></text>
+    <text
+       id="text20"
+       y="110.99791"
+       x="82.814583"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="110.99791"
+         x="82.814583"
+         id="tspan18"
+         sodipodi:role="line">attack</tspan></text>
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 80.668481,106.30075 -0.0032,7.57492"
+       id="path4518"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="63.235413"
+       y="94.85833"
+       id="text832"><tspan
+         sodipodi:role="line"
+         id="tspan830"
+         x="63.235413"
+         y="94.85833"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">focus</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path834"
+       d="m 66.645564,94.659084 -0.0032,5.458256"
+       style="fill:none;stroke:#0000ff;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker838)" />
+    <text
+       id="text884"
+       y="110.23682"
+       x="61.94511"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332"
+         y="110.23682"
+         x="61.94511"
+         id="tspan882"
+         sodipodi:role="line">focus</tspan></text>
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker890)"
+       d="m 66.67818,108.97924 -0.0032,5.45826"
+       id="path886"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+  </g>
+</svg>
diff --git a/docs/image/binders.png b/docs/image/binders.png
new file mode 100644
index 000000000..da5c47797
Binary files /dev/null and b/docs/image/binders.png differ
diff --git a/docs/image/binders.svg b/docs/image/binders.svg
new file mode 100644
index 000000000..bf763e22e
--- /dev/null
+++ b/docs/image/binders.svg
@@ -0,0 +1,326 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="binders.svg">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="255.00889"
+     inkscape:cy="520"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1163"
+     inkscape:window-height="1011"
+     inkscape:window-x="-4"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="157"
+       y="177.3622"
+       id="text4136"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4138"
+         x="157"
+         y="177.3622"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;">Code</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4140"
+       y="177.3622"
+       x="287"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;"
+         y="177.3622"
+         x="287"
+         id="tspan4142"
+         sodipodi:role="line">Logic</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 229,161.3622 1,298"
+       id="path4144"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4146"
+       d="m 473.5,184.8622 -364,1"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 473.5,270.8622 -364,1"
+       id="path4148"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4150"
+       d="m 475.5,362.8622 -366,1"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 475.5,458.8622 -366,1"
+       id="path4152"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4154"
+       y="235.3622"
+       x="19"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="235.3622"
+         x="19"
+         id="tspan4156"
+         sodipodi:role="line">Abstraction</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="19"
+       y="399.36218"
+       id="text4158"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4160"
+         x="19"
+         y="399.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">let</tspan><tspan
+         sodipodi:role="line"
+         x="19"
+         y="424.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4184">binding</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4162"
+       y="307.36218"
+       x="19"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="307.36218"
+         x="19"
+         id="tspan4164"
+         sodipodi:role="line">function</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="332.36218"
+         x="19"
+         sodipodi:role="line"
+         id="tspan4166">space</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="167"
+       y="235.3622"
+       id="text4168"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4170"
+         x="167"
+         y="235.3622"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;">λ x:t</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4172"
+       y="222.3622"
+       x="259"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;"
+         y="222.3622"
+         x="259"
+         id="tspan4174"
+         sodipodi:role="line">Γ ⊢ S : Type</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4180"
+       y="417.36218"
+       x="124"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;"
+         y="417.36218"
+         x="124"
+         id="tspan4182"
+         sodipodi:role="line">let x ↦ t : t</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4186"
+       d="m 383.5,227.8622 -136,1"
+       style="fill:none;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="246"
+       y="248.3622"
+       id="text4188"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4190"
+         x="246"
+         y="248.3622"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;">Γ ; λ x:S ⊢ valid</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="257"
+       y="308.36218"
+       id="text4192"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4194"
+         x="257"
+         y="308.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;">Γ ⊢ S : Type</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 381.5,313.8622 -136,1"
+       id="path4196"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4198"
+       y="334.36218"
+       x="244"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;"
+         y="334.36218"
+         x="244"
+         id="tspan4200"
+         sodipodi:role="line">Γ ; ∀ x:S ⊢ valid</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="167"
+       y="323.36218"
+       id="text4202"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4204"
+         x="167"
+         y="323.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;">∀ x:t</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4206"
+       y="402.36218"
+       x="255"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;"
+         y="402.36218"
+         x="255"
+         id="tspan4208"
+         sodipodi:role="line">Γ ⊢ S : Type   Γ ⊢ s:S </tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4210"
+       d="m 453.5,407.8622 -210,1"
+       style="fill:none;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="242"
+       y="428.36218"
+       id="text4212"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4214"
+         x="242"
+         y="428.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;">Γ ; let x ↦ s : S ⊢ valid</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/compareToProofAssist.png b/docs/image/compareToProofAssist.png
new file mode 100644
index 000000000..b8363e8ad
Binary files /dev/null and b/docs/image/compareToProofAssist.png differ
diff --git a/docs/image/compareToProofAssist.svg b/docs/image/compareToProofAssist.svg
new file mode 100644
index 000000000..76cfe93d4
--- /dev/null
+++ b/docs/image/compareToProofAssist.svg
@@ -0,0 +1,260 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="compareToProofAssist.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4251"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path4253" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker5018"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path5020"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4436"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path4438" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4167"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="377.89372"
+     inkscape:cy="520"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="162"
+       y="326.36221"
+       id="text4136"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4138"
+         x="162"
+         y="326.36221"
+         style="font-size:15px;-inkscape-font-specification:'sans-serif Bold';font-family:sans-serif;font-weight:bold;font-style:normal;font-stretch:normal;font-variant:normal">Human</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4140"
+       y="368.36221"
+       x="162"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="368.36221"
+         x="162"
+         id="tspan4142"
+         sodipodi:role="line">Tactics</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="161"
+       y="415.36221"
+       id="text4144"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4146"
+         x="161"
+         y="415.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">fill holes</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4148"
+       y="282.36221"
+       x="130"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;"
+         y="282.36221"
+         x="130"
+         id="tspan4150"
+         sodipodi:role="line">Proof assistant</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 188,329.3622 0,22"
+       id="path4152"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4434"
+       d="m 187,373.3622 0,22"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4436)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="314"
+       y="326.36221"
+       id="text5002"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan5004"
+         x="314"
+         y="326.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">Idris source</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5006"
+       y="413.36221"
+       x="281"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="413.36221"
+         x="281"
+         id="tspan5008"
+         sodipodi:role="line">fill holes</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="432.11221"
+         x="281"
+         sodipodi:role="line"
+         id="tspan5060">(implicit variables, etc)</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="294"
+       y="282.36221"
+       id="text5010"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan5012"
+         x="294"
+         y="282.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000">Idris Elaborator</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path5014"
+       d="m 342,330.3622 0,22"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4251)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5018)"
+       d="m 341,374.3622 0,22"
+       id="path5016"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4247"
+       y="369.36221"
+       x="317"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="369.36221"
+         x="317"
+         id="tspan4249"
+         sodipodi:role="line">Tactics</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elab.png b/docs/image/elab.png
new file mode 100644
index 000000000..f2436cad2
Binary files /dev/null and b/docs/image/elab.png differ
diff --git a/docs/image/elab.svg b/docs/image/elab.svg
new file mode 100644
index 000000000..bb7715767
--- /dev/null
+++ b/docs/image/elab.svg
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elab.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4155"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="381.03373"
+     inkscape:cy="520"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1072"
+     inkscape:window-height="1011"
+     inkscape:window-x="-4"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4136"
+       width="206"
+       height="77"
+       x="236"
+       y="254.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="388.36218"
+       x="236"
+       height="77"
+       width="206"
+       id="rect4138"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 328,331.3622 19,55"
+       id="path4140"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="242"
+       y="271.36221"
+       id="text5334"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan5336"
+         x="242"
+         y="271.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">Definition Elaborator</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5338"
+       y="308.36221"
+       x="253"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="308.36221"
+         x="253"
+         id="tspan5340"
+         sodipodi:role="line">definition context</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="243"
+       y="409.36221"
+       id="text5342"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan5344"
+         x="243"
+         y="409.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">Term Elaborator</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabLogicEx1_1.png b/docs/image/elabLogicEx1_1.png
new file mode 100644
index 000000000..603082aba
Binary files /dev/null and b/docs/image/elabLogicEx1_1.png differ
diff --git a/docs/image/elabLogicEx1_1.svg b/docs/image/elabLogicEx1_1.svg
new file mode 100644
index 000000000..a7861538f
--- /dev/null
+++ b/docs/image/elabLogicEx1_1.svg
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="elabLogicEx1_1.svg"
+   inkscape:export-filename="/home/mjb/Idris-dev/docs/image/elabLogicEx1_1.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="97.25613"
+     inkscape:cy="593.17666"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       id="text4800"
+       y="473.36218"
+       x="205"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="473.36218"
+         x="205"
+         sodipodi:role="line"
+         id="tspan4812">hole_2 : pi_arg : Nat -&gt; Nat</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="428.125"
+       y="472.23718"
+       id="text4178"><tspan
+         id="tspan4180"
+         sodipodi:role="line"
+         x="428.125"
+         y="472.23718"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0 : pi_arg : Nat -&gt; Nat</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 423.125,456.2372 185,-1"
+       id="path4182"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4184"
+       d="m 200,456.3622 185,-1"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+  </g>
+</svg>
diff --git a/docs/image/elabLogicEx1_2.png b/docs/image/elabLogicEx1_2.png
new file mode 100644
index 000000000..b53687241
Binary files /dev/null and b/docs/image/elabLogicEx1_2.png differ
diff --git a/docs/image/elabLogicEx1_2.svg b/docs/image/elabLogicEx1_2.svg
new file mode 100644
index 000000000..cf9c8f670
--- /dev/null
+++ b/docs/image/elabLogicEx1_2.svg
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="elabLogicEx1_2.svg"
+   inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/elabLogicEx1_1.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="425.25613"
+     inkscape:cy="593.17666"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       id="text4800"
+       y="473.36218"
+       x="205"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="473.36218"
+         x="205"
+         sodipodi:role="line"
+         id="tspan4812">hole_2 : Nat</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="422.5"
+       y="472.23718"
+       id="text4178"><tspan
+         id="tspan4180"
+         sodipodi:role="line"
+         x="422.5"
+         y="472.23718"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0 : (pi_arg : Nat) -&gt; Nat</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 417.5,456.2372 185,-1"
+       id="path4182"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4184"
+       d="m 200,456.3622 185,-1"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="229"
+       y="447.36218"
+       id="text4147"><tspan
+         id="tspan4149"
+         sodipodi:role="line"
+         x="229"
+         y="447.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">x : Nat</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabLogicEx1_3.png b/docs/image/elabLogicEx1_3.png
new file mode 100644
index 000000000..0fb2abfff
Binary files /dev/null and b/docs/image/elabLogicEx1_3.png differ
diff --git a/docs/image/elabLogicEx1_3.svg b/docs/image/elabLogicEx1_3.svg
new file mode 100644
index 000000000..aa2410581
--- /dev/null
+++ b/docs/image/elabLogicEx1_3.svg
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="elabLogicEx1_3.svg"
+   inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/elabLogicEx1_1.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="425.25613"
+     inkscape:cy="593.17666"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       id="text4800"
+       y="473.36218"
+       x="205"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="473.36218"
+         x="205"
+         sodipodi:role="line"
+         id="tspan4812">hole_2 : Nat</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="439.375"
+       y="472.23718"
+       id="text4178"><tspan
+         id="tspan4180"
+         sodipodi:role="line"
+         x="439.375"
+         y="472.23718"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0 : (pi_arg : Nat) -&gt; Nat</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 434.375,456.2372 185,-1"
+       id="path4182"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4184"
+       d="m 200,456.3622 185,-1"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="229"
+       y="447.36218"
+       id="text4147"><tspan
+         id="tspan4149"
+         sodipodi:role="line"
+         x="229"
+         y="447.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">x : Nat</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabLogicEx1_4.png b/docs/image/elabLogicEx1_4.png
new file mode 100644
index 000000000..ccdfe84cf
Binary files /dev/null and b/docs/image/elabLogicEx1_4.png differ
diff --git a/docs/image/elabLogicEx1_4.svg b/docs/image/elabLogicEx1_4.svg
new file mode 100644
index 000000000..dee42baa4
--- /dev/null
+++ b/docs/image/elabLogicEx1_4.svg
@@ -0,0 +1,80 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elabLogicEx1_4.svg"
+   inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/elabLogicEx1_1.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="425.25613"
+     inkscape:cy="593.17666"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1157"
+     inkscape:window-height="1011"
+     inkscape:window-x="-4"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="205"
+       y="500.36218"
+       id="text4178"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4180"
+         sodipodi:role="line"
+         x="205"
+         y="500.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0 : (pi_arg : Nat) -&gt; Nat</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none"
+       d="m 200,484.3622 185,-1"
+       id="path4182"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+  </g>
+</svg>
diff --git a/docs/image/elabOverview.png b/docs/image/elabOverview.png
new file mode 100644
index 000000000..b1adcc341
Binary files /dev/null and b/docs/image/elabOverview.png differ
diff --git a/docs/image/elabOverview.svg b/docs/image/elabOverview.svg
new file mode 100644
index 000000000..2e299b30a
--- /dev/null
+++ b/docs/image/elabOverview.svg
@@ -0,0 +1,585 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elabOverview.svg"
+   inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/data.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4738"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4491"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4672"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4425"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4418"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0"
+       refX="0"
+       id="marker5018"
+       style="overflow:visible"
+       inkscape:isstock="true">
+      <path
+         inkscape:connector-curvature="0"
+         id="path5020"
+         d="M 0,0 5,-5 -12.5,0 5,5 0,0 Z"
+         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1"
+         transform="matrix(-0.4,0,0,-0.4,-4,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="258.17464"
+     inkscape:cy="544.34419"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="268"
+       y="495.36218"
+       id="text4136"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4138"
+         x="268"
+         y="495.36218"
+         style="font-size:12.5px">data TT : Type where</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="510.98718"
+         id="tspan4140"
+         style="font-size:12.5px">    P : NameType -&gt; TTName -&gt; TT -&gt; TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="526.61218"
+         style="font-size:12.5px"
+         id="tspan4142">    V : Int -&gt; TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="542.23718"
+         style="font-size:12.5px"
+         id="tspan4144">    Bind : TTName -&gt; Binder TT -&gt; TT -&gt; TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="557.86218"
+         style="font-size:12.5px"
+         id="tspan4146">    App : TT -&gt; TT -&gt; TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="573.48718"
+         style="font-size:12.5px"
+         id="tspan4148">    TConst : Const -&gt; TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="589.11218"
+         style="font-size:12.5px"
+         id="tspan4150">    Erased : TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="604.73718"
+         style="font-size:12.5px"
+         id="tspan4152">    TType : TTUExp -&gt; TT</tspan><tspan
+         sodipodi:role="line"
+         x="268"
+         y="620.36218"
+         style="font-size:12.5px"
+         id="tspan4154">    UType : Universe -&gt; TT</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4156"
+       y="485.36218"
+       x="509"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4174"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="485.36218"
+         x="509"
+         sodipodi:role="line">globally defined variable</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="500.98718"
+         x="509"
+         sodipodi:role="line"
+         id="tspan4197"> from name</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 486,500.3622 19,-14"
+       id="path4220"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="392"
+       y="526.36218"
+       id="text4222"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="392"
+         y="526.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4224">local (de Bruijn) variable</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4226"
+       d="m 351,524.3622 34,-4"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="537"
+       y="533.36218"
+       id="text4228"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="537"
+         y="533.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4230">any kind of binder</tspan><tspan
+         sodipodi:role="line"
+         x="537"
+         y="548.98718"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4234">lambda, let etc.</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4232"
+       d="m 494,538.3622 39,-8"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="417"
+       y="555.36218"
+       id="text4236"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="417"
+         y="555.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4238">function application</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4240"
+       d="m 392,554.3622 22,-2"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4253"
+       y="569.36218"
+       x="421"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4255"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="569.36218"
+         x="421"
+         sodipodi:role="line">intager, char, string, etc.</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 396,568.3622 22,-2"
+       id="path4257"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="374"
+       y="586.36218"
+       id="text4270"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="374"
+         y="586.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4272">unknown term for erasing types</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4274"
+       d="m 349,585.3622 22,-2"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4276"
+       y="603.36218"
+       x="429"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4278"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="603.36218"
+         x="429"
+         sodipodi:role="line">type of types</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 404,602.3622 22,-2"
+       id="path4280"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="433"
+       y="619.36218"
+       id="text4293"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="433"
+         y="619.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4295">unique universe</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4297"
+       d="m 408,618.3622 22,-2"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4397"
+       y="463.36218"
+       x="375"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4399"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff"
+         y="463.36218"
+         x="375"
+         sodipodi:role="line">elements of core language</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4400"
+       width="392"
+       height="185"
+       x="262"
+       y="447.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="264"
+       y="466.36218"
+       id="text4402"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4404"
+         x="264"
+         y="466.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">TT</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4328"
+       y="262.36218"
+       x="96"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         id="tspan4346"
+         style="font-size:12.5px"
+         y="262.36218"
+         x="96"
+         sodipodi:role="line">env</tspan><tspan
+         style="font-size:12.5px"
+         y="277.98718"
+         x="96"
+         sodipodi:role="line"
+         id="tspan4454">goal</tspan><tspan
+         style="font-size:12.5px"
+         y="293.61218"
+         x="96"
+         sodipodi:role="line"
+         id="tspan4456">holes</tspan><tspan
+         style="font-size:12.5px"
+         y="309.23718"
+         x="96"
+         sodipodi:role="line"
+         id="tspan4458">guess</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="163"
+       y="262.36218"
+       id="text4348"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4352"
+         sodipodi:role="line"
+         x="163"
+         y="262.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000">Elab (List (TTName, Binder TT)</tspan><tspan
+         sodipodi:role="line"
+         x="163"
+         y="277.98718"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4462">Elab (TTName,TT)</tspan><tspan
+         sodipodi:role="line"
+         x="163"
+         y="293.61218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4464">Elab (List TTName)</tspan><tspan
+         sodipodi:role="line"
+         x="163"
+         y="309.23718"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         id="tspan4466">Elab (TT)</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="M 124.13676,260.36509 158,260.3622"
+       id="path4360"
+       inkscape:connector-curvature="0" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="64"
+       y="286.36218"
+       id="text4400"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         x="64"
+         y="286.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff"
+         id="tspan4402">state</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="219.36218"
+       x="53"
+       height="224"
+       width="289"
+       id="rect4404"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4406"
+       y="238.36218"
+       x="55"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="238.36218"
+         x="55"
+         id="tspan4408"
+         sodipodi:role="line">Elab Monad</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4468"
+       d="M 124.13676,274.36509 158,274.3622"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="M 128.13676,288.36509 158,288.3622"
+       id="path4470"
+       inkscape:connector-curvature="0" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4472"
+       d="M 132.13676,304.36509 158,304.3622"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4738)"
+       d="m 275,272.3622 c 75.17677,4.63671 121.00356,120.13548 126,174"
+       id="path4476"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 189,320.3622 c 50.81716,51.06633 -107.1143,53.76268 -56,0"
+       id="path12613"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="147"
+       y="373.36218"
+       id="text15201"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan15209"
+         sodipodi:role="line"
+         x="147"
+         y="373.36218"
+         style="font-size:12.5px">solve</tspan><tspan
+         sodipodi:role="line"
+         x="147"
+         y="388.98718"
+         style="font-size:12.5px"
+         id="tspan15220">fill</tspan><tspan
+         sodipodi:role="line"
+         x="147"
+         y="404.61218"
+         style="font-size:12.5px"
+         id="tspan15222">apply</tspan><tspan
+         sodipodi:role="line"
+         x="147"
+         y="420.23718"
+         style="font-size:12.5px"
+         id="tspan15224">focus</tspan><tspan
+         sodipodi:role="line"
+         x="147"
+         y="435.86218"
+         style="font-size:12.5px"
+         id="tspan15226">...</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text18672"
+       y="396.36218"
+       x="94"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:40px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan18674"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:12.5px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff"
+         y="396.36218"
+         x="94"
+         sodipodi:role="line">tactics</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabProofState.png b/docs/image/elabProofState.png
new file mode 100644
index 000000000..4cd9ea1b0
Binary files /dev/null and b/docs/image/elabProofState.png differ
diff --git a/docs/image/elabProofState.svg b/docs/image/elabProofState.svg
new file mode 100644
index 000000000..e65bea07d
--- /dev/null
+++ b/docs/image/elabProofState.svg
@@ -0,0 +1,356 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elabProofState.svg">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="252.75613"
+     inkscape:cy="520"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       sodipodi:linespacing="125%"
+       id="text4148"
+       y="330.36218"
+       x="219"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="330.36218"
+         x="219"
+         id="tspan4150"
+         sodipodi:role="line">current proof</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="349.11218"
+         x="219"
+         sodipodi:role="line"
+         id="tspan4206"> term</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="240"
+       y="303.36218"
+       id="text4160"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4162"
+         x="240"
+         y="303.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">(TTName, TT)</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4202"
+       y="392.36218"
+       x="355"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="392.36218"
+         x="355"
+         id="tspan4204"
+         sodipodi:role="line">original goal</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="213"
+       y="377.36218"
+       id="text4208"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4212"
+         sodipodi:role="line"
+         x="213"
+         y="377.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">path</tspan><tspan
+         sodipodi:role="line"
+         x="213"
+         y="396.11218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4216">subterm</tspan><tspan
+         sodipodi:role="line"
+         x="213"
+         y="414.86218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4218">updates</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4230"
+       y="487.36218"
+       x="148"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="487.36218"
+         x="148"
+         sodipodi:role="line"
+         id="tspan4243">Contexts used for global definitions and for proof state.</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="506.11218"
+         x="148"
+         sodipodi:role="line"
+         id="tspan4190">They contain universe constraints and existing definitions.</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="524.86218"
+         x="148"
+         sodipodi:role="line"
+         id="tspan4253">Also store maximum RigCount of the namel</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4173"
+       y="198.36218"
+       x="135"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="198.36218"
+         x="135"
+         id="tspan4175"
+         sodipodi:role="line">Environment</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="350"
+       y="197.36218"
+       id="text4177"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4179"
+         x="350"
+         y="197.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1">Holes</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4181"
+       y="197.36218"
+       x="460"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="197.36218"
+         x="460"
+         id="tspan4183"
+         sodipodi:role="line">Guess</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4185"
+       y="199.36218"
+       x="247"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="199.36218"
+         x="247"
+         id="tspan4187"
+         sodipodi:role="line">Goal</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4189"
+       width="95"
+       height="32"
+       x="134"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="205.3622"
+       x="241"
+       height="32"
+       width="95"
+       id="rect4191"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4195"
+       width="95"
+       height="32"
+       x="454"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4197"
+       width="95"
+       height="32"
+       x="346"
+       y="237.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="269.36218"
+       x="346"
+       height="32"
+       width="95"
+       id="rect4199"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="205.3622"
+       x="346"
+       height="32"
+       width="95"
+       id="rect4201"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 169,242.3622 -9,184"
+       id="path4206"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path4208"
+       d="m 301,240.3622 -26,46"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="360"
+       y="366.36218"
+       id="text4210"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         id="tspan4213"
+         x="360"
+         y="366.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">focus</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="237.3622"
+       x="134"
+       height="32"
+       width="95"
+       id="rect4747"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4749"
+       width="95"
+       height="32"
+       x="134"
+       y="269.36218" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="148"
+       y="450.36218"
+       id="text4751"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4757"
+         sodipodi:role="line"
+         x="148"
+         y="450.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">List (TTName, Binder TT)</tspan><tspan
+         sodipodi:role="line"
+         x="148"
+         y="469.11218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4182">Open unification constaints.</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="349.25366"
+       y="319.99084"
+       id="text4210-3"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         id="tspan4213-6"
+         x="349.25366"
+         y="319.99084"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">List TTName</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4782"
+       y="251.99084"
+       x="495.25366"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="251.99084"
+         x="495.25366"
+         id="tspan4784"
+         sodipodi:role="line">TT</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabProofStateEx1_1.png b/docs/image/elabProofStateEx1_1.png
new file mode 100644
index 000000000..72c79da49
Binary files /dev/null and b/docs/image/elabProofStateEx1_1.png differ
diff --git a/docs/image/elabProofStateEx1_1.svg b/docs/image/elabProofStateEx1_1.svg
new file mode 100644
index 000000000..862c3f368
--- /dev/null
+++ b/docs/image/elabProofStateEx1_1.svg
@@ -0,0 +1,312 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elabProofStateEx1_1.svg">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="298"
+     inkscape:cy="772.5"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       sodipodi:linespacing="125%"
+       id="text4140"
+       y="226.36218"
+       x="401"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="226.36218"
+         x="401"
+         sodipodi:role="line"
+         id="tspan4144">hole_2</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4173"
+       y="198.36218"
+       x="135"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="198.36218"
+         x="135"
+         id="tspan4175"
+         sodipodi:role="line">Environment</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="393"
+       y="197.36218"
+       id="text4177"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4179"
+         x="393"
+         y="197.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1">Holes</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4181"
+       y="197.36218"
+       x="503"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="197.36218"
+         x="503"
+         id="tspan4183"
+         sodipodi:role="line">Guess</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4185"
+       y="199.36218"
+       x="247"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="199.36218"
+         x="247"
+         id="tspan4187"
+         sodipodi:role="line">Goal</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4189"
+       width="39"
+       height="32"
+       x="134"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="206.3622"
+       x="182"
+       height="32"
+       width="200"
+       id="rect4191"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4195"
+       width="95"
+       height="32"
+       x="494"
+       y="206.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4197"
+       width="95"
+       height="32"
+       x="389"
+       y="237.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="269.36218"
+       x="389"
+       height="32"
+       width="95"
+       id="rect4199"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="205.3622"
+       x="389"
+       height="32"
+       width="95"
+       id="rect4201"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="400"
+       y="257.36218"
+       id="text4276"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4280"
+         sodipodi:role="line"
+         x="400"
+         y="257.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4159"
+       y="225.36218"
+       x="141"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="225.36218"
+         x="141"
+         sodipodi:role="line"
+         id="tspan4161">[ ]</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4163"
+       y="275.36218"
+       x="135"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="275.36218"
+         x="135"
+         sodipodi:role="line"
+         id="tspan4165">starts off empty</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 154,237.3622 0,25"
+       id="path4167"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="188"
+       y="227.36218"
+       id="text4786"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         x="188"
+         y="227.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4790">(hole_2 , pi_arg : Nat-&gt;Nat)</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="233.57927"
+       y="309.21585"
+       id="text4794"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4796"
+         sodipodi:role="line"
+         x="233.57927"
+         y="309.21585"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">this is the signature</tspan><tspan
+         sodipodi:role="line"
+         x="233.57927"
+         y="327.96585"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4810">we are looking for</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4798"
+       d="m 298,236.3622 -0.42683,58.52439"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4800"
+       y="335.85608"
+       x="383.54877"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="335.85608"
+         x="383.54877"
+         sodipodi:role="line"
+         id="tspan4802">machine chosen</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="354.60608"
+         x="383.54877"
+         sodipodi:role="line"
+         id="tspan4812">names for the holes</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 432,265.3622 0.15244,56.82317"
+       id="path4804"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="498"
+       y="227.36218"
+       id="text4806"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4808"
+         sodipodi:role="line"
+         x="498"
+         y="227.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">no guess yet</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabProofStateEx1_2.png b/docs/image/elabProofStateEx1_2.png
new file mode 100644
index 000000000..8dc1aee48
Binary files /dev/null and b/docs/image/elabProofStateEx1_2.png differ
diff --git a/docs/image/elabProofStateEx1_2.svg b/docs/image/elabProofStateEx1_2.svg
new file mode 100644
index 000000000..3a38cc200
--- /dev/null
+++ b/docs/image/elabProofStateEx1_2.svg
@@ -0,0 +1,281 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elabProofStateEx1_2.svg"
+   inkscape:export-filename="/home/mjb/Idris-dev/docs/image/elabProofStateEx1_2.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4252"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="211.75967"
+     inkscape:cy="688.76752"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       sodipodi:linespacing="125%"
+       id="text4140"
+       y="226.36218"
+       x="401"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="226.36218"
+         x="401"
+         sodipodi:role="line"
+         id="tspan4144">hole_2</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4173"
+       y="198.36218"
+       x="135"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="198.36218"
+         x="135"
+         id="tspan4175"
+         sodipodi:role="line">Environment</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="393"
+       y="197.36218"
+       id="text4177"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4179"
+         x="393"
+         y="197.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1">Holes</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4181"
+       y="197.36218"
+       x="503"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="197.36218"
+         x="503"
+         id="tspan4183"
+         sodipodi:role="line">Guess</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4185"
+       y="199.36218"
+       x="247"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="199.36218"
+         x="247"
+         id="tspan4187"
+         sodipodi:role="line">Goal</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4189"
+       width="92"
+       height="32"
+       x="134"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="206.3622"
+       x="234"
+       height="32"
+       width="148"
+       id="rect4191"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4195"
+       width="95"
+       height="32"
+       x="497"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4197"
+       width="95"
+       height="32"
+       x="389"
+       y="237.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="269.36218"
+       x="389"
+       height="32"
+       width="95"
+       id="rect4199"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="205.3622"
+       x="389"
+       height="32"
+       width="95"
+       id="rect4201"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="400"
+       y="257.36218"
+       id="text4276"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4280"
+         sodipodi:role="line"
+         x="400"
+         y="257.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4159"
+       y="225.36218"
+       x="140"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="225.36218"
+         x="140"
+         sodipodi:role="line"
+         id="tspan4161">(x, λ Nat)</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="266"
+       y="226.36218"
+       id="text4786"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         x="266"
+         y="226.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4790">(hole_2 , Nat)</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4800"
+       y="290.36218"
+       x="163"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="290.36218"
+         x="163"
+         sodipodi:role="line"
+         id="tspan4812">replace the focussed hole</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="309.11218"
+         x="163"
+         sodipodi:role="line"
+         id="tspan6225">with a lambda</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 307,242.3622 c -5.24693,34.96318 -108.05981,45.71777 -126,0"
+       id="path4804"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="510"
+       y="226.36218"
+       id="text4174"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4176"
+         sodipodi:role="line"
+         x="510"
+         y="226.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">x:Nat</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/elabProofStateEx1_3.png b/docs/image/elabProofStateEx1_3.png
new file mode 100644
index 000000000..53204fd52
Binary files /dev/null and b/docs/image/elabProofStateEx1_3.png differ
diff --git a/docs/image/elabProofStateEx1_3.svg b/docs/image/elabProofStateEx1_3.svg
new file mode 100644
index 000000000..4c4aee264
--- /dev/null
+++ b/docs/image/elabProofStateEx1_3.svg
@@ -0,0 +1,244 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="elabProofStateEx1_3.svg"
+   inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"
+   inkscape:export-xdpi="61.120499"
+   inkscape:export-ydpi="61.120499">
+  <defs
+     id="defs4" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="345.95856"
+     inkscape:cy="688.76752"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       sodipodi:linespacing="125%"
+       id="text4140"
+       y="226.36218"
+       x="401"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="226.36218"
+         x="401"
+         sodipodi:role="line"
+         id="tspan4144">hole_2</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4173"
+       y="198.36218"
+       x="135"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="198.36218"
+         x="135"
+         id="tspan4175"
+         sodipodi:role="line">Environment</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="393"
+       y="197.36218"
+       id="text4177"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         sodipodi:role="line"
+         id="tspan4179"
+         x="393"
+         y="197.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1">Holes</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4181"
+       y="197.36218"
+       x="503"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="197.36218"
+         x="503"
+         id="tspan4183"
+         sodipodi:role="line">Guess</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4185"
+       y="199.36218"
+       x="247"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="199.36218"
+         x="247"
+         id="tspan4187"
+         sodipodi:role="line">Goal</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4189"
+       width="92"
+       height="32"
+       x="134"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png" />
+    <rect
+       y="206.3622"
+       x="234"
+       height="32"
+       width="148"
+       id="rect4191"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4195"
+       width="95"
+       height="32"
+       x="497"
+       y="205.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4197"
+       width="95"
+       height="32"
+       x="389"
+       y="237.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png" />
+    <rect
+       y="205.3622"
+       x="389"
+       height="32"
+       width="95"
+       id="rect4201"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="400"
+       y="257.36218"
+       id="text4276"
+       sodipodi:linespacing="125%"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         id="tspan4280"
+         sodipodi:role="line"
+         x="400"
+         y="257.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">hole_0</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4159"
+       y="225.36218"
+       x="140"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="225.36218"
+         x="140"
+         sodipodi:role="line"
+         id="tspan4161">(x, λ Nat)</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="266"
+       y="226.36218"
+       id="text4786"
+       sodipodi:linespacing="125%"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         sodipodi:role="line"
+         x="266"
+         y="226.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4790">(hole_2 , Nat)</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="510"
+       y="226.36218"
+       id="text4174"
+       sodipodi:linespacing="125%"
+       inkscape:export-filename="/home/master/euclid/prog/idris/elaborator/elabTactics/example1/elabProofStateEx1_3.png"><tspan
+         id="tspan4176"
+         sodipodi:role="line"
+         x="510"
+         y="226.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">x:Nat</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/fill.png b/docs/image/fill.png
new file mode 100644
index 000000000..a8356715e
Binary files /dev/null and b/docs/image/fill.png differ
diff --git a/docs/image/fill.svg b/docs/image/fill.svg
new file mode 100644
index 000000000..271e39a06
--- /dev/null
+++ b/docs/image/fill.svg
@@ -0,0 +1,163 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="fill.svg">
+  <defs
+     id="defs2">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker838"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path836" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4529"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#ff0000;stroke-width:1pt;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="313.5"
+     inkscape:cy="696.5"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="fill:#ffff00;fill-opacity:1;stroke-width:0.26458332"
+       id="rect22"
+       width="31.75"
+       height="5.5562501"
+       x="70.114571"
+       y="114.96667"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="65.352081"
+       y="105.17709"
+       id="text12"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan10"
+         x="65.352081"
+         y="105.17709"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332">? {hole} . {hole}</tspan></text>
+    <text
+       id="text16"
+       y="118.67083"
+       x="56.356247"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="118.67083"
+         x="56.356247"
+         id="tspan14"
+         sodipodi:role="line">?{hole} ≈ Prelude.Nat.Z . {hole}</tspan></text>
+    <text
+       id="text20"
+       y="110.99791"
+       x="82.814583"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="110.99791"
+         x="82.814583"
+         id="tspan18"
+         sodipodi:role="line">fill `(Z)</tspan></text>
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 80.668481,106.30075 -0.0032,7.57492"
+       id="path4518"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="63.499996"
+       y="93.006248"
+       id="text832"><tspan
+         sodipodi:role="line"
+         id="tspan830"
+         x="63.499996"
+         y="93.006248"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">focus</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path834"
+       d="m 66.645564,94.659084 -0.0032,5.458256"
+       style="fill:none;stroke:#0000ff;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker838)" />
+  </g>
+</svg>
diff --git a/docs/image/generateDatatype.png b/docs/image/generateDatatype.png
new file mode 100644
index 000000000..8c67974eb
Binary files /dev/null and b/docs/image/generateDatatype.png differ
diff --git a/docs/image/generateDatatype.svg b/docs/image/generateDatatype.svg
new file mode 100644
index 000000000..5e7e34420
--- /dev/null
+++ b/docs/image/generateDatatype.svg
@@ -0,0 +1,540 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="generateDatatype.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker7147"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path7149" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker6819"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path6821"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker6325"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path6327" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker5163"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path5165"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker5133"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path5135" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow2Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4183"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="380.92935"
+     inkscape:cy="520"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1212"
+     inkscape:window-height="1011"
+     inkscape:window-x="-4"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4136"
+       width="201"
+       height="69"
+       x="116"
+       y="203.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="322.36218"
+       x="113"
+       height="69"
+       width="201"
+       id="rect4138"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="202.3622"
+       x="381"
+       height="69"
+       width="201"
+       id="rect4140"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="125"
+       y="227.3622"
+       id="text4142"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4144"
+         x="125"
+         y="227.3622">declareDatatype</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4146"
+       y="225.3622"
+       x="389"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="225.3622"
+         x="389"
+         id="tspan4148"
+         sodipodi:role="line">defineDatatype</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5133)"
+       d="m 190,271.3622 0,48"
+       id="path4150"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text5074"
+       y="295.36218"
+       x="201"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="295.36218"
+         x="201"
+         sodipodi:role="line"
+         id="tspan5080"
+         style="font-size:15px;fill:#ff0000">Declare</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="117"
+       y="344.36218"
+       id="text5082"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#0000ff"
+         sodipodi:role="line"
+         id="tspan5084"
+         x="117"
+         y="344.36218">name:TTName</tspan><tspan
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5086"
+         sodipodi:role="line"
+         x="117"
+         y="363.11218">arguments:List FunArg</tspan><tspan
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5088"
+         sodipodi:role="line"
+         x="117"
+         y="381.86218">returnType:Raw</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="111"
+       y="313.36218"
+       id="text5095"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#0000ff;"
+         id="tspan5097"
+         sodipodi:role="line"
+         x="111"
+         y="313.36218">TyDecl</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect5099"
+       width="125"
+       height="88"
+       x="170"
+       y="415.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path5101"
+       d="m 247,364.3622 0,48"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Mend)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="260"
+       y="408.36218"
+       id="text5103"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan5105"
+         sodipodi:role="line"
+         x="260"
+         y="408.36218">MkFunArg</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5107"
+       y="437.36218"
+       x="174"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="437.36218"
+         x="174"
+         id="tspan5109"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff">name:TTName</tspan><tspan
+         y="456.11218"
+         x="174"
+         sodipodi:role="line"
+         id="tspan5113"
+         style="font-size:15px;fill:#0000ff">type:Raw</tspan><tspan
+         y="474.86218"
+         x="174"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5121">plicity:Plicity</tspan><tspan
+         y="493.61218"
+         x="174"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5123">erasure:Erasure</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5115"
+       y="409.36218"
+       x="170"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="409.36218"
+         x="170"
+         sodipodi:role="line"
+         id="tspan5117"
+         style="font-size:15px;fill:#0000ff">FunArg</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5125"
+       y="526.36218"
+       x="105"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="526.36218"
+         x="105"
+         sodipodi:role="line"
+         id="tspan5127"
+         style="font-size:15px;fill:#ff0000">Explicit</tspan><tspan
+         y="545.11218"
+         x="105"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#ff0000"
+         id="tspan5129">Implicit</tspan><tspan
+         y="563.86218"
+         x="105"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#ff0000"
+         id="tspan5131">Constraint</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path5161"
+       d="m 169,473.3622 c -30.23945,2.9603 -39.98191,17.10078 -41,36"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5163)"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker6325)"
+       d="m 245,499.3622 0,28"
+       id="path6319"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text6321"
+       y="544.36218"
+       x="221"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="544.36218"
+         x="221"
+         sodipodi:role="line"
+         id="tspan6323"
+         style="font-size:15px;fill:#ff0000">Erased</tspan><tspan
+         y="563.11218"
+         x="221"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6773">NotErased</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect6775"
+       width="247"
+       height="49"
+       x="347"
+       y="322.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path6777"
+       d="m 458,271.3622 0,48"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5133)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="469"
+       y="295.36218"
+       id="text6779"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6781"
+         sodipodi:role="line"
+         x="469"
+         y="295.36218">DefineDatatype</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6783"
+       y="344.36218"
+       x="351"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="344.36218"
+         x="351"
+         sodipodi:role="line"
+         id="tspan6789"
+         style="font-size:15px;fill:#0000ff">name:TTName</tspan><tspan
+         y="363.11218"
+         x="351"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan7130">constructors : List ConstructorDefn</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6791"
+       y="313.36218"
+       x="379"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="313.36218"
+         x="379"
+         sodipodi:role="line"
+         id="tspan6793"
+         style="font-size:15px;fill:#0000ff">DataDefn</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect6799"
+       width="201"
+       height="69"
+       x="380"
+       y="418.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path6801"
+       d="m 539,367.3622 0,48"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker6819)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="450"
+       y="386.36218"
+       id="text6803"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6805"
+         sodipodi:role="line"
+         x="450"
+         y="386.36218">Constructor</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6807"
+       y="440.36218"
+       x="384"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="440.36218"
+         x="384"
+         id="tspan6809"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff">name:TTName</tspan><tspan
+         y="459.11218"
+         x="384"
+         sodipodi:role="line"
+         id="tspan6811"
+         style="font-size:15px;fill:#0000ff">arguments:List FunArg</tspan><tspan
+         y="477.86218"
+         x="384"
+         sodipodi:role="line"
+         id="tspan6813"
+         style="font-size:15px;fill:#0000ff">returnType:Raw</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6815"
+       y="409.36218"
+       x="378"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="409.36218"
+         x="378"
+         sodipodi:role="line"
+         id="tspan6817"
+         style="font-size:15px;fill:#0000ff">ConstructorDefn</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text7135"
+       y="425.36218"
+       x="307"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         y="425.36218"
+         x="307"
+         sodipodi:role="line"
+         id="tspan7137"
+         style="font-size:15px;fill:#ff0000">MkFunArg</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker7147)"
+       d="m 379,458.3622 -80,-35"
+       id="path7145"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+  </g>
+</svg>
diff --git a/docs/image/generateFunction.png b/docs/image/generateFunction.png
new file mode 100644
index 000000000..9e1b7277b
Binary files /dev/null and b/docs/image/generateFunction.png differ
diff --git a/docs/image/generateFunction.svg b/docs/image/generateFunction.svg
new file mode 100644
index 000000000..a5c37e0eb
--- /dev/null
+++ b/docs/image/generateFunction.svg
@@ -0,0 +1,588 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="generateFunction.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4348"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path4350" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker7147"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path7149" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker6819"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path6821"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker6325"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path6327" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker5163"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path5165"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker5133"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path5135" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow2Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4183"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="380.92935"
+     inkscape:cy="520"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1212"
+     inkscape:window-height="1011"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4136"
+       width="201"
+       height="69"
+       x="116"
+       y="203.3622"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="322.36218"
+       x="113"
+       height="69"
+       width="201"
+       id="rect4138"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="202.3622"
+       x="381"
+       height="69"
+       width="201"
+       id="rect4140"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="125"
+       y="227.3622"
+       id="text4142"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4144"
+         x="125"
+         y="227.3622">declareType</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4146"
+       y="225.3622"
+       x="389"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="225.3622"
+         x="389"
+         id="tspan4148"
+         sodipodi:role="line">defineFunction</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5133)"
+       d="m 190,271.3622 0,48"
+       id="path4150"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text5074"
+       y="295.36218"
+       x="201"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="295.36218"
+         x="201"
+         sodipodi:role="line"
+         id="tspan5080"
+         style="font-size:15px;fill:#ff0000">Declare</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="117"
+       y="344.36218"
+       id="text5082"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#0000ff"
+         sodipodi:role="line"
+         id="tspan5084"
+         x="117"
+         y="344.36218">name:TTName</tspan><tspan
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5086"
+         sodipodi:role="line"
+         x="117"
+         y="363.11218">arguments:List FunArg</tspan><tspan
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5088"
+         sodipodi:role="line"
+         x="117"
+         y="381.86218">returnType:Raw</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="111"
+       y="313.36218"
+       id="text5095"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#0000ff;"
+         id="tspan5097"
+         sodipodi:role="line"
+         x="111"
+         y="313.36218">TyDecl</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect5099"
+       width="125"
+       height="88"
+       x="170"
+       y="415.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path5101"
+       d="m 247,364.3622 0,48"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Mend)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="260"
+       y="408.36218"
+       id="text5103"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan5105"
+         sodipodi:role="line"
+         x="260"
+         y="408.36218">MkFunArg</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5107"
+       y="437.36218"
+       x="174"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="437.36218"
+         x="174"
+         id="tspan5109"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff">name:TTName</tspan><tspan
+         y="456.11218"
+         x="174"
+         sodipodi:role="line"
+         id="tspan5113"
+         style="font-size:15px;fill:#0000ff">type:Raw</tspan><tspan
+         y="474.86218"
+         x="174"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5121">plicity:Plicity</tspan><tspan
+         y="493.61218"
+         x="174"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan5123">erasure:Erasure</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5115"
+       y="409.36218"
+       x="170"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="409.36218"
+         x="170"
+         sodipodi:role="line"
+         id="tspan5117"
+         style="font-size:15px;fill:#0000ff">FunArg</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text5125"
+       y="526.36218"
+       x="105"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="526.36218"
+         x="105"
+         sodipodi:role="line"
+         id="tspan5127"
+         style="font-size:15px;fill:#ff0000">Explicit</tspan><tspan
+         y="545.11218"
+         x="105"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#ff0000"
+         id="tspan5129">Implicit</tspan><tspan
+         y="563.86218"
+         x="105"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#ff0000"
+         id="tspan5131">Constraint</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path5161"
+       d="m 169,473.3622 c -30.23945,2.9603 -39.98191,17.10078 -41,36"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5163)"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker6325)"
+       d="m 245,499.3622 0,28"
+       id="path6319"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text6321"
+       y="544.36218"
+       x="221"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="544.36218"
+         x="221"
+         sodipodi:role="line"
+         id="tspan6323"
+         style="font-size:15px;fill:#ff0000">Erased</tspan><tspan
+         y="563.11218"
+         x="221"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6773">NotErased</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect6775"
+       width="247"
+       height="49"
+       x="347"
+       y="322.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path6777"
+       d="m 458,271.3622 0,48"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5133)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="469"
+       y="295.36218"
+       id="text6779"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6781"
+         sodipodi:role="line"
+         x="469"
+         y="295.36218">DefineFun</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6783"
+       y="344.36218"
+       x="351"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="344.36218"
+         x="351"
+         sodipodi:role="line"
+         id="tspan6789"
+         style="font-size:15px;fill:#0000ff">name:TTName</tspan><tspan
+         y="363.11218"
+         x="351"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan7130">clauses : List (FunClause a)</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6791"
+       y="313.36218"
+       x="379"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="313.36218"
+         x="379"
+         sodipodi:role="line"
+         id="tspan6793"
+         style="font-size:15px;fill:#0000ff">FunDefn</tspan></text>
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect6799"
+       width="86"
+       height="64"
+       x="372"
+       y="462.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path6801"
+       d="m 552,370.3622 0,86"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker6819)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="352"
+       y="418.36218"
+       id="text6803"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6805"
+         sodipodi:role="line"
+         x="352"
+         y="418.36218">MkFunClause</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6807"
+       y="484.36218"
+       x="376"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="484.36218"
+         x="376"
+         sodipodi:role="line"
+         id="tspan6813"
+         style="font-size:15px;fill:#0000ff">lhs:a</tspan><tspan
+         y="503.11218"
+         x="376"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan4330">rhs:a</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6815"
+       y="453.36218"
+       x="370"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="453.36218"
+         x="370"
+         sodipodi:role="line"
+         id="tspan6817"
+         style="font-size:15px;fill:#0000ff">FunClause</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4321"
+       y="395.36218"
+       x="407"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         y="395.36218"
+         x="407"
+         sodipodi:role="line"
+         id="tspan4323"
+         style="font-size:15px;fill:#ff0000">MkImpossibleClause</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="461.36218"
+       x="473"
+       height="64"
+       width="86"
+       id="rect4332"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="477"
+       y="483.36218"
+       id="text4334"
+       sodipodi:linespacing="125%"><tspan
+         id="tspan4338"
+         style="font-size:15px;fill:#0000ff"
+         sodipodi:role="line"
+         x="477"
+         y="483.36218">lhs:a</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="471"
+       y="452.36218"
+       id="text4340"
+       sodipodi:linespacing="125%"><tspan
+         style="font-size:15px;fill:#0000ff"
+         id="tspan4342"
+         sodipodi:role="line"
+         x="471"
+         y="452.36218">FunClause</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4348)"
+       d="m 450,371.3622 0,84"
+       id="path4346"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+  </g>
+</svg>
diff --git a/docs/image/generateFunction2.png b/docs/image/generateFunction2.png
new file mode 100644
index 000000000..70ccd22b0
Binary files /dev/null and b/docs/image/generateFunction2.png differ
diff --git a/docs/image/generateFunction2.svg b/docs/image/generateFunction2.svg
new file mode 100644
index 000000000..10008bf4a
--- /dev/null
+++ b/docs/image/generateFunction2.svg
@@ -0,0 +1,430 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="generateFunction2.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4439"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path4441" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4433"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4435"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4427"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path4429" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4411"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path4413" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4407"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4409"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4403"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4405"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4359"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path4361" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4349"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4351"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker7147"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path7149" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker6325"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow2Mend">
+      <path
+         transform="scale(0.6) rotate(180) translate(0,0)"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         id="path6327" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow2Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker5163"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path5165"
+         style="fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round;stroke:#ff0000;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.9730900,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z "
+         transform="scale(0.6) rotate(180) translate(0,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="380.92935"
+     inkscape:cy="592.42473"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1067"
+     inkscape:window-height="1011"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect6799"
+       width="86"
+       height="64"
+       x="203"
+       y="105.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="201"
+       y="211.36218"
+       id="text6803"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan6805"
+         sodipodi:role="line"
+         x="201"
+         y="211.36218">RBind <tspan
+   style="fill:#0000ff"
+   id="tspan4367">TTName</tspan> (<tspan
+   style="fill:#0000ff"
+   id="tspan4363">Binder TT</tspan>) <tspan
+   style="fill:#0000ff"
+   id="tspan4365"> TT</tspan></tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6807"
+       y="127.36218"
+       x="207"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="127.36218"
+         x="207"
+         sodipodi:role="line"
+         id="tspan6813"
+         style="font-size:15px;fill:#0000ff">lhs:a</tspan><tspan
+         y="146.11218"
+         x="207"
+         sodipodi:role="line"
+         style="font-size:15px;fill:#0000ff"
+         id="tspan4330">rhs:a</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text6815"
+       y="96.362183"
+       x="201"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="96.362183"
+         x="201"
+         sodipodi:role="line"
+         id="tspan6817"
+         style="font-size:15px;fill:#0000ff">FunClause</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="177.36218"
+       x="153"
+       height="142"
+       width="350"
+       id="rect4332"
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="162"
+       y="168.36218"
+       id="text4340"
+       sodipodi:linespacing="125%"><tspan
+         style="font-size:15px;fill:#0000ff"
+         id="tspan4342"
+         sodipodi:role="line"
+         x="162"
+         y="168.36218">Raw</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4349)"
+       d="m 247,145.3622 c 28.96221,0.27049 22.31485,19.06346 -7,48"
+       id="path4346"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4333"
+       y="362.36218"
+       x="343"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         y="362.36218"
+         x="343"
+         sodipodi:role="line"
+         id="tspan4335"
+         style="font-size:15px;fill:#ff0000">PVar <tspan
+   style="fill:#0000ff"
+   id="tspan4415">a</tspan> (<tspan
+   style="fill:#0000ff"
+   id="tspan4369">Binder a</tspan>)</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path4337"
+       d="m 336,214.3622 0,158"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4407)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="439"
+       y="196.36218"
+       id="text4339"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan4341"
+         sodipodi:role="line"
+         x="439"
+         y="196.36218">RApp Raw Raw</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4359)"
+       d="m 396,216.3622 c 22.67213,51.77028 75.6614,-87.82153 4,-37"
+       id="path4343"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <rect
+       style="opacity:1;fill:none;fill-opacity:1;stroke:#0000ff;stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect4381"
+       width="314"
+       height="63"
+       x="152"
+       y="373.36218"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4383"
+       y="364.36218"
+       x="161"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         y="364.36218"
+         x="161"
+         sodipodi:role="line"
+         id="tspan4385"
+         style="font-size:15px;fill:#0000ff">Binder a</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="208"
+       y="254.36218"
+       id="text4417"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:15px;fill:#ff0000"
+         id="tspan4419"
+         sodipodi:role="line"
+         x="208"
+         y="254.36218">`{{code}}</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4421"
+       y="275.36218"
+       x="242"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;line-height:125%;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         y="275.36218"
+         x="242"
+         sodipodi:role="line"
+         id="tspan4423"
+         style="font-size:15px;fill:#ff0000">`{{body}}</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4427)"
+       d="m 266,218.3622 -26,17"
+       id="path4425"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path4431"
+       d="m 272,217.3622 9,42"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4433)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path4437"
+       d="m 248,124.3622 c 30.28183,6.20207 31.24081,36.56361 -10,70"
+       style="fill:none;fill-rule:evenodd;stroke:#ff0000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4439)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+  </g>
+</svg>
diff --git a/docs/image/idrisTopLevel.png b/docs/image/idrisTopLevel.png
new file mode 100644
index 000000000..f3d20f35e
Binary files /dev/null and b/docs/image/idrisTopLevel.png differ
diff --git a/docs/image/idrisTopLevel.svg b/docs/image/idrisTopLevel.svg
new file mode 100644
index 000000000..16287cea9
--- /dev/null
+++ b/docs/image/idrisTopLevel.svg
@@ -0,0 +1,524 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.91 r13725"
+   sodipodi:docname="idrisTopLevel.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4198"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4200"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4203"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path4205" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4197"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4199"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4182"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path4184"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker4176"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path4178" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4830"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4832"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4175"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="353.5"
+     inkscape:cy="669.5"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1744"
+     inkscape:window-height="1011"
+     inkscape:window-x="-4"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="21"
+       y="411.36221"
+       id="text4136"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4138"
+         x="21"
+         y="411.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000">Idris</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4140"
+       y="411.36221"
+       x="203"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="411.36221"
+         x="203"
+         id="tspan4142"
+         sodipodi:role="line">Idris</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;"
+       x="253"
+       y="402.36218"
+       id="text4144"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4146"
+         x="253"
+         y="402.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;">~</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4148"
+       y="411.60635"
+       x="451"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="411.60635"
+         x="451"
+         id="tspan4150"
+         sodipodi:role="line">TT</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="610"
+       y="411.36221"
+       id="text4152"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4154"
+         x="610"
+         y="411.36221"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000">Executable</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4156"
+       y="436.36218"
+       x="80"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="436.36218"
+         x="80"
+         id="tspan4158"
+         sodipodi:role="line">desugaring</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="M 81.977612,407.11261 188,407.3622"
+       id="path4160"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="281"
+       y="432.36218"
+       id="text4790"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4792"
+         x="281"
+         y="432.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'">elaboration</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4824"
+       y="394.36218"
+       x="498"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:20px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="394.36218"
+         x="498"
+         id="tspan4826"
+         sodipodi:role="line">compilation</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4830)"
+       d="m 495,405.33981 105,0.0224"
+       id="path4828"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:linespacing="125%"
+       id="text4166"
+       y="442.36218"
+       x="609"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="442.36218"
+         x="609"
+         id="tspan4168"
+         sodipodi:role="line">C</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="609"
+       y="475.36218"
+       id="text4170"
+       sodipodi:linespacing="125%"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4172"
+         x="609"
+         y="475.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:25px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000">JS</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path4174"
+       d="m 495,406.3622 104,26"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:8, 2;stroke-dashoffset:0;stroke-opacity:1;marker-end:url(#marker4176)"
+       sodipodi:nodetypes="cc" />
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:12, 2;stroke-dashoffset:0;stroke-opacity:1;marker-end:url(#marker4182)"
+       d="M 495,405.90781 599,467.3622"
+       id="path4180"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="20"
+       y="523.36218"
+       id="text4186"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         x="20"
+         y="523.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4190">Add implicitly quantified variables.</tspan><tspan
+         sodipodi:role="line"
+         x="20"
+         y="542.11218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4191">Conditional expressions replaced by function calls.</tspan></text>
+    <path
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       d="m 120.29902,440.01416 0.098,70.81863"
+       id="path4192"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4194"
+       y="367.36218"
+       x="358"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4198"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="367.36218"
+         x="358"
+         sodipodi:role="line">proof tactics</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path4202"
+       d="m 382.73881,368.53384 0.16418,32.3209"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4197)"
+       d="m 277,403.3622 37.7728,-0.0912"
+       id="path4195"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path4201"
+       d="m 335,403.15739 37.8864,-0.31841"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4203)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="215"
+       y="340.36218"
+       id="text4207"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         x="215"
+         y="340.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4209">during elaboration</tspan><tspan
+         sodipodi:role="line"
+         x="215"
+         y="359.11218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4213">may contain holes</tspan><tspan
+         sodipodi:role="line"
+         x="215"
+         y="377.86218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4199">and guesses</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       d="m 324,399.3622 0.11194,-38.03731"
+       id="path4211"
+       inkscape:connector-curvature="0" />
+    <text
+       sodipodi:linespacing="125%"
+       id="text4215"
+       y="461.36218"
+       x="233"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan4217"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="461.36218"
+         x="233"
+         sodipodi:role="line">Make explicit all types.</tspan><tspan
+         id="tspan4223"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="480.11218"
+         x="233"
+         sodipodi:role="line">Make explicit function and </tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         y="498.86218"
+         x="233"
+         sodipodi:role="line"
+         id="tspan4235">     pattern match variables.</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       d="m 323.7402,434.372 0.0637,16.14706"
+       id="path4237"
+       inkscape:connector-curvature="0" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4198)"
+       d="m 395,402.49819 45.38391,-0.31841"
+       id="path4196"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:15px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="431"
+       y="465.36218"
+       id="text4202"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         x="431"
+         y="465.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4204">type checker</tspan><tspan
+         sodipodi:role="line"
+         x="431"
+         y="484.11218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold'"
+         id="tspan4208">Raw -&gt; TT</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       style="fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       d="m 421,411.3622 39,40"
+       id="path4206"
+       inkscape:connector-curvature="0" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="378"
+       y="417.36218"
+       id="text4203"
+       sodipodi:linespacing="125%"><tspan
+         sodipodi:role="line"
+         id="tspan4205"
+         x="378"
+         y="417.36218"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000">Raw</tspan></text>
+    <text
+       sodipodi:linespacing="125%"
+       id="text4205"
+       y="432.36218"
+       x="201"
+       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000"
+         y="432.36218"
+         x="201"
+         id="tspan4207"
+         sodipodi:role="line">PTerm</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/parserModules.png b/docs/image/parserModules.png
new file mode 100644
index 000000000..1efab2c67
Binary files /dev/null and b/docs/image/parserModules.png differ
diff --git a/docs/image/parserModules.svg b/docs/image/parserModules.svg
new file mode 100644
index 000000000..d093f170c
--- /dev/null
+++ b/docs/image/parserModules.svg
@@ -0,0 +1,1251 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="parserModules.svg">
+  <defs
+     id="defs2">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1078"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1076" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible"
+       id="marker1074"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mstart">
+      <path
+         transform="scale(0.4) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1072" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker1021"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1019"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mstart"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker1017"
+       style="overflow:visible"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1015"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker973"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path971" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible"
+       id="marker969"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mstart"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path967" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1214"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mstart"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mstart"
+       style="overflow:visible"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1211"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1000"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path998" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1127"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1125" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1123"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#00aa3f;stroke-width:1pt;stroke-opacity:1;fill:#00aa3f;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1121" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1117"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#00aa3f;stroke-width:1pt;stroke-opacity:1;fill:#00aa3f;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1115" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker1111"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1109"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#00aa3f;stroke-width:1pt;stroke-opacity:1;fill:#00aa3f;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1105"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#00aa3f;stroke-width:1pt;stroke-opacity:1;fill:#00aa3f;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1103" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1057"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1055" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker1045"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1043"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker1033"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path1031"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker1027"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path1025"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1015"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1013" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1009"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1007" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1003"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#ff0000;stroke-width:1pt;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1001" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker997"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path995"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#ff0000;stroke-width:1pt;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker991"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#ff0000;stroke-width:1pt;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path989" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker967"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path965"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker961"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path959" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker3617"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path3615" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker2049"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path2047"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1539"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1537" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="368.33949"
+     inkscape:cy="547.05121"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1800"
+     inkscape:window-height="1011"
+     inkscape:window-x="86"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0"
+     inkscape:snap-nodes="false" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text854"
+       y="119.72919"
+       x="131.23334"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="129.46077"
+         x="131.23334"
+         id="tspan852"
+         sodipodi:role="line" /></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect875"
+       width="43.656246"
+       height="18.520832"
+       x="92.339577"
+       y="110.20418" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path881"
+       d="m 135.73129,118.93554 16.66875,-0.26459"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker2049)" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text895"
+       y="115.76046"
+       x="138.37698"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="115.76046"
+         x="138.37698"
+         id="tspan893"
+         sodipodi:role="line">PTerm</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text903"
+       y="115.23129"
+       x="93.927078"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332"
+         y="115.23129"
+         x="93.927078"
+         id="tspan901"
+         sodipodi:role="line">module Idris.Parser</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332"
+         y="128.46045"
+         x="93.927078"
+         sodipodi:role="line"
+         id="tspan1021" /></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect905"
+       width="44.185421"
+       height="18.785423"
+       x="40.463421"
+       y="141.50723"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="155.183"
+       x="95.51458"
+       height="18.256256"
+       width="49.212498"
+       id="rect907"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker961)"
+       d="m 84.648837,152.88468 9.013662,7.32603"
+       id="path909"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path911"
+       d="m 22.471756,152.09108 16.66875,-0.26459"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1539)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="24.059256"
+       y="148.91547"
+       id="text917"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan915"
+         x="24.059256"
+         y="148.91547"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332">String</tspan></text>
+    <text
+       id="text923"
+       y="137.72075"
+       x="65.087494"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="137.72075"
+         x="65.087494"
+         sodipodi:role="line"
+         id="tspan921">List (TokenData Token)</tspan></text>
+    <text
+       id="text931"
+       y="218.41846"
+       x="36.512497"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;"
+         y="218.41846"
+         x="36.512497"
+         id="tspan929"
+         sodipodi:role="line">module Text.Lexer</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="98.160408"
+       y="161.00386"
+       id="text935"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan933"
+         x="98.160408"
+         y="161.00386"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">module Parser.Support</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="214.18488"
+       x="32.01458"
+       height="6.3500061"
+       width="43.656254"
+       id="rect937"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect939"
+       width="42.862495"
+       height="6.8791728"
+       x="94.985413"
+       y="214.18488" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="42.31551"
+       y="147.59224"
+       id="text951"><tspan
+         sodipodi:role="line"
+         id="tspan949"
+         x="42.31551"
+         y="147.59224"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">module Parser.Lexer</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path963"
+       d="m 53.299561,213.22831 1.53604,-51.85834"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker967)" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       x="23.220526"
+       y="251.01649"
+       id="text971"><tspan
+         sodipodi:role="line"
+         id="tspan969"
+         x="23.220526"
+         y="251.01649"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;">module Text.Lexer.Core</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect973"
+       width="47.889587"
+       height="6.3500061"
+       x="21.633026"
+       y="246.51833"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker991)"
+       d="m 48.369316,228.83873 0.04943,-6.71548"
+       id="path975"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       id="text979"
+       y="241.96643"
+       x="23.283329"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;"
+         y="241.96643"
+         x="23.283329"
+         id="tspan977"
+         sodipodi:role="line">module Text.Quantity</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="237.46826"
+       x="21.695829"
+       height="6.2469702"
+       width="43.853985"
+       id="rect981"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       x="23.18244"
+       y="233.68523"
+       id="text985"><tspan
+         sodipodi:role="line"
+         id="tspan983"
+         x="23.18244"
+         y="233.68523"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;">module Text.Token</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect987"
+       width="39.011257"
+       height="5.9464455"
+       x="21.59494"
+       y="229.18706"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path993"
+       d="M 62.998384,237.01083 62.846037,221.92147"
+       style="fill:#ff0000;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker997)" />
+    <path
+       style="fill:#ff0000;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1003)"
+       d="M 67.336659,246.29272 67.083422,221.71969"
+       id="path999"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1009)"
+       d="M 73.937074,214.02206 94.72083,169.47102"
+       id="path1005"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1015)"
+       d="M 108.0684,213.75748 108.0169,173.5408"
+       id="path1011"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1019"
+       y="218.94762"
+       x="96.837494"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;"
+         y="218.94762"
+         x="96.837494"
+         id="tspan1017"
+         sodipodi:role="line">module Text.Parser</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path1023"
+       d="m 113.62466,154.75539 0.0397,-25.06978"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1027)" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path1029"
+       d="M 83.757032,147.15485 97.991855,129.77582"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1033)" />
+    <rect
+       y="142.91107"
+       x="118.15033"
+       height="6.6968417"
+       width="45.2328"
+       id="rect1035"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path1037"
+       d="m 121.83513,142.5835 -0.0515,-12.72267"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1057)" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="120.00241"
+       y="147.67372"
+       id="text1041"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan1039"
+         x="120.00241"
+         y="147.67372"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">module TTImp.TTImp</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect1047"
+       width="42.862495"
+       height="6.8791728"
+       x="125.28364"
+       y="133.0603" />
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1045)"
+       d="m 145.18016,132.82376 -9.18434,-4.09859"
+       id="path1049"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1053"
+       y="137.82295"
+       x="127.13572"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332"
+         y="137.82295"
+         x="127.13572"
+         id="tspan1051"
+         sodipodi:role="line">module Idris.Syntax</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#00871c;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect1061"
+       width="59.266659"
+       height="16.13958"
+       x="97.102074"
+       y="186.93335" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path1063"
+       d="m 76.993749,160.21044 18.785417,28.83958"
+       style="fill:none;stroke:#00aa3f;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1105)"
+       sodipodi:nodetypes="cc" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1081"
+       y="192.48962"
+       x="157.95586"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#008000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332"
+         y="192.48962"
+         x="157.95586"
+         id="tspan1079"
+         sodipodi:role="line">SExp</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1089"
+       y="192.75421"
+       x="98.954155"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#008000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332"
+         y="192.75421"
+         x="98.954155"
+         id="tspan1087"
+         sodipodi:role="line">module Idris.IDEMode.Parser</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#7c007d;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect1097"
+       width="55.033333"
+       height="14.287498"
+       x="20.637447"
+       y="52.524986" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1101"
+       y="58.610428"
+       x="23.54781"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#800080;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#800080;stroke-width:0.26458332;"
+         y="58.610428"
+         x="23.54781"
+         id="tspan1099"
+         sodipodi:role="line">module Idris.REPL</tspan></text>
+    <path
+       sodipodi:nodetypes="cc"
+       style="fill:none;stroke:#00aa3f;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1111)"
+       d="m 112.97708,174.23335 0,14.02292"
+       id="path1107"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path1113"
+       d="m 148.43125,150.15592 0.26458,35.71911"
+       style="fill:none;stroke:#00aa3f;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1117)"
+       sodipodi:nodetypes="cc" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       inkscape:connector-curvature="0"
+       id="path1119"
+       d="m 156.56889,195.56696 13.16435,-0.41532"
+       style="fill:none;stroke:#00aa3f;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1123)"
+       sodipodi:nodetypes="cc" />
+    <text
+       id="text950"
+       y="104.70191"
+       x="22.426785"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332"
+         y="104.70191"
+         x="22.426785"
+         id="tspan948"
+         sodipodi:role="line">module Core.Core</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="100.20374"
+       x="20.839275"
+       height="9.7895899"
+       width="47.889587"
+       id="rect952"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="22.955944"
+       y="108.40608"
+       id="text956"><tspan
+         sodipodi:role="line"
+         id="tspan954"
+         x="22.955944"
+         y="108.40608"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332">error messages</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="79.312202"
+       y="92.266502"
+       id="text960"><tspan
+         sodipodi:role="line"
+         id="tspan958"
+         x="79.312202"
+         y="92.266502"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">module Core.CompileExpr</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect962"
+       width="61.912495"
+       height="18.785419"
+       x="77.724693"
+       y="87.768333"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text966"
+       y="95.970665"
+       x="79.841362"
+       style="font-style:normal;font-weight:normal;font-size:3.52777767px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         y="95.970665"
+         x="79.841362"
+         sodipodi:role="line"
+         id="tspan968">Representation of expressions ready</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         y="100.38039"
+         x="79.841362"
+         sodipodi:role="line"
+         id="tspan974">for compiling: CExp</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         y="104.79011"
+         x="79.841362"
+         sodipodi:role="line"
+         id="tspan972">Type erased, explicit case trees</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="22.162193"
+       y="73.217979"
+       id="text978"><tspan
+         sodipodi:role="line"
+         id="tspan976"
+         x="22.162193"
+         y="73.217979"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">module Idris.CommandLine</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect980"
+       width="55.827087"
+       height="10.054173"
+       x="20.574694"
+       y="68.719742"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text984"
+       y="76.92215"
+       x="22.69136"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         y="76.92215"
+         x="22.69136"
+         id="tspan982"
+         sodipodi:role="line">command line options</tspan></text>
+    <text
+       id="text988"
+       y="89.886726"
+       x="22.162193"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332"
+         y="89.886726"
+         x="22.162193"
+         id="tspan986"
+         sodipodi:role="line">module Idris.Error</tspan></text>
+    <rect
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       y="85.388489"
+       x="20.574694"
+       height="9.5250101"
+       width="37.835419"
+       id="rect990"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="22.69136"
+       y="93.590897"
+       id="text994"><tspan
+         sodipodi:role="line"
+         id="tspan992"
+         x="22.69136"
+         y="93.590897"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332">perror</tspan></text>
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1000)"
+       d="m 66.876776,99.410007 c -0.17822,-10.50534 -0.880145,-7.9985 -7.143748,-8.99444"
+       id="path996"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"
+       sodipodi:nodetypes="cc" />
+    <path
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="M 15.081249,210.48125 H 200.02499"
+       id="path1201"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;marker-start:url(#Arrow1Mstart);marker-end:url(#Arrow1Mend)"
+       d="m 154.78125,214.97917 -0.26459,40.21666"
+       id="path1203"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:0.40000001;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       x="158.75"
+       y="226.09137"
+       id="text1473"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan1471"
+         x="158.75"
+         y="226.09137"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;">'text' modules are</tspan><tspan
+         sodipodi:role="line"
+         x="158.75"
+         y="230.92491"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;"
+         id="tspan1475">also in Idris 1</tspan><tspan
+         sodipodi:role="line"
+         x="158.75"
+         y="235.75845"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332;"
+         id="tspan1477">library.</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path957"
+       d="m 172.77292,166.03125 -0.26459,40.21666"
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#marker969);marker-end:url(#marker973)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text965"
+       y="177.14345"
+       x="176.74167"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:0.40000001;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#008000;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"><tspan
+         id="tspan963"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="177.14345"
+         x="176.74167"
+         sodipodi:role="line">'IDEMode is for</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="181.97699"
+         x="176.74167"
+         sodipodi:role="line"
+         id="tspan981">communicating</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="186.81053"
+         x="176.74167"
+         sodipodi:role="line"
+         id="tspan984">with external</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="191.64406"
+         x="176.74167"
+         sodipodi:role="line"
+         id="tspan987">editors. It uses</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="196.4776"
+         x="176.74167"
+         sodipodi:role="line"
+         id="tspan989">SExp structure</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="201.31114"
+         x="176.74167"
+         sodipodi:role="line"
+         id="tspan991">which is Lisp-</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#008000;stroke-width:0.26458332;"
+         y="206.14468"
+         x="176.74167"
+         sodipodi:role="line"
+         id="tspan993">like.</tspan></text>
+    <path
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#marker1017);marker-end:url(#marker1021)"
+       d="m 172.77292,110.20417 -0.26459,40.21666"
+       id="path997"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:0.40000001;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="176.21251"
+       y="115.76012"
+       id="text1013"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan1011"
+         sodipodi:role="line"
+         x="176.21251"
+         y="115.76012"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332">Idris.Parser</tspan><tspan
+         sodipodi:role="line"
+         x="176.21251"
+         y="120.59366"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         id="tspan1050">reads from a</tspan><tspan
+         sodipodi:role="line"
+         x="176.21251"
+         y="125.42719"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         id="tspan1052">file and outputs</tspan><tspan
+         sodipodi:role="line"
+         x="176.21251"
+         y="130.26073"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         id="tspan1054">to a PTerm</tspan><tspan
+         sodipodi:role="line"
+         x="176.21251"
+         y="135.09427"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;stroke-width:0.26458332"
+         id="tspan1056">structure.</tspan></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path1058"
+       d="m 171.97917,51.731253 -0.26459,19.57916"
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#marker1074);marker-end:url(#marker1078)"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1070"
+       y="57.287201"
+       x="175.41876"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:0.40000001;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#800080;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#800080;stroke-width:0.26458332;"
+         y="57.287201"
+         x="175.41876"
+         sodipodi:role="line"
+         id="tspan1060">Idris.Parser</tspan><tspan
+         id="tspan1068"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#800080;stroke-width:0.26458332;"
+         y="62.120739"
+         x="175.41876"
+         sodipodi:role="line">reads from the</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:0.40000001;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#800080;stroke-width:0.26458332;"
+         y="66.954277"
+         x="175.41876"
+         sodipodi:role="line"
+         id="tspan1089">command line.</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/parserTopLevel.png b/docs/image/parserTopLevel.png
new file mode 100644
index 000000000..0772519d5
Binary files /dev/null and b/docs/image/parserTopLevel.png differ
diff --git a/docs/image/parserTopLevel.svg b/docs/image/parserTopLevel.svg
new file mode 100644
index 000000000..4f3a5ae97
--- /dev/null
+++ b/docs/image/parserTopLevel.svg
@@ -0,0 +1,294 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="topLevel.svg">
+  <defs
+     id="defs2">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker3617"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path3615" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker2891"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path2889"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker2049"
+       style="overflow:visible;"
+       inkscape:isstock="true">
+      <path
+         id="path2047"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1539"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1537" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path830"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="396.85039"
+     inkscape:cy="560"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect815"
+       width="35.983334"
+       height="18.25625"
+       x="37.306248"
+       y="79.512497"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="79.512497"
+       x="92.339577"
+       height="18.25625"
+       width="35.983334"
+       id="rect817"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 73.554166,88.508337 16.66875,-0.26459"
+       id="path819"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path1535"
+       d="m 18.785416,88.77292 16.66875,-0.26459"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1539)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker2049)"
+       d="m 128.32291,88.243753 16.66875,-0.26459"
+       id="path2045"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="20.372915"
+       y="85.597931"
+       id="text2857"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan2855"
+         x="20.372915"
+         y="85.597931"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332">String</tspan></text>
+    <text
+       id="text2861"
+       y="80.835434"
+       x="76.199997"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="80.835434"
+         x="76.199997"
+         sodipodi:role="line"
+         id="tspan2867">List</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="86.127098"
+         x="76.199997"
+         sodipodi:role="line"
+         id="tspan2871">Token</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="130.96875"
+       y="85.068764"
+       id="text2865"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan2863"
+         x="130.96875"
+         y="85.068764"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332">PTerm</tspan></text>
+    <text
+       id="text2875"
+       y="89.302101"
+       x="47.360416"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332;"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332;fill:#0000ff;"
+         y="89.302101"
+         x="47.360416"
+         id="tspan2873"
+         sodipodi:role="line">Lexer</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="100.27708"
+       y="89.037521"
+       id="text2879"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan2877"
+         x="100.27708"
+         y="89.037521"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">Parser</tspan></text>
+    <path
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker2891)"
+       d="m 52.916666,71.575003 v 7.67291"
+       id="path2887"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path3613"
+       d="m 108.74375,71.575003 v 7.67291"
+       style="fill:none;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker3617)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text4173"
+       y="69.987518"
+       x="43.391666"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="69.987518"
+         x="43.391666"
+         id="tspan4171"
+         sodipodi:role="line">Recogniser</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="97.102081"
+       y="69.722939"
+       id="text4177"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4175"
+         x="97.102081"
+         y="69.722939"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332">Grammar</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text854"
+       y="93.800011"
+       x="131.23334"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="103.5316"
+         x="131.23334"
+         id="tspan852"
+         sodipodi:role="line" /></text>
+  </g>
+</svg>
diff --git a/docs/image/recogniser.png b/docs/image/recogniser.png
new file mode 100644
index 000000000..8abd99efe
Binary files /dev/null and b/docs/image/recogniser.png differ
diff --git a/docs/image/recogniser.svg b/docs/image/recogniser.svg
new file mode 100644
index 000000000..8b3cffac9
--- /dev/null
+++ b/docs/image/recogniser.svg
@@ -0,0 +1,477 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="recogniser.svg">
+  <defs
+     id="defs2" />
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="384.45994"
+     inkscape:cy="560"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70599997;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect815"
+       width="112.44793"
+       height="77.258354"
+       x="6.3499999"
+       y="63.108334"
+       ry="3.96875"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:5.64444447px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="11.112496"
+       y="68.399994"
+       id="text819"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan817"
+         x="11.112496"
+         y="68.399994"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:5.64444447px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">Text.Lexer.Core</tspan></text>
+    <text
+       id="text823"
+       y="74.749992"
+       x="8.7312441"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="74.749992"
+         x="8.7312441"
+         id="tspan821"
+         sodipodi:role="line">data Recognise : (consumes : Bool) -&gt; Type where</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="80.041656"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan825">     Empty : Recognise False</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="85.333328"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan827">     Fail : Recognise c</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="90.624992"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan829">     Lookahead : (positive : Bool) -&gt; Recognise c -&gt; Recognise False</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="95.916656"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan831">     Pred : (Char -&gt; Bool) -&gt; Recognise True</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="101.20832"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan835">     SeqEat : Recognise True -&gt; Inf (Recognise e) -&gt; Recognise True</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="106.49999"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan837">     SeqEmpty : Recognise e1 -&gt; Recognise e2 -&gt; Recognise (e1 || e2)</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="111.79166"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan839">     Alt : Recognise e1 -&gt; Recognise e2 -&gt; Recognise (e1 &amp;&amp; e2)</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="117.08332"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan841" /><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="122.37499"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan843">||| A token recogniser. Guaranteed to consume at least one character.</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="127.66666"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan845">public export</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="132.95833"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan847">Lexer : Type</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="138.24998"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan849">Lexer = Recognise True</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="143.54166"
+         x="8.7312441"
+         sodipodi:role="line"
+         id="tspan851" /></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect850"
+       width="111.65417"
+       height="10.318749"
+       x="9.7895756"
+       y="97.504166"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="97.504166"
+       x="9.7895756"
+       height="15.610415"
+       width="111.38958"
+       id="rect852"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text870"
+       y="98.297905"
+       x="129.64584"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="98.297905"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan908">(&lt;+&gt;) : Recognise c1 -&gt; inf c1 (Recognise c2) -&gt; </tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="103.58957"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan929">                 Recognise (c1 || c2)</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="108.88124"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan916">Sequence two recognisers. If either consumes a</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="114.1729"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan918">character, the sequence is guaranteed to</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="119.46457"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan935">consume a character</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="124.75623"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan912" /><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="130.04791"
+         x="129.64584"
+         sodipodi:role="line"
+         id="tspan868" /></text>
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="m 129.38124,100.41458 -7.9375,-2.910414"
+       id="path937"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="130.175"
+       y="129.25418"
+       id="text953"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         x="130.175"
+         y="129.25418"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan973">(&lt;|&gt;) : Recognise c1 -&gt; Recognise c2 -&gt;</tspan><tspan
+         sodipodi:role="line"
+         x="130.175"
+         y="134.54584"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan975">                Recognise (c1 &amp;&amp; c2)</tspan><tspan
+         sodipodi:role="line"
+         x="130.175"
+         y="139.83751"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan983">Alternative recognisers. If both consume, the</tspan><tspan
+         sodipodi:role="line"
+         x="130.175"
+         y="145.12917"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan985">combination is guaranteed to consumer a</tspan><tspan
+         sodipodi:role="line"
+         x="130.175"
+         y="150.42084"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan992">character.</tspan><tspan
+         sodipodi:role="line"
+         x="130.175"
+         y="155.71251"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan977" /><tspan
+         id="tspan949"
+         sodipodi:role="line"
+         x="130.175"
+         y="161.00417"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /><tspan
+         id="tspan951"
+         sodipodi:role="line"
+         x="130.175"
+         y="166.29584"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /></text>
+    <path
+       inkscape:connector-curvature="0"
+       id="path996"
+       d="M 128.05833,126.87292 110.33125,110.46875"
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="28.045837"
+       y="51.731236"
+       id="text1012"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan1006"
+         sodipodi:role="line"
+         x="28.045837"
+         y="51.731236"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332">empty : Recognise False</tspan><tspan
+         sodipodi:role="line"
+         x="28.045837"
+         y="57.022903"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan1087">Recognise no input (doesn't consume any input)</tspan><tspan
+         id="tspan1008"
+         sodipodi:role="line"
+         x="28.045837"
+         y="62.314568"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /><tspan
+         id="tspan1010"
+         sodipodi:role="line"
+         x="28.045837"
+         y="67.606232"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1031"
+       y="49.614574"
+       x="114.56458"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="49.614574"
+         x="114.56458"
+         sodipodi:role="line"
+         id="tspan1025">fail : Recognise c</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="54.906242"
+         x="114.56458"
+         sodipodi:role="line"
+         id="tspan1089">A recogniser that always fails.</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="60.197906"
+         x="114.56458"
+         sodipodi:role="line"
+         id="tspan1027" /><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="65.489571"
+         x="114.56458"
+         sodipodi:role="line"
+         id="tspan1029" /></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text1039"
+       y="61.785423"
+       x="128.32292"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="61.785423"
+         x="128.32292"
+         sodipodi:role="line"
+         id="tspan1051">expect : Recognise c -&gt; Recognise False</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="67.077087"
+         x="128.32292"
+         sodipodi:role="line"
+         id="tspan1059">Positive lookahead. Never consumes input.</tspan><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="72.368759"
+         x="128.32292"
+         sodipodi:role="line"
+         id="tspan1035" /><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="77.660423"
+         x="128.32292"
+         sodipodi:role="line"
+         id="tspan1037" /></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="125.14791"
+       y="86.39167"
+       id="text1047"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan1041"
+         sodipodi:role="line"
+         x="125.14791"
+         y="86.39167"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332">pred : (Char -&gt; Bool) -&gt; Lexer</tspan><tspan
+         sodipodi:role="line"
+         x="125.14791"
+         y="91.683334"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan1085">Recognise a character that matches a predicate</tspan><tspan
+         id="tspan1043"
+         sodipodi:role="line"
+         x="125.14791"
+         y="96.975006"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /><tspan
+         id="tspan1045"
+         sodipodi:role="line"
+         x="125.14791"
+         y="102.26667"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect1053"
+       width="79.904167"
+       height="23.283327"
+       x="121.70833"
+       y="57.816666"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="128.32291"
+       y="72.897926"
+       id="text1069"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         id="tspan1063"
+         sodipodi:role="line"
+         x="128.32291"
+         y="72.897926"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332">reject : Recognise c -&gt; Recognise False</tspan><tspan
+         sodipodi:role="line"
+         x="128.32291"
+         y="78.18959"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan1073">Negative lookahead. Never consumes input.</tspan><tspan
+         sodipodi:role="line"
+         x="128.32291"
+         y="83.481262"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         id="tspan1075" /><tspan
+         id="tspan1065"
+         sodipodi:role="line"
+         x="128.32291"
+         y="88.772926"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:3.52777767px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /><tspan
+         id="tspan1067"
+         sodipodi:role="line"
+         x="128.32291"
+         y="94.06459"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332" /></text>
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path1081"
+       d="M 124.35416,89.83125 76.99375,94.858333"
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="M 123.82499,66.01875 112.97708,86.391666"
+       id="path1083"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path1091"
+       d="M 33.33749,59.139583 20.90208,76.337499"
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       d="M 113.77082,51.73125 42.068747,83.481249"
+       id="path1093"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       y="94.064583"
+       x="129.64583"
+       height="27.51667"
+       width="78.316658"
+       id="rect899"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+  </g>
+</svg>
diff --git a/docs/image/solve.png b/docs/image/solve.png
new file mode 100644
index 000000000..a1b7081c8
Binary files /dev/null and b/docs/image/solve.png differ
diff --git a/docs/image/solve.svg b/docs/image/solve.svg
new file mode 100644
index 000000000..314be94cb
--- /dev/null
+++ b/docs/image/solve.svg
@@ -0,0 +1,163 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="solve.svg">
+  <defs
+     id="defs2">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker838"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path836" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4529"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#ff0000;stroke-width:1pt;stroke-opacity:1;fill:#ff0000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="313.5"
+     inkscape:cy="696.5"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="fill:#ffff00;fill-opacity:1;stroke-width:0.26458332"
+       id="rect22"
+       width="31.75"
+       height="5.5562501"
+       x="70.114571"
+       y="114.96667"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text16"
+       y="118.67083"
+       x="72.231262"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332"
+         y="118.67083"
+         x="72.231262"
+         id="tspan14"
+         sodipodi:role="line">Prelude.Nat.Z </tspan></text>
+    <text
+       id="text20"
+       y="110.99791"
+       x="82.814583"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;stroke-width:0.26458332"
+         y="110.99791"
+         x="82.814583"
+         id="tspan18"
+         sodipodi:role="line">solve</tspan></text>
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 80.668481,106.30075 -0.0032,7.57492"
+       id="path4518"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="56.620823"
+       y="93.006248"
+       id="text832"><tspan
+         sodipodi:role="line"
+         id="tspan830"
+         x="56.620823"
+         y="93.006248"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;stroke-width:0.26458332">focus</tspan></text>
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path834"
+       d="m 57.649725,94.659084 -0.0032,5.458256"
+       style="fill:none;stroke:#0000ff;stroke-width:0.5291667;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker838)" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
+       x="56.356247"
+       y="104.91254"
+       id="text842"><tspan
+         sodipodi:role="line"
+         id="tspan840"
+         x="56.356247"
+         y="104.91254"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.26458332">?{hole} ≈ Prelude.Nat.Z . {hole}</tspan></text>
+  </g>
+</svg>
diff --git a/docs/image/tokenise.png b/docs/image/tokenise.png
new file mode 100644
index 000000000..0e7782a38
Binary files /dev/null and b/docs/image/tokenise.png differ
diff --git a/docs/image/tokenise.svg b/docs/image/tokenise.svg
new file mode 100644
index 000000000..8da3e2d04
--- /dev/null
+++ b/docs/image/tokenise.svg
@@ -0,0 +1,740 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 210 297"
+   version="1.1"
+   id="svg8"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="tokenise.svg">
+  <defs
+     id="defs2">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker7119"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path7117" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="marker4031"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path4029"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker1931"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend"
+       inkscape:collect="always">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path1929" />
+    </marker>
+    <marker
+       inkscape:stockid="Arrow1Mend"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="Arrow1Mend"
+       style="overflow:visible;"
+       inkscape:isstock="true"
+       inkscape:collect="always">
+      <path
+         id="path1036"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt;stroke-opacity:1;fill:#000000;fill-opacity:1"
+         transform="scale(0.4) rotate(180) translate(10,0)" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="497.48698"
+     inkscape:cy="885.5"
+     inkscape:document-units="mm"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1920"
+     inkscape:window-height="1015"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1" />
+  <metadata
+     id="metadata5">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect815"
+       width="4.3310161"
+       height="4.3471913"
+       x="61.383358"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="62.917812"
+       y="55.649193"
+       id="text819"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan817"
+         x="62.917812"
+         y="55.649193"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">i</tspan></text>
+    <rect
+       y="51.995804"
+       x="65.714371"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect823"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text827"
+       y="55.307304"
+       x="66.760414"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="55.307304"
+         x="66.760414"
+         id="tspan825"
+         sodipodi:role="line">n</tspan></text>
+    <rect
+       y="51.995804"
+       x="70.045387"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect829"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text833"
+       y="55.063095"
+       x="71.237953"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="55.063095"
+         x="71.237953"
+         id="tspan831"
+         sodipodi:role="line">p</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect835"
+       width="4.3310161"
+       height="4.3471913"
+       x="74.376404"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="75.422447"
+       y="55.356148"
+       id="text839"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan837"
+         x="75.422447"
+         y="55.356148"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">u</tspan></text>
+    <rect
+       y="51.995804"
+       x="78.70742"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect841"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text845"
+       y="55.649193"
+       x="80.241875"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="55.649193"
+         x="80.241875"
+         id="tspan843"
+         sodipodi:role="line">t</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect847"
+       width="4.3310161"
+       height="4.3471913"
+       x="83.038437"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="59.172871"
+       y="88.457558"
+       id="text851"><tspan
+         sodipodi:role="line"
+         id="tspan849"
+         x="59.172871"
+         y="92.350197"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none" /></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect853"
+       width="4.3310161"
+       height="4.3471913"
+       x="87.369453"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="88.46434"
+       y="55.453827"
+       id="text857"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan855"
+         x="88.46434"
+         y="55.453827"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">s</tspan></text>
+    <rect
+       y="51.995804"
+       x="91.70047"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect859"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text863"
+       y="55.649193"
+       x="93.234924"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="55.649193"
+         x="93.234924"
+         id="tspan861"
+         sodipodi:role="line">t</tspan></text>
+    <rect
+       y="51.995804"
+       x="96.031487"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect865"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text869"
+       y="55.649193"
+       x="97.565941"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="55.649193"
+         x="97.565941"
+         id="tspan867"
+         sodipodi:role="line">r</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect871"
+       width="4.3310161"
+       height="4.3471913"
+       x="100.3625"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="101.89697"
+       y="55.649193"
+       id="text875"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan873"
+         x="101.89697"
+         y="55.649193"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">i</tspan></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect877"
+       width="4.3310161"
+       height="4.3471913"
+       x="104.69353"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="105.73955"
+       y="55.50267"
+       id="text881"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan879"
+         x="105.73955"
+         y="55.50267"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">n</tspan></text>
+    <rect
+       y="51.995804"
+       x="109.0245"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect883"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text887"
+       y="54.965416"
+       x="110.21709"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="54.965416"
+         x="110.21709"
+         id="tspan885"
+         sodipodi:role="line">g</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="125.67681"
+       y="55.359386"
+       id="text893"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan891"
+         x="125.67681"
+         y="55.359386"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">:String</tspan></text>
+    <rect
+       y="51.995804"
+       x="113.35551"
+       height="4.3471913"
+       width="4.3310161"
+       id="rect895"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text899"
+       y="55.50267"
+       x="114.40154"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="59.395306"
+         x="114.40154"
+         id="tspan897"
+         sodipodi:role="line" /></text>
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#0000ff;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect901"
+       width="4.3310161"
+       height="4.3471913"
+       x="117.68649"
+       y="51.995804"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="118.87907"
+       y="55.494583"
+       id="text905"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan903"
+         x="118.87907"
+         y="55.494583"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">1</tspan></text>
+    <g
+       id="g950"
+       transform="translate(-15.319488,0.319156)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499">
+      <rect
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+         id="rect907"
+         width="11.990757"
+         height="4.3471909"
+         x="47.978806"
+         y="69.310013" />
+      <text
+         xml:space="preserve"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         x="48.706326"
+         y="72.963402"
+         id="text911"><tspan
+           sodipodi:role="line"
+           id="tspan909"
+           x="48.706326"
+           y="72.963402"
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">token</tspan></text>
+      <rect
+         y="69.310013"
+         x="59.969563"
+         height="4.2674026"
+         width="10.075821"
+         id="rect913"
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+      <text
+         id="text917"
+         y="72.940666"
+         x="61.015606"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         xml:space="preserve"><tspan
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+           y="72.940666"
+           x="61.015606"
+           id="tspan915"
+           sodipodi:role="line">line</tspan></text>
+      <rect
+         y="69.389801"
+         x="70.045387"
+         height="4.1876144"
+         width="7.5225825"
+         id="rect919"
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+      <text
+         id="text923"
+         y="72.935829"
+         x="70.998589"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         xml:space="preserve"><tspan
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+           y="72.935829"
+           x="70.998589"
+           id="tspan921"
+           sodipodi:role="line">col</tspan></text>
+    </g>
+    <text
+       id="text927"
+       y="80.971657"
+       x="40.541954"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:4.23333311px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="80.971657"
+         x="40.541954"
+         sodipodi:role="line"
+         id="tspan933">:(List (TokenData Token), Int, Int, String)</tspan></text>
+    <g
+       id="g970"
+       transform="translate(16.596112,0.319156)"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499">
+      <rect
+         y="69.310013"
+         x="47.978806"
+         height="4.3471909"
+         width="11.990757"
+         id="rect952"
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+      <text
+         id="text956"
+         y="72.963402"
+         x="48.706326"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         xml:space="preserve"><tspan
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+           y="72.963402"
+           x="48.706326"
+           id="tspan954"
+           sodipodi:role="line">token</tspan></text>
+      <rect
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+         id="rect958"
+         width="10.075821"
+         height="4.2674026"
+         x="59.969563"
+         y="69.310013" />
+      <text
+         xml:space="preserve"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         x="61.015606"
+         y="72.940666"
+         id="text962"><tspan
+           sodipodi:role="line"
+           id="tspan960"
+           x="61.015606"
+           y="72.940666"
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">line</tspan></text>
+      <rect
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+         id="rect964"
+         width="7.5225825"
+         height="4.1876144"
+         x="70.045387"
+         y="69.389801" />
+      <text
+         xml:space="preserve"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         x="70.998589"
+         y="72.935829"
+         id="text968"><tspan
+           sodipodi:role="line"
+           id="tspan966"
+           x="70.998589"
+           y="72.935829"
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">col</tspan></text>
+    </g>
+    <g
+       transform="translate(48.591501,0.319156)"
+       id="g990"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499">
+      <rect
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+         id="rect972"
+         width="11.990757"
+         height="4.3471909"
+         x="47.978806"
+         y="69.310013" />
+      <text
+         xml:space="preserve"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         x="48.706326"
+         y="72.963402"
+         id="text976"><tspan
+           sodipodi:role="line"
+           id="tspan974"
+           x="48.706326"
+           y="72.963402"
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">token</tspan></text>
+      <rect
+         y="69.310013"
+         x="59.969563"
+         height="4.2674026"
+         width="10.075821"
+         id="rect978"
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+      <text
+         id="text982"
+         y="72.940666"
+         x="61.015606"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         xml:space="preserve"><tspan
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+           y="72.940666"
+           x="61.015606"
+           id="tspan980"
+           sodipodi:role="line">line</tspan></text>
+      <rect
+         y="69.389801"
+         x="70.045387"
+         height="4.1876144"
+         width="7.5225825"
+         id="rect984"
+         style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+      <text
+         id="text988"
+         y="72.935829"
+         x="70.998589"
+         style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         xml:space="preserve"><tspan
+           style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+           y="72.935829"
+           x="70.998589"
+           id="tspan986"
+           sodipodi:role="line">col</tspan></text>
+    </g>
+    <path
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none"
+       d="m 125.97308,68.549658 1.30238,0.0089 -0.0153,6.481345 h -1.30803"
+       id="path992"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cccc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cccc"
+       inkscape:connector-curvature="0"
+       id="path994"
+       d="m 32.561899,68.619523 -1.30238,0.0089 0.0153,6.481345 h 1.30803"
+       style="fill:none;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <rect
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       id="rect996"
+       width="11.990757"
+       height="4.3471909"
+       x="155.60759"
+       y="69.899559"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       x="156.33508"
+       y="73.552948"
+       id="text1000"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan998"
+         x="156.33508"
+         y="73.552948"
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none">string</tspan></text>
+    <rect
+       y="69.750786"
+       x="130.3979"
+       height="4.2674026"
+       width="10.075821"
+       id="rect1002"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text1006"
+       y="73.381439"
+       x="131.44394"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="73.381439"
+         x="131.44394"
+         id="tspan1004"
+         sodipodi:role="line">line</tspan></text>
+    <rect
+       y="69.830574"
+       x="143.64868"
+       height="4.1876144"
+       width="7.5225825"
+       id="rect1008"
+       style="opacity:1;vector-effect:none;fill:none;fill-opacity:0.97596154;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       id="text1012"
+       y="73.376602"
+       x="144.60188"
+       style="font-style:normal;font-weight:normal;font-size:4.23333311px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-size:4.23333311px;stroke-width:0.70555556;stroke-miterlimit:4;stroke-dasharray:none"
+         y="73.376602"
+         x="144.60188"
+         id="tspan1010"
+         sodipodi:role="line">col</tspan></text>
+    <path
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow1Mend)"
+       d="m 58.415342,69.700595 -0.143613,-5.887785 4.912582,-0.06048 0.03784,-6.371998"
+       id="path1025"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cccc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path1927"
+       d="m 89.918872,69.996556 -0.02264,-12.07186"
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker1931)"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       sodipodi:nodetypes="cccc"
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker4031)"
+       d="m 122.08751,69.519138 -0.0832,-5.464386 -2.3456,-0.06048 -0.20406,-6.674425"
+       id="path4027"
+       inkscape:connector-curvature="0"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:connector-curvature="0"
+       id="path7115"
+       d="m 147.18896,69.882051 -0.0832,-5.827299 -22.72919,0 -0.446,-6.251027"
+       style="fill:none;stroke:#000000;stroke-width:0.70555556;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker7119)"
+       sodipodi:nodetypes="cccc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+  </g>
+</svg>
diff --git a/docs/image/tree.png b/docs/image/tree.png
new file mode 100644
index 000000000..edfa6d71e
Binary files /dev/null and b/docs/image/tree.png differ
diff --git a/docs/image/tree.svg b/docs/image/tree.svg
new file mode 100644
index 000000000..a80014f6a
--- /dev/null
+++ b/docs/image/tree.svg
@@ -0,0 +1,212 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="210mm"
+   height="297mm"
+   viewBox="0 0 744.09448819 1052.3622047"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.92.2 5c3e80d, 2017-08-06"
+   sodipodi:docname="tree.svg">
+  <defs
+     id="defs4">
+    <marker
+       inkscape:isstock="true"
+       style="overflow:visible;"
+       id="marker5204"
+       refX="0.0"
+       refY="0.0"
+       orient="auto"
+       inkscape:stockid="Arrow1Mend">
+      <path
+         transform="scale(0.4) rotate(180) translate(10,0)"
+         style="fill-rule:evenodd;stroke:#0000ff;stroke-width:1pt;stroke-opacity:1;fill:#0000ff;fill-opacity:1"
+         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
+         id="path5206" />
+    </marker>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="383.03443"
+     inkscape:cy="690.88799"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1129"
+     inkscape:window-height="730"
+     inkscape:window-x="671"
+     inkscape:window-y="0"
+     inkscape:window-maximized="0" />
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1">
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="348.5"
+       y="334.92474"
+       id="text4136"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4138"
+         x="348.5"
+         y="334.92474"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;fill-opacity:1">{hole2} :Nat-&gt;Nat</tspan></text>
+    <text
+       id="text4152"
+       y="364.17471"
+       x="380.375"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;fill-opacity:1"
+         y="364.17471"
+         x="380.375"
+         id="tspan4154"
+         sodipodi:role="line">intro `{{x}}</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="381.0625"
+       y="470.23721"
+       id="text4156"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan4158"
+         x="381.0625"
+         y="470.23721"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;fill-opacity:1">solve</tspan></text>
+    <text
+       id="text4160"
+       y="414.42471"
+       x="380.5625"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#000000;fill-opacity:1"
+         y="414.42471"
+         x="380.5625"
+         id="tspan4162"
+         sodipodi:role="line">fill (Var `{{x}})</tspan></text>
+    <path
+       style="fill:#0000ff;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5204)"
+       d="m 371.4375,343.4872 0.875,29.125"
+       id="path5202"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <path
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       sodipodi:nodetypes="cc"
+       inkscape:connector-curvature="0"
+       id="path89"
+       d="m 371.4375,395.9872 0.875,29.125"
+       style="fill:#0000ff;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5204)" />
+    <path
+       style="fill:#0000ff;fill-rule:evenodd;stroke:#0000ff;stroke-width:2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5204)"
+       d="m 371.4375,450.3622 0.875,29.125"
+       id="path91"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499" />
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text95"
+       y="332.11224"
+       x="295.0625"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="332.11224"
+         x="295.0625"
+         id="tspan93"
+         sodipodi:role="line">state</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="295.0625"
+       y="386.48724"
+       id="text99"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan97"
+         x="295.0625"
+         y="386.48724"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1">state</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text103"
+       y="444.61224"
+       x="295.0625"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#ff0000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#ff0000;fill-opacity:1"
+         y="444.61224"
+         x="295.0625"
+         id="tspan101"
+         sodipodi:role="line">state</tspan></text>
+    <text
+       inkscape:export-ydpi="61.120499"
+       inkscape:export-xdpi="61.120499"
+       id="text3796"
+       y="389.29974"
+       x="345.6875"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       xml:space="preserve"><tspan
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;fill-opacity:1"
+         y="389.29974"
+         x="345.6875"
+         id="tspan3794"
+         sodipodi:role="line">λ x:Nat . ? {hole 2}</tspan></text>
+    <text
+       xml:space="preserve"
+       style="font-style:normal;font-weight:normal;line-height:0%;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#0000ff;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
+       x="344.75"
+       y="442.73724"
+       id="text3800"
+       inkscape:export-xdpi="61.120499"
+       inkscape:export-ydpi="61.120499"><tspan
+         sodipodi:role="line"
+         id="tspan3798"
+         x="344.75"
+         y="442.73724"
+         style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:15px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif Bold';fill:#0000ff;fill-opacity:1">λ x:Nat . x</tspan></text>
+  </g>
+</svg>
diff --git a/docs/index.rst b/docs/index.rst
index 9bccefc68..52f9d0a28 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -13,7 +13,7 @@ Documentation for the Idris Language
    Idris Community* has waived all copyright and related or neighboring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 
 .. toctree::
@@ -24,5 +24,7 @@ Documentation for the Idris Language
    st/index
    effects/index
    proofs/index
+   elaboratorReflection/index
+   parserLibrary/index
    reference/index
    guides/index
diff --git a/docs/listing/idris-prompt-helloworld.txt b/docs/listing/idris-prompt-helloworld.txt
index 2e3b241f9..43f6ba396 100644
--- a/docs/listing/idris-prompt-helloworld.txt
+++ b/docs/listing/idris-prompt-helloworld.txt
@@ -2,7 +2,7 @@ $ idris hello.idr
      ____    __     _
     /  _/___/ /____(_)____
     / // __  / ___/ / ___/     Version 1.3.2
-  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/
+  _/ // /_/ / /  / (__  )      https://www.idris-lang.org/
  /___/\__,_/_/  /_/____/       Type :? for help
 
 Type checking ./hello.idr
diff --git a/docs/listing/idris-prompt-interp.txt b/docs/listing/idris-prompt-interp.txt
index aa82a8f10..e3760453c 100644
--- a/docs/listing/idris-prompt-interp.txt
+++ b/docs/listing/idris-prompt-interp.txt
@@ -2,7 +2,7 @@ $ idris interp.idr
      ____    __     _
     /  _/___/ /____(_)____
     / // __  / ___/ / ___/     Version 1.3.2
-  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/
+  _/ // /_/ / /  / (__  )      https://www.idris-lang.org/
  /___/\__,_/_/  /_/____/       Type :? for help
 
 Type checking ./interp.idr
diff --git a/docs/listing/idris-prompt-start.txt b/docs/listing/idris-prompt-start.txt
index c40b86eed..43cbf530c 100644
--- a/docs/listing/idris-prompt-start.txt
+++ b/docs/listing/idris-prompt-start.txt
@@ -2,7 +2,7 @@ $ idris
     ____    __     _
    /  _/___/ /____(_)____
    / // __  / ___/ / ___/     Version 1.3.2
- _/ // /_/ / /  / (__  )      http://www.idris-lang.org/
+ _/ // /_/ / /  / (__  )      https://www.idris-lang.org/
 /___/\__,_/_/  /_/____/       Type :? for help
 
 Idris>
diff --git a/docs/make.bat b/docs/make.bat
index 566f3c82d..9c772a944 100644
--- a/docs/make.bat
+++ b/docs/make.bat
@@ -65,7 +65,7 @@ if errorlevel 9009 (
 	echo.may add the Sphinx directory to PATH.
 	echo.
 	echo.If you don't have Sphinx installed, grab it from
-	echo.http://sphinx-doc.org/
+	echo.https://www.sphinx-doc.org/
 	exit /b 1
 )
 
diff --git a/docs/parserLibrary/index.rst b/docs/parserLibrary/index.rst
new file mode 100644
index 000000000..0ee357a4c
--- /dev/null
+++ b/docs/parserLibrary/index.rst
@@ -0,0 +1,24 @@
+.. _parserLibrary:
+
+########################
+Lexer and Parser Library
+########################
+
+A tutorial on the lexer and parser library in Idris.
+
+.. note::
+
+   The documentation for Idris has been published under the Creative
+   Commons CC0 License. As such to the extent possible under law, *The
+   Idris Community* has waived all copyright and related or neighboring
+   rights to Documentation for Idris.
+
+   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+
+.. toctree::
+   :maxdepth: 1
+
+   introduction
+   lexer
+   parser
+   whitespace
diff --git a/docs/parserLibrary/introduction.rst b/docs/parserLibrary/introduction.rst
new file mode 100644
index 000000000..696b1de99
--- /dev/null
+++ b/docs/parserLibrary/introduction.rst
@@ -0,0 +1,76 @@
+.. _parserLibraryIntro:
+
+***************************
+Parser Library Introduction
+***************************
+
+The parser library can be used to build Idris structures from text. It involves a
+certain amount of complexity and so it would typically be used for big projects.
+An example might be a compiler for another language, written in Idris.
+
+Of course the parser library can also be used to compile to Idris, this is what
+is done in Idris 2 and that is what the this library appears to have been
+written for.
+
+So a secondary use for this tutorial would be to help understanding the internal
+workings of Idris 2.
+
+The parser library is used in a similar way to Parsec which is a library for
+writing parsers in Haskell. It is based on higher-order parser combinators, so a 
+complicated parser can be made out of many smaller ones.
+
+.. list-table::
+
+  * - This is a two stage process:
+        - Lexer - This takes the input string and turns it into a list of Tokens.
+        - Parser - This takes the list of tokens and outputs the code.
+
+    - .. image:: ../image/parserTopLevel.png
+         :width: 307px
+         :height: 76px
+         :alt: diagram illustrating these stages of lexer and parser
+
+The advantage of using two stages, like this, is that things like whitespace and
+comments don't need to be considered in every parser rule.
+
+The  Idris parser library differs from Parsec in that you need to say, in the
+Recogniser, whether a rule is guaranteed to consume input. This means that the
+Idris type system prevents the construction of recognisers/rules that can't
+consume the input.
+
+The Lexer is similar but works at the level of characters rather than tokens, and
+you need to provide a TokenMap which defines how to build a token from
+a string when a rule is matched.
+
+The following pages contain a tutorial for the :ref:`parserLibraryLexer` and a
+tutorial for the :ref:`parserLibraryParser`. These tutorials have a running
+example of a parser for integer expressions. This is a very simple example, there
+may be easier ways to do something so simple, but it illustrates some of the
+principles.
+
+Parser Library and Idris 2
+--------------------------
+
+The parser library, in Idris 1, is almost the same as the code that the Idris 2
+parser is built on. Even if you only want to use the Idris 1 parser library it
+is useful to look at the code in the Idris 2 compilers to see how the library
+can be used.
+
+Idris 2 has at least 3 compilers:
+
+- IDEMode - complies to SExp which is a Lisp-like structure used to communicate
+  with external editors like Emacs and Vim.
+- Idris.Parser - This is the main compiler which compiles from a file to
+  PTerm (and eventually TT structure).
+- REPL - compiles input from the command line.
+
+The following diagram is my first attempt to work out how some of the modules in
+Idris 2 fit together (with a few of the dependencies between them shown). The
+Idris 1 library is based on the modules at the bottom of the diagram (shown
+in red).
+
+.. image:: ../image/parserModules.png
+   :width: 460px
+   :height: 496px
+   :alt: diagram illustrating these stages of lexer and parser
+
diff --git a/docs/parserLibrary/lexer.rst b/docs/parserLibrary/lexer.rst
new file mode 100644
index 000000000..f80942c3b
--- /dev/null
+++ b/docs/parserLibrary/lexer.rst
@@ -0,0 +1,288 @@
+.. _parserLibraryLexer:
+
+Lexer
+=====
+
+The lexer is run by calling the 'lex' function in the Text.Lexer.Core
+module:
+
+.. code-block:: idris
+
+ lex : TokenMap a -> String -> (List (TokenData a), (Int, Int, String))
+
+.. list-table::
+
+  * - This function takes a String and returns a list of tokens. With the
+      tokens we have indexes back to the original string which can be used
+      in error messages:
+
+    - .. image:: ../image/tokenise.png
+         :width: 330px
+         :height: 73px
+         :alt: diagram illustrating these stages of lexer
+
+TokenMap
+--------
+
+In order to construct this list of tokens we need:
+
+- A way to recognise the tokens in the input string.
+- A way to construct these individual tokens.
+
+This is given by the TokenMap which is a list of pairs containing
+this information:
+
+.. code-block:: idris
+
+  (Lexer, String -> tokenType)
+
+So for each Lexer in the list, if a substring in the input matches, run
+the associated function to produce a token of type ``tokenType``
+
+.. list-table::
+
+  * - from Text.Lexer.Core
+      : https://github.com/idris-lang/Idris-dev/blob/master/libs/contrib/Text/Lexer/Core.idr
+
+    - .. code-block:: idris
+
+        TokenMap : (tokenType : Type) -> Type
+        TokenMap tokenType = List (Lexer, String -> tokenType)
+
+  * - We can create a tokenMap by using a function like this:
+
+    - .. code-block:: idris
+
+        myTokenMap : TokenMap Token
+        myTokenMap = [(is 'a',CharLit)]
+
+Once we have a TokenMap we can use it to lex many strings.
+
+Recognisers
+-----------
+
+The first part of each entry in the TokenMap is the recogniser.
+
+A simple recogniser is 'Pred' which uses a predicate (Char -> Bool) to
+test whether to accept the character. It can be constructed using the
+'is' function:
+
+.. code-block:: idris
+
+  *parserEx> is 'a'
+  Pred (\ARG =>
+           intToBool (prim__eqChar ARG 'a'))
+                              : Recognise True
+
+More complicated structures can be recognised as tokens, this is done using
+the combinator structure of recognisers. This allows recognisers to be
+combined, for example,
+
+.. list-table::
+
+  * - ``<+>`` means sequence two recognisers. If either consumes a character,
+      the sequence is guaranteed to consume a character.
+
+    -  .. code-block:: idris
+
+         *parserEx> is 'a' <+> is 'b'
+         SeqEat (Pred (\ARG => intToBool (prim__eqChar ARG 'a')))
+               (Delay (is 'b')) : Recognise True
+
+  * - ``<|>`` means if both consume, the combination is guaranteed
+      to consumer a character:
+
+    - .. code-block:: idris
+
+        *parserEx> is 'a' <|> is 'b'
+        Alt (Pred (\ARG => intToBool (prim__eqChar ARG 'a')))
+            (Pred (\ARG => intToBool (prim__eqChar ARG 'b')))
+                : Recognise True
+
+This diagram shows the recogniser combinator with some of its constructors:
+
+.. image:: ../image/recogniser.png
+   :width: 487px
+   :height: 249px
+   :alt: recogniser data structure
+
+A recogniser consumes its input, that is it advances the index to its input
+string, as it generates the token list. In some cases we don't want this to
+happen, for instance, we may need to lookahead before consuming the input
+string.
+
+If a recogniser does not consume input there is a danger of an infinite loop.
+To prevent this the recogniser is dependent on a boolean called 'consumes' which
+is true if the recogniser is guaranteed to consume at least one character.
+
+The constructors of Recognise allow us to ensure that, even though parts of
+the recogniser may not consume, overall the recogniser will consume.
+
+Since 'Recognise True' is more common than 'Recognise False' it is convenient to
+use 'Lexer' as a type synonym for 'Recognise True'.
+
+Whitespace and Comments
+-----------------------
+
+An important reason to have a lexer is to simplify the parser when whitespace
+or comments are required. Without this the parser would require a match for
+every combination, with and without, whitespace and comments.
+
+In some languages the lexer needs to remove whitespace and comments so that
+they don't appear in the token list. In some cases whitespace is significant
+but a single whitespace token can stand for any number of spaces, tabs,
+carriage returns and so on.
+
+In some cases, such as when parsing the Idris language itself, whitespace
+is important to indicate blocks. In this case we might want to output a
+start-of-block token when the indent increases and an end-of-block token
+when the indent decreases.
+
+This topic will be discussed more fully on this page 
+:ref:`parserLibraryWhitespace`.
+
+Simple Expression Example for Lexer
+-----------------------------------
+
+On this page we will implement a lexer to 'lex' a very simple expression as
+a running example, on the next page, we will go on to implement a parser for it.
+
+First import the lexer and parser code:
+
+.. code-block:: idris
+
+  module ParserExample
+
+  import Text.Lexer
+  import public Text.Parser.Core
+  import public Text.Parser
+
+Then decide on the tokens that are needed. For this example the idea is to be
+able to parse simple arithmetic expressions, like this:
+
+.. code-block:: idris
+
+  1+(2*3)
+
+so we need:
+
+- Numbers (for now integer literals are good enough).
+- Some operators (for now ``+``, ``-`` and ``*`` will do.
+- Opening and closing Parentheses.
+
+We can define these, as tokens, like this:
+
+.. code-block:: idris
+
+  %default total
+
+  public export
+  data ExpressionToken = Number Integer
+           | Operator String
+           | OParen
+           | CParen
+           | EndInput
+
+It may help with debugging and to implement error messages to
+implement ``show`` for these tokens:
+
+.. code-block:: idris
+
+  export
+  Show ExpressionToken where
+    show (Number x) = "number " ++ show x
+    show (Operator x) = "operator " ++ x
+    show OParen = "("
+    show CParen = ")"
+    show EndInput = "end of input"
+
+  export
+  Show (TokenData ExpressionToken) where
+    show (MkToken l c t) = "line=" ++ show l ++ " col=" ++ show c ++ "tok=" ++ show t
+
+The following defines the 'TokenMap' for this example:
+
+.. code-block:: idris
+
+  ||| integer arithmetic operators plus, minus and multiply.
+  export
+  opChars : String
+  opChars = "+-*"
+
+  operator : Lexer
+  operator = some (oneOf opChars)
+
+  toInt' : String -> Integer
+  toInt' = cast
+
+  expressionTokens : TokenMap ExpressionToken
+  expressionTokens =
+     [(digits, \x => Number (toInt' x)),
+     (operator, \x => Operator x),
+     (is '(' ,\x => OParen),
+     (is ')' ,\x => CParen)]
+
+This specifies the lexer. It gives, for each token, a function to recognise
+the token type and a function to construct the token.
+
+The library module 'Text.Lexer' contains useful functions to help with this.
+For example, the digits function used above, which reads one or more
+numeric characters.
+
+We can now run the code with various strings to see what output the lexer
+produces. This is done by calling the 'lex' function with the TokenMap and
+input string as parameters:
+
+.. code-block:: idris
+
+  cd Idris-dev/libs/contrib
+  idris -p contrib parserEx.idr
+       ____    __     _
+      /  _/___/ /____(_)____
+      / // __  / ___/ / ___/     Version 1.3.2
+    _/ // /_/ / /  / (__  )      http://www.idris-lang.org/
+   /___/\__,_/_/  /_/____/       Type :? for help
+
+  Idris is free software with ABSOLUTELY NO WARRANTY.
+  For details type :warranty.
+  Type checking ./Text/Token.idr
+  Type checking ./Text/Quantity.idr
+  Type checking ./Control/Delayed.idr
+  Type checking ./Data/Bool/Extra.idr
+  Type checking ./Text/Lexer/Core.idr
+  Type checking ./Text/Lexer.idr
+  Type checking ./parserEx.idr
+
+  *parserEx> lex expressionTokens "1+2"
+  ([MkToken 0 0 (Number 1),
+    MkToken 0
+          (case fspan (\ARG => not (intToBool (prim__eqChar ARG '\n'))) "1" of
+             (incol, "") => c + cast (length incol)
+             (incol, b) => cast (length incol))
+          (Operator "+"),
+    MkToken 0
+          (case fspan (\ARG => not (intToBool (prim__eqChar ARG '\n'))) "+" of
+             (incol, "") => c + cast (length incol)
+             (incol, b) => cast (length incol))
+          (Number 2)],
+   0,
+   case fspan (\ARG => not (intToBool (prim__eqChar ARG '\n'))) "2" of
+     (incol, "") => c + cast (length incol)
+     (incol, b) => cast (length incol),
+   getString (MkStrLen "" 0)) : (List (TokenData ExpressionToken),
+                               Int,
+                               Int,
+                               String)
+
+The lexer uses potentially infinite data structures. It has recursive
+arguments (codata type) so code is lazy. In the output above the indexes
+have not been computed but we can pick out the tokens:
+
+- (Number 1)
+- (Operator "+")
+- (Number 2)
+
+So the code is working.
+
+We can now go ahead and parse this token list. A parser for this example will
+be constructed on the next page.
diff --git a/docs/parserLibrary/parser.rst b/docs/parserLibrary/parser.rst
new file mode 100644
index 000000000..0731702fc
--- /dev/null
+++ b/docs/parserLibrary/parser.rst
@@ -0,0 +1,700 @@
+.. _parserLibraryParser:
+
+Parser
+======
+
+To run the parser we call ``parse``. This requires a grammar and the output
+from the lexer (which is a list of tokens).
+
+.. code-block:: idris
+
+  parse : (act : Grammar tok c ty) -> (xs : List tok) ->
+        Either (ParseError tok) (ty, List tok)
+
+If successful this returns 'Right' with a pair of
+
+- the parse result.
+- the unparsed tokens (the remaining input).
+
+otherwise it returns 'Left' with the error message.
+
+So we need to define the grammar for our parser, this is done using the following
+'Grammar' data structure. This is a combinator structure, similar in principle
+to the recogniser combinator for the lexer, which was discussed on the
+previous page.
+
+As with the Recogniser the ``Grammar`` type is dependent on a boolean 'consumes'
+value which allows us to ensure that complicated ``Grammar`` structures will always
+consume input.
+
+.. code-block:: idris
+
+  ||| Description of a language's grammar. The `tok` parameter is the type
+  ||| of tokens, and the `consumes` flag is True if the language is guaranteed
+  ||| to be non-empty - that is, successfully parsing the language is guaranteed
+  ||| to consume some input.
+  public export
+  data Grammar : (tok : Type) -> (consumes : Bool) -> Type -> Type where
+     Empty : (val : ty) -> Grammar tok False ty
+     Terminal : String -> (tok -> Maybe a) -> Grammar tok True a
+     NextIs : String -> (tok -> Bool) -> Grammar tok False tok
+     EOF : Grammar tok False ()
+
+     Fail : Bool -> String -> Grammar tok c ty
+     Commit : Grammar tok False ()
+     MustWork : Grammar tok c a -> Grammar tok c a
+
+     SeqEat : Grammar tok True a -> Inf (a -> Grammar tok c2 b) ->
+              Grammar tok True b
+     SeqEmpty : {c1, c2 : Bool} ->
+                Grammar tok c1 a -> (a -> Grammar tok c2 b) ->
+                Grammar tok (c1 || c2) b
+     Alt : {c1, c2 : Bool} ->
+           Grammar tok c1 ty -> Grammar tok c2 ty ->
+           Grammar tok (c1 && c2) ty
+
+So an example of a grammer type may look something like this:
+``Grammar (TokenData ExpressionToken) True Integer``.
+This is a complicated type name and a given parser will need to use it a lot.
+So to reduce the amount of typing we can use the following type synonym (similar
+to what is done in Idris 2
+: https://github.com/edwinb/Idris2/blob/master/src/Parser/Support.idr
+)
+
+.. code-block:: idris
+
+  public export
+  Rule : Type -> Type
+  Rule ty = Grammar (TokenData ExpressionToken) True ty
+
+Parser Example
+--------------
+
+On the previous page we implemented a lexer to 'lex' a very simple expression, on
+this page we will go on to add a parser for this running example.
+
+.. list-table::
+
+  * - The syntax we are aiming at is something
+      like this (expressed in Backus–Naur form (BNF)):
+    - .. code-block:: idris
+
+         <expr> ::= <integer literal>
+          |  <expr>'+'<expr>
+          |  <expr>'-'<expr>
+          |  <expr>'*'<expr>
+          |  '('<expr>')'
+
+         <integer literal> ::= <digit>|<integer literal><digit>
+
+.. list-table::
+
+  * - To start, here is a grammar to parse an integer literal (that is, a
+      sequence of numeric characters).
+
+    - .. code-block:: idris
+
+         export
+         intLiteral : Rule Integer
+         intLiteral
+           = terminal (\x => case tok x of
+                           Number i => Just i
+                           _ => Nothing)
+
+In order to try this out, here is a temporary function, this calls
+parse which takes two parameters:
+
+- The grammar (in this case intLiteral)
+- The token list from the lexer.
+
+.. code-block:: idris
+
+  test1 : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  test1 s = parse intLiteral (fst (lex expressionTokens s))
+
+As required, if we pass it a string which is a number literal then it will
+return the number in the 'Right' option.
+
+.. code-block:: idris
+
+  *parserEx> test1 "123"
+  Right (123, []) : Either (ParseError (TokenData ExpressionToken))
+                         (Integer, List (TokenData ExpressionToken))
+
+If we pass it a string which is not a number literal then it will return an
+error message.
+
+.. code-block:: idris
+
+  *parserEx> test1 "a"
+  Left (Error "End of input"
+            []) : Either (ParseError (TokenData ExpressionToken))
+                         (Integer, List (TokenData ExpressionToken))
+
+If we pass it a number followed by something else, then it will still be
+successful, this is because we are not specifically checking for end-of-file.
+
+.. code-block:: idris
+
+  *parserEx> test1 "123a"
+  Right (123, []) : Either (ParseError (TokenData ExpressionToken))
+                         (Integer, List (TokenData ExpressionToken))
+  *parserEx> 
+
+.. list-table::
+
+  * - The ``intLiteral`` function above uses the ``terminal`` function to
+      construct the grammar
+    - .. code-block:: idris
+
+        ||| Succeeds if running the predicate on the
+        ||| next token returns Just x, returning x.
+        ||| Otherwise fails.
+        export
+        terminal : (tok -> Maybe a) -> Grammar tok True a
+        terminal = Terminal
+
+This is defined here
+: https://github.com/idris-lang/Idris-dev/blob/master/libs/contrib/Text/Parser/Core.idr
+Idris 2 uses a slightly different version which stores an error message like
+"Expected integer literal" which can be output if the rule fails
+: https://github.com/edwinb/Idris2/blob/master/src/Text/Parser/Core.idr
+
+.. list-table::
+
+  * - The 'terminal' function is also used to construct the other
+      elements of the grammar that we require, for instance,
+      opening parenthesis:
+
+    - .. code-block:: idris
+
+         openParen : Rule Integer
+         openParen = terminal (\x => case tok x of
+                           OParen => Just 0
+                           _ => Nothing)
+
+Integer value is not really relevant for parenthesis so ``0`` (zero) is used as
+a default value.
+
+As before, this can be tested with a function like this:
+
+.. code-block:: idris
+
+  test2 : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  test2 s = parse openParen (fst (lex expressionTokens s))
+
+We can see below that it correctly parses an open parenthesis and gives an
+error for anything else:
+
+.. code-block:: idris
+
+  *parserEx> test2 "("
+  Right (0, []) : Either (ParseError (TokenData ExpressionToken))
+                       (Integer, List (TokenData ExpressionToken))
+  *parserEx> test2 "123"
+  Left (Error "Unrecognised token"
+            [MkToken 0
+                     0
+                     (Number 123)]) : Either (ParseError (TokenData ExpressionToken))
+                                             (Integer,
+                                              List (TokenData ExpressionToken))
+
+Now we have two Grammars we can try combining them. The following test looks
+for ``openParen`` followed by ``intLiteral``, the two Grammars are combined using
+``<*>``. The ``map const`` part uses the integer value from the first.
+
+The following test is looking for ``(`` followed by a number:
+
+.. code-block:: idris
+
+  test3 : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  test3 s = parse (map const openParen <*> intLiteral) (fst (lex expressionTokens s))
+
+We can see below that ``(`` followed by a number is successfully parsed but, as
+required, other token lists are not:
+
+.. code-block:: idris
+
+  *parserEx> test3 "(123"
+  Right (0, []) : Either (ParseError (TokenData ExpressionToken))
+                       (Integer, List (TokenData ExpressionToken))
+  *parserEx> test3 "(("
+  Left (Error "Unrecognised token"
+            [MkToken 0
+                     (case fspan (\ARG => not (intToBool (prim__eqChar ARG '\n')))
+                                 "(" of
+                        (incol, "") => c + cast (length incol)
+                        (incol, b) => cast (length incol))
+                     OParen]) : Either (ParseError (TokenData ExpressionToken))
+                                       (Integer, List (TokenData ExpressionToken))
+
+  *parserEx> test3 "123"
+  Left (Error "Unrecognised token"
+            [MkToken 0
+                     0
+                     (Number 123)]) : Either (ParseError (TokenData ExpressionToken))
+                                             (Integer,
+                                              List (TokenData ExpressionToken))
+  *parserEx> test3 "123("
+  Left (Error "Unrecognised token"
+            [MkToken 0 0 (Number 123),
+             MkToken 0
+                     (case fspan (\ARG => not (intToBool (prim__eqChar ARG '\n')))
+                                 "321" of
+                        (incol, "") => c + cast (length incol)
+                        (incol, b) => cast (length incol))
+                     OParen]) : Either (ParseError (TokenData ExpressionToken))
+                                       (Integer, List (TokenData ExpressionToken))
+
+.. list-table::
+
+  * - The closing parenthesis is constructed in the same way.
+
+    - .. code-block:: idris
+
+        closeParen : Rule Integer
+        closeParen = terminal (\x => case tok x of
+                           CParen => Just 0
+                           _ => Nothing)
+
+.. list-table::
+
+  * - Now we can generate a Grammar for an expression inside parenthesis
+      like this.
+
+    - .. code-block:: idris
+
+        paren : Rule Integer -> Rule Integer
+        paren exp = openParen *> exp <* closeParen
+
+The use of ``*>`` and ``<*`` instead of ``<*>`` is an easy way to use the integer
+value from the inner expression.
+
+So lets try to use this to define a grammar which recognises either:
+
+- An integer literal
+- An integer literal inside parenthesis
+- An integer literal inside parenthesis inside parenthesis
+- ... and so on.
+
+.. list-table::
+
+  * - This requires a recursively defined structure like this:
+
+    - .. code-block:: idris
+
+        partial
+        expr : Rule Integer
+        expr = intLiteral <|> (paren expr)
+
+This is a valid grammar because every time it is called it is guaranteed to
+consume a token. However, as an Idris structure, it is problematic due to
+the recursion. Defining it as partial allows it to compile but at runtime
+we are likely to get a crash with an (unhelpful) error message like
+``killed by signal 11``.
+
+So a better method is to use ``do`` notation as described in the following
+section.
+
+Monadic Combinator
+------------------
+
+In addition to ``<|>`` and ``<*>`` there is a ``>>=`` combinator, which is
+defined like this:
+
+.. code-block:: idris
+
+  ||| Sequence two grammars. If either consumes some input, the sequence is
+  ||| guaranteed to consume some input. If the first one consumes input, the
+  ||| second is allowed to be recursive (because it means some input has been
+  ||| consumed and therefore the input is smaller)
+  export %inline
+  (>>=) : {c1 : Bool} ->
+        Grammar tok c1 a ->
+        inf c1 (a -> Grammar tok c2 b) ->
+        Grammar tok (c1 || c2) b
+  (>>=) {c1 = False} = SeqEmpty
+  (>>=) {c1 = True} = SeqEat
+
+.. list-table::
+
+  * - This allows us to use ``do`` notation for the previous parenthesis example:
+
+    - .. code-block:: idris
+
+         expr = intLiteral <|> do
+                openParen
+                r <- expr
+                closeParen
+                pure r
+
+This can be more flexible than using the ``<*>`` operator. Also it is defined
+using ``Inf`` so we can implement recursively defined grammars as above.
+
+Implementing the Arithmetic Operators
+-------------------------------------
+
+.. list-table::
+
+  * - Now for the operations, in this case: ``+``, ``-`` and ``*``.
+      The syntax we require for these infix operators
+      would require recursive grammars like this:
+
+    - .. code-block:: idris
+
+        expr = expr (op "+") expr
+
+As already explained, ``do`` notation can allow us to use recursive
+definitions but not necessarily left-recursion like this.
+
+In order to work up to this gradually lets start with prefix operators
+(sometimes known as Polish notation) then modify later for infix operators.
+
+.. list-table::
+
+  * - So prefix operators would have this sort of form:
+
+    - .. code-block:: idris
+
+        expr = (add (op "+") expr expr)
+
+where ``op`` is defined like this:
+
+.. code-block:: idris
+
+  ||| Matches if this is an operator token and string matches, that is,
+  ||| it is the required type of operator.
+  op : String -> Rule Integer
+  op s = terminal (\x => case tok x of
+                           (Operator s1) => if s==s1 then Just 0 else Nothing
+                           _ => Nothing)
+
+.. list-table::
+
+  * - and ``add`` is defined like this:
+
+      Where:
+
+      - x is the add operator.
+      - y is the first operand.
+      - z is the second operand.
+
+    - .. code-block:: idris
+
+        addInt : Integer -> Integer -> Integer
+        addInt a b = a+b
+
+        export
+        add : Grammar tok c1 Integer ->
+            Grammar tok c2 Integer ->
+            Grammar tok c3 Integer ->
+            Grammar tok ((c1 || c2) || c3) Integer
+        add x y z = map addInt (x *> y) <*> z
+
+
+
+The resulting integer will be the sum of the two operands.
+
+.. list-table::
+
+  * - The other operators are defined in a similar way:
+
+    - .. code-block:: idris
+
+        subInt : Integer -> Integer -> Integer
+        subInt a b = a-b
+
+        export
+        sub : Grammar tok c1 Integer ->
+            Grammar tok c2 Integer ->
+            Grammar tok c3 Integer ->
+            Grammar tok ((c1 || c2) || c3) Integer
+        sub x y z = map subInt (x *> y) <*> z
+
+        multInt : Integer -> Integer -> Integer
+        multInt a b = a*b
+
+        export
+        mult : Grammar tok c1 Integer ->
+            Grammar tok c2 Integer ->
+            Grammar tok c3 Integer ->
+            Grammar tok ((c1 || c2) || c3) Integer
+        mult x y z = map multInt (x *> y) <*> z
+
+So the top level ``Grammar`` can now be defined as follows. Note that this is
+partial as it is a potentially infinite structure and so not total.
+
+.. code-block:: idris
+
+  partial
+  expr : Rule Integer
+  expr = (add (op "+") expr expr)
+       <|> (sub (op "-") expr expr)
+       <|> (mult (op "*") expr expr)
+       <|> intLiteral <|> (paren expr)
+
+.. list-table::
+
+  * - To make the testing easier we can use this function:
+
+    - .. code-block:: idris
+
+        partial
+        test : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+        test s = parse expr (fst (lex expressionTokens s))
+
+.. list-table::
+
+  * - First test a valid (prefix) expression:
+
+    - .. code-block:: idris
+
+        *parserEx> test "+1*6(4)"
+        Right (25,
+             []) : Either (ParseError (TokenData ExpressionToken))
+                    (Integer, List (TokenData ExpressionToken))
+
+Then an invalid syntax:
+
+.. code-block:: idris
+
+  *parserEx> test "))"
+  Left (Error "Unrecognised token"
+            [MkToken 0 0 CParen,
+             MkToken 0
+                     (case fspan (\ARG =>
+                                    not (intToBool (prim__eqChar ARG
+                                                                 '\n')))
+                                 ")" of
+                        (incol, "") => c + cast (length incol)
+                        (incol, b) => cast (length incol))
+                     CParen]) : Either (ParseError (TokenData ExpressionToken))
+                                       (Integer,
+                                        List (TokenData ExpressionToken))
+
+However if we try something that is invalid, but starts with a valid token,
+then it will return ``Right`` (to indicate success)
+
+.. code-block:: idris
+
+  *parserEx> test "1))"
+  Right (1,
+       [MkToken 0
+                (case fspan (\ARG =>
+                               not (intToBool (prim__eqChar ARG '\n')))
+                            "1" of
+                   (incol, "") => c + cast (length incol)
+                   (incol, b) => cast (length incol))
+                CParen,
+        MkToken 0
+                (case fspan (\ARG =>
+                               not (intToBool (prim__eqChar ARG '\n')))
+                            ")" of
+                   (incol, "") => c + cast (length incol)
+                   (incol, b) => cast (length incol))
+                CParen]) : Either (ParseError (TokenData ExpressionToken))
+                                  (Integer,
+                                   List (TokenData ExpressionToken))
+
+Infix Notation
+--------------
+
+So far we have implemented a prefix notation for operators (like this:
+``+ expr expr``) but the aim is to implemented an infix notation (like this:
+``expr + expr``). To do this we must be able to deal with potentially
+infinite data structures (see Codata Types here :ref:`sect-typefuns`).
+
+First alter the grammar to have infix operations:
+
+.. code-block:: idris
+
+  addInt : Integer -> Integer -> Integer
+  addInt a b = a+b
+
+  export
+  add : Grammar tok c1 Integer ->
+      Grammar tok c2 Integer ->
+      Grammar tok c3 Integer ->
+      Grammar tok ((c1 || c2) || c3) Integer
+  add x y z = map addInt (x <* y) <*> z
+
+  subInt : Integer -> Integer -> Integer
+  subInt a b = a-b
+
+  export
+  sub : Grammar tok c1 Integer ->
+      Grammar tok c2 Integer ->
+      Grammar tok c3 Integer ->
+      Grammar tok ((c1 || c2) || c3) Integer
+  sub x y z = map subInt (x <* y) <*> z
+
+
+  multInt : Integer -> Integer -> Integer
+  multInt a b = a*b
+
+  export
+  mult : Grammar tok c1 Integer ->
+      Grammar tok c2 Integer ->
+      Grammar tok c3 Integer ->
+      Grammar tok ((c1 || c2) || c3) Integer
+  mult x y z = map multInt (x <* y) <*> z
+
+  partial
+  expr : Rule Integer
+  expr = (add expr (op "+") expr)
+       <|> (sub expr (op "-") expr)
+       <|> (mult expr (op "*") expr)
+       <|> intLiteral <|> (paren expr)
+
+However, if this was run, the code would not terminate.
+
+Implement Left Recursion Elimination
+------------------------------------
+
+Left factoring, like this, is a general problem.
+
+If we have a rule like this:
+
+.. code-block:: idris
+
+  A -> (x<*>y) <|> (x<*>z)
+
+If ``x<*>y`` fails but ``x<*>z`` would succeed a problem is that, ``x<*>y`` has
+already consumed ``x``, so now ``x<*>z`` will fail.
+
+so we could write code to backtrack. That is ``try`` ``x<*>y`` without consuming
+so that, if the first token succeeds but the following tokens fail, then the
+first tokens would not be consumed.
+
+Another approach is left factoring:
+
+Left Factoring
+--------------
+
+Replace the rule with two rules (that is we add a non-terminal symbol) so
+for example, instead of:
+
+.. code-block:: idris
+
+  A -> (x<*>y) <|> (x<*>z)
+
+we add an extra rule to give:
+
+.. code-block:: idris
+
+  A -> x<*>N
+  N -> y <|> z
+
+That is we convert a general context-free grammar to a LL(1) grammar. Although
+not every context-free grammar can be converted to a LL(1) grammar.
+
+This still does not solve the infinite recursion issue and there is another
+problem: the precedence of the operators ``+``, ``-`` and ``*`` is not explicit.
+
+.. list-table::
+
+  * - To resolve this we can alter the example to have a BNF like this:
+      Where braces ``{ ... }`` mean the contents can occur 1 or more times.
+
+    - .. code-block:: idris
+
+        'expression' ::=  ('+'|'-') 'term' {('+'|'-') 'term'}
+
+        'term' ::=  'factor' {'*' 'factor'}
+
+        'factor' ::=
+           number
+           | '(' 'expression' ')'
+
+
+.. code-block:: idris
+
+  expr : Rule Integer
+
+  factor : Rule Integer
+  factor = intLiteral <|> do
+                openParen
+                r <- expr
+                closeParen
+                pure r
+
+  term : Rule Integer
+  term = map multInt factor <*> (
+          (op "*")
+          *> factor)
+       <|> factor
+
+  expr = map addInt term <*> (
+          (op "+")
+          *> term)
+       <|> map subInt term <*> (
+          (op "-")
+          *> term)
+       <|> term
+
+  calc : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  calc s = parse expr (fst (lex expressionTokens s))
+
+  lft : (ParseError (TokenData ExpressionToken)) -> IO ()
+  lft (Error s lst) = putStrLn ("error:"++s)
+
+  rht : (Integer, List (TokenData ExpressionToken)) -> IO ()
+  rht i = putStrLn ("right " ++ (show i))
+
+  main : IO ()
+  main = do
+    putStr "alg>"
+    x <- getLine
+    either lft rht (calc x) -- eliminator for Either
+
+As the following tests show, this now handles infix operators and precedence.
+
+.. list-table::
+
+  * - For example '*' is an infix operator:
+
+    - .. code-block:: idris
+
+         *algebraREPL> :exec
+         alg>2*3
+         right (6, [])
+
+  * - Check that atomic number literals work:
+
+    - .. code-block:: idris
+
+         *algebraREPL> :exec
+         alg>2
+         right (2, [])
+
+  * - Check that '*' has a higher precedence than '+'.
+
+    - .. code-block:: idris
+
+         *algebraREPL> :exec
+         alg>2+3*4
+         right (14, [])
+
+  * - Also '*' has a higher precedence than '+' when the order is reversed.
+
+    - .. code-block:: idris
+
+         *algebraREPL> :exec
+         alg>3*4+2
+         right (14, [])
+
+  * - Also precedence can be overridden by parenthesis.
+
+    - .. code-block:: idris
+
+         *algebraREPL> :exec
+         alg>(2+3)*4
+         right (20, [])
+
+This is still not correct because it does not correctly parse multiple sums or terms
+like ``1+2+3`` or ``1*2*3``.
diff --git a/docs/parserLibrary/whitespace.rst b/docs/parserLibrary/whitespace.rst
new file mode 100644
index 000000000..9a71fbe74
--- /dev/null
+++ b/docs/parserLibrary/whitespace.rst
@@ -0,0 +1,250 @@
+.. _parserLibraryWhitespace:
+
+Whitespace and Comments
+=======================
+
+The previous two pages introduced the lexer and parser but have not yet
+discussed how to handle whitespace and comments.
+
+In some grammars whitespace and comments would not be considered significant and
+so we might be tempted not to generate any tokens for them. However, in the
+running example, we may want to make spaces significant in the future. For
+example, we might want to implement function application expressed by
+juxtaposition as in Haskell and Idris like this: ``f x``.
+
+So, on this page, we will add a token for whitespace and comments. We will
+then consider two ways to process this:
+
+- Filter all whitespace tokens from the lexer results before passing to
+  the parser.
+- Process the whitespace tokens in the parser.
+
+Whitespace and Comments in Lexer
+--------------------------------
+
+To start with we can use the same token for both whitespace and comments. Here
+it is called ``Comment`` and added to the ``ExpressionToken`` data structure
+like this:
+
+.. code-block:: idris
+
+  public export
+  data ExpressionToken = Number Integer
+           | Operator String
+           | OParen
+           | CParen
+           | Comment String
+           | EndInput
+
+This is added to the ``TokenMap`` like this:
+
+.. code-block:: idris
+
+  ||| from https://github.com/edwinb/Idris2/blob/master/src/Parser/Lexer.idr
+  comment : Lexer
+  comment = is '-' <+> is '-' <+> many (isNot '\n')
+
+  expressionTokens : TokenMap ExpressionToken
+  expressionTokens =
+    [(digits, \x => Number (toInt' x)),
+     (operator, \x => Operator x),
+     (is '(' ,\x => OParen),
+     (is ')' ,\x => CParen),
+     (spaces, Comment),
+     (comment, Comment)]
+
+As you can see, the comment is defined like a single line Idris comment,
+it starts with ``--`` and continues for the remainder of the line.
+
+We don't need to define ``spaces`` because it is already defined in
+: https://github.com/idris-lang/Idris-dev/blob/master/libs/contrib/Text/Lexer.idr
+like this:
+
+.. code-block:: idris
+
+  ||| Recognise a single whitespace character
+  ||| /\\s/
+  space : Lexer
+  space = pred isSpace
+
+  ||| Recognise one or more whitespace characters
+  ||| /\\s+/
+  spaces : Lexer
+  spaces = some space
+
+If these whitespace tokens are not significant, that is, they can appear
+anywhere and they are optional then we can filter them out before the parser
+gets them like this:
+
+.. code-block:: idris
+
+  processWhitespace : (List (TokenData ExpressionToken), Int, Int, String)
+                  -> (List (TokenData ExpressionToken), Int, Int, String)
+  processWhitespace (x,l,c,s) = ((filter notComment x),l,c,s) where
+      notComment : TokenData ExpressionToken -> Bool
+      notComment t = case tok t of
+                          Comment _ => False
+                          _ => True
+
+  calc : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  calc s = parse expr (fst (processWhitespace (lex expressionTokens s)))
+
+
+Whitespace and Comments in Parser
+---------------------------------
+
+If we sometimes require whitespace to be significant then we can't filter
+them out as above. In this case the ``Comment`` tokens are sent to the parser
+which now needs to be able to handle them.
+
+.. code-block:: idris
+
+  commentSpace : Rule Integer
+  commentSpace = terminal (\x => case tok x of
+                           Comment s => Just 0
+                           _ => Nothing)
+
+So far we don't have any syntax that requires spaces to be significant so we
+need to define the grammar so that it will parse with, or without, spaces.
+This needs to be done in a systematic way, here I have defined the grammar so
+that there is an optional space to the right of every atom or operator.
+First add versions of ``intLiteral`` , ``openParen`` , ``closeParen`` 
+and ``op`` that allow optional spaces/comments to the right of them:
+
+.. code-block:: idris
+
+  intLiteralC : Rule Integer
+  intLiteralC = (intLiteral <* commentSpace) <|> intLiteral
+
+  openParenC : Rule Integer
+  openParenC = (openParen <* commentSpace) <|> openParen
+
+  closeParenC : Rule Integer
+  closeParenC = (closeParen <* commentSpace) <|> closeParen
+
+  ||| like op but followed by optional comment or space
+  opC : String -> Rule Integer
+  opC s = ((op s) <* commentSpace) <|> (op s)
+
+Then just use these functions instead of the original functions:
+
+.. code-block:: idris
+
+  expr : Rule Integer
+
+  factor : Rule Integer
+  factor = intLiteralC <|> do
+                openParenC
+                r <- expr
+                closeParenC
+                pure r
+
+  term : Rule Integer
+  term = map multInt factor <*> (
+          (opC "*")
+          *> factor)
+       <|> factor
+
+  expr = map addInt term <*> (
+          (opC "+")
+          *> term)
+       <|> map subInt term <*> (
+          (opC "-")
+          *> term)
+       <|> term
+
+  calc : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  calc s = parse expr (fst (lex expressionTokens s))
+
+  lft : (ParseError (TokenData ExpressionToken)) -> IO ()
+  lft (Error s lst) = putStrLn ("error:"++s)
+
+  rht : (Integer, List (TokenData ExpressionToken)) -> IO ()
+  rht i = putStrLn ("right " ++ (show i))
+
+  main : IO ()
+  main = do
+    putStr "alg>"
+    x <- getLine
+    either lft rht (calc x) -- eliminator for Either
+
+
+Defining Block Structure using Indents
+--------------------------------------
+
+Many languages such as Python, Haskell and Idris use indents to delimit
+the block structure of the language.
+
+We can see how Idris2 does it here
+: https://github.com/edwinb/Idris2/blob/master/src/Parser/Support.idr
+
+.. code-block:: idris
+
+  export
+  IndentInfo : Type
+  IndentInfo = Int
+
+  export
+  init : IndentInfo
+  init = 0
+
+EndInput Token
+--------------
+
+So far, the parser will return a successful result even if the full input
+is not consumed. To ensure that the top level syntax is fully matched we
+add a ``EndInput`` token to indicate the last token.
+
+``EndInput`` is added to the other tokens like this:
+
+.. code-block:: idris
+
+  data ExpressionToken = Number Integer
+           | Operator String
+           | OParen
+           | CParen
+           | Comment String
+           | EndInput
+
+A rule to consume this token is added:
+
+.. code-block:: idris
+
+  eoi : Rule Integer
+  eoi = terminal (\x => case tok x of
+                           EndInput => Just 0
+                           _ => Nothing)
+
+Instead of using ``expr`` at the top level of the syntax we can now define
+``exprFull`` as shown here. This will make sure that only when ``EndInput``
+is consumed will the parse be successful:
+
+.. code-block:: idris
+
+  exprFull : Rule Integer
+  exprFull = expr <* eoi
+
+The following code makes sure ``EndInput`` is added to the end of the token
+list:
+
+.. code-block:: idris
+
+  processWhitespace : (List (TokenData ExpressionToken), Int, Int, String)
+                  -> (List (TokenData ExpressionToken), Int, Int, String)
+  processWhitespace (x,l,c,s) = ((filter notComment x)++
+                                      [MkToken l c EndInput],l,c,s) where
+      notComment : TokenData ExpressionToken -> Bool
+      notComment t = case tok t of
+                          Comment _ => False
+                          _ => True
+
+All we have to do now is use ``exprFull`` instead of ``expr``:
+
+.. code-block:: idris
+
+  calc : String -> Either (ParseError (TokenData ExpressionToken))
+                        (Integer, List (TokenData ExpressionToken))
+  calc s = parse exprFull (fst (processWhitespace (lex expressionTokens s)))
+
diff --git a/docs/proofs/definitional.rst b/docs/proofs/definitional.rst
index 1e1b6965f..08c815cc8 100644
--- a/docs/proofs/definitional.rst
+++ b/docs/proofs/definitional.rst
@@ -1,3 +1,7 @@
+*******************
+Background Material
+*******************
+
 In order to understand how to write proofs in Idris I think its worth clarifying some fundamentals, such as,
 
 -  Propositions and judgments
@@ -95,11 +99,11 @@ So now that we can represent propositions as types other aspects of propositiona
 +----------+-------------------+--------------------------+
 | B        | y=z               |                          |
 +----------+-------------------+--------------------------+
-| and      | A /\ B            | Pair(x=y,y=z)            |
+| and      | A /\\ B           | ``Pair(x=y,y=z)``        |
 +----------+-------------------+--------------------------+
-| or       | A \/ B            | Either(x=y,y=z)          |
+| or       | A \\/ B           | ``Either(x=y,y=z)``      |
 +----------+-------------------+--------------------------+
-| implies  | A -> B            | (x=y) -> (y=x)           |
+| implies  | A -> B            | ``(x=y) -> (y=x)``       |
 +----------+-------------------+--------------------------+
 | for all  | y=z               |                          |
 +----------+-------------------+--------------------------+
@@ -126,8 +130,8 @@ We can have a type which corresponds to disjunction:
 .. code-block:: idris
 
    data Or : Type -> Type -> Type where
-   OrIntroLeft : a -> A a b
-   OrIntroRight : b -> A a b
+     OrIntroLeft  : a -> A a b
+     OrIntroRight : b -> A a b
 
 There is a built in type called 'Either'.
 
@@ -202,7 +206,7 @@ In the following pages we discuss how to resolve propositionaly equalies.
 Axiomatic and Constructive Approaches
 =====================================
 
-How should we define types so that  we can do proofs on them? In the natural numbers with plus example we could have started by treating it as a group based on the plus operator. So we have axioms:
+How should we define types so that  we can do proofs on them? In the natural numbers with the plus example we could have started by treating it as a group based on the plus operator. So we have axioms:
 
 -  for all x,y : ``x+y=y+x``
 -  for all x: ``x + 0 = x = 0 + x``
@@ -215,13 +219,13 @@ These are axioms, that is a propositions/types that are asserted to be true with
 
 .. code-block:: idris
 
-   commutePlus ``postulate``: x -> y -> plus x y = plus y x
+   postulate commutePlus: (x:Nat) -> (y:Nat) -> plus x y = plus y x
 
 Alternatively we could define the natural numbers based on Zero and Successor. The axioms above then become derived rules and we also gain the ability to do inductive proofs.
 
 As we know, Idris uses both of these approaches with automatic coercion between them which gives the best of both worlds.
 
-So what can we learn from this to implement out own types:
+So what can we learn from this to implement our own types:
 
 -  Should we try to implement both approaches?
 -  Should we define our types by constructing up from primitive types?
diff --git a/docs/proofs/index.rst b/docs/proofs/index.rst
index 9123651cc..3adc9dbf0 100644
--- a/docs/proofs/index.rst
+++ b/docs/proofs/index.rst
@@ -4,7 +4,7 @@
 Theorem Proving
 ###############
 
-A tutorial on theorem proving in Idris. 
+A tutorial on theorem proving in Idris.
 
 .. note::
 
@@ -13,7 +13,7 @@ A tutorial on theorem proving in Idris.
    Idris Community* has waived all copyright and related or neighboring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 .. toctree::
    :maxdepth: 1
diff --git a/docs/proofs/interactive.rst b/docs/proofs/interactive.rst
index cb5842d81..aaadc0fe9 100644
--- a/docs/proofs/interactive.rst
+++ b/docs/proofs/interactive.rst
@@ -15,15 +15,15 @@ construct proofs as described on this page.
 Elab and Pruviloj Libraries
 ===========================
 
-Elaborator reflection is defined in prelude/Language/Reflection/Elab.idr
-and pruviloj is defined in Idris-dev/libs/pruviloj/
+Elaborator reflection is defined in ``prelude/Language/Reflection/Elab.idr``
+and ``pruviloj`` is defined in ``Idris-dev/libs/pruviloj/``.
 
-``Elab`` defines the basics such as: solve, attack, intro, compute,
-rewriteWith and others.
+``Elab`` defines the basics such as: ``solve``, ``attack``, ``intro``, ``compute``,
+``rewriteWith`` and others.
 ``pruviloj`` defines some more advanced derived commands such as:
-reflexivity and others.
+``reflexivity`` and others.
 
-To use ``pruviloj`` call Idris with the "-p pruviloj" option and add:
+To use ``pruviloj`` call Idris with the ``-p pruviloj`` option and add:
 
 .. code-block:: idris
 
@@ -34,7 +34,7 @@ to the top of your file.
 
 It is useful to get the docs at the REPL by using the ``:doc`` command, and
 search the docstrings using ``:apropos``. So to introduce the functions from
-Elab and Pruviloj, that we will need for the following example, here are
+``Elab`` and ``Pruviloj``, that we will need for the following example, here are
 their docstrings:
 
 .. code-block:: idris
@@ -84,7 +84,7 @@ their docstrings:
         that the hole be immediately under its binder (use attack if it might
         not be).
 
-Here is the command from pruviloj that we will need for the example on
+Here is the command from ``pruviloj`` that we will need for the example on
 this page:
 
 .. code-block:: idris
@@ -129,18 +129,18 @@ On running , two global names are created, ``plusredZ_Z`` and
 
     .  /  _/___/ /____(_)____
        / // __  / ___/ / ___/     Version 1.2.0
-     _/ // /_/ / /  / (__  )      http://www.idris-lang.org/
+     _/ // /_/ / /  / (__  )      https://www.idris-lang.org/
     /___/\__,_/_/  /_/____/       Type :? for help
 
     Idris is free software with ABSOLUTELY NO WARRANTY.
     For details type :warranty.
     Holes: Main.plusredZ_S, Main.plusredZ_Z
 
-This tells us that we have two holes Main.plusredZ_S and Main.plusredZ_Z. We can solve
+This tells us that we have two holes ``Main.plusredZ_S`` and ``Main.plusredZ_Z``. We can solve
 these separately, ``plusredZ_Z`` is the simplest so we will do that first.
 
 The ``:elab plusredZ_Z`` command enters interactive elaboration mode, which can be used to
-complete the missing definition for plusredZ_Z.
+complete the missing definition for ``plusredZ_Z``.
 
 .. code-block:: idris
 
@@ -150,7 +150,7 @@ complete the missing definition for plusredZ_Z.
     {hole_0} : 0 = 0
 
 This has been normalised to ``0 = 0`` so now we have to prove that ``0`` equals ``0``, which
-is easy to prove by reflexivity from the pruviloj library:
+is easy to prove by ``reflexivity`` from the ``pruviloj`` library:
 
 .. code-block:: idris
 
@@ -190,7 +190,7 @@ accessible by pattern matching) and ``ih`` — the local variable
 containing the result of the recursive call. We can introduce these as
 assumptions using the ``intro`` tactic twice. The parameter is entered as
 a constant of type ``TTName`` which is entered as a backtick with double
-braces `{{ih}}. This gives:
+braces ```{{ih}}``. This gives:
 
 .. code-block:: idris
 
@@ -223,11 +223,11 @@ like to use this knowledge to replace ``plus k 0`` in the goal with
     {hole_0} : S k = S k
 
 The ``rewriteWith`` tactic takes an equality proof as an argument, and tries
-to rewrite the goal using that proof. The ih value is entered as a constant
-of type ``TTName`` which is entered as a backtick with double braces `{{ih}} but
+to rewrite the goal using that proof. The ``ih`` value is entered as a constant
+of type ``TTName`` which is entered as a backtick with double braces ```{{ih}}`` but
 ``rewriteWith`` requires an expression of type ``Raw``, rather than just a name,
-so the Var constructor is used to make a variable. Here, it results in an equality
-which is trivially provable using reflexivity:
+so the ``Var`` constructor is used to make a variable. Here, it results in an equality
+which is trivially provable using ``reflexivity``:
 
 .. code-block:: idris
 
@@ -289,7 +289,7 @@ However if we put the proof into a separate function like this:
   plusReducesZ' Z     = %runElab (do reflexivity)
   plusReducesZ' (S k) = let ih = plusReducesZ' k in plusredZ_S k ih
 
-This then loads.
+This then loads [#f1]_ .
 
 .. [#f1] https://github.com/idris-lang/Idris-dev/issues/4556
 
diff --git a/docs/proofs/pluscomm.rst b/docs/proofs/pluscomm.rst
index 4622416ff..ee147bf38 100644
--- a/docs/proofs/pluscomm.rst
+++ b/docs/proofs/pluscomm.rst
@@ -182,7 +182,7 @@ interface rather than using ``plus`` directly. They have the names
 
 In the remainder of this tutorial, we will explore several different
 ways of proving ``plus_commutes`` (or, to put it another way, writing
-the function.) We will also discuss how to use such equality proofs, and
+the function). We will also discuss how to use such equality proofs, and
 see where the need for them arises in practice.
 
 .. [1]
diff --git a/docs/proofs/propositional.rst b/docs/proofs/propositional.rst
index 92ccbc0f7..95d2bd210 100644
--- a/docs/proofs/propositional.rst
+++ b/docs/proofs/propositional.rst
@@ -1,19 +1,22 @@
-This page attempts to explain some of the techniques used in Idris to prove propositional equalities.
-
+******************************
 Proving Propositional Equality
-==============================
+******************************
+
+This page attempts to explain some of the techniques used in Idris to prove propositional equalities.
 
-We have seen that definitional equalities can be proved using Refl since they always normalise to unique values that can be compared directly.
+We have seen that definitional equalities can be proved using ``Refl`` since they always normalise to unique values that can be compared directly.
 
-However with propositional equalities we are using symbolic variables they do not always normalse.
+However with propositional equalities we are using symbolic variables they do not always normalise.
 
 So to take the previous example:
 
-plusReducesR : (n:Nat) -> plus n Z = n
+.. code-block:: idris
+
+   plusReducesR : (n:Nat) -> plus n Z = n
 
-In this case 'plus n Z' does not normalise to n. Even though both sides are equal we cannot pattern match Refl.
+In this case ``plus n Z`` does not normalise to ``n``. Even though both sides are equal we cannot pattern match ``Refl``.
 
-If the pattern match cannot match for all 'n' then the way around this is to separately match all possible values of 'n'. In the case of natural numbers we do this by induction.
+If the pattern match cannot match for all ``n`` then the way around this is to separately match all possible values of ``n``. In the case of natural numbers we do this by induction.
 
 So here:
 
@@ -24,19 +27,21 @@ So here:
    plusReducesR {n = (S k)} = let rec = plus_commutes_Z {n=k} in
                                   rewrite rec in Refl
 
-we don't call Refl to match on 'n = plus n 0' forall 'n' we call it for every number separately. So, in the second line, the pattern matcher knows to substitute Z for n in the type being matched. This uses 'rewrite' which is explained below.
+we don't call ``Refl`` to match on ``n = plus n 0`` forall ``n`` we call it for every number separately. So, in the second line, the pattern matcher knows to substitute ``Z`` for ``n`` in the type being matched. This uses ``rewrite`` which is explained below.
 
 Replace
 =======
 
-This implements the 'indiscernability of identicals' principle, if two terms are equal then they have the same properties. In other words, if x=y, then we can substitute y for x in any expression. In our proofs we can express this as:
+This implements the *indiscernability of identicals* principle, if two terms are equal then they have the same properties. In other words, if ``x=y``, then we can substitute ``y`` for ``x`` in any expression. In our proofs we can express this as:
+
+.. code-block:: idris
 
    if x=y
    then P x = P y
 
-where P is a pure function representing the property. In the examples below P is an expression in some variable with a type like this: P: n -> Type
+where ``P`` is a pure function representing the property. In the examples below ``P`` is an expression in some variable with a type like this: ``P: n -> Type``.
 
-So if n is a natural number variable then P could be something like 2*n + 3.
+So if ``n`` is a natural number variable then ``P`` could be something like ``2*n + 3``.
 
 To use this in our proofs there is the following function in the prelude:
 
@@ -46,14 +51,14 @@ To use this in our proofs there is the following function in the prelude:
    replace : {a:_} -> {x:_} -> {y:_} -> {P : a -> Type} -> x = y -> P x -> P y
    replace Refl prf = prf
 
-Removing the implicits, if we supply an equality (x=y) and a proof of a property of x (P x) then we get a proof of a property of y (P y)
+Removing the implicits, if we supply an equality ``x=y`` and a proof of a property of ``x`` (i.e. ``P x``) then we get a proof of a property of ``y`` (i.e. ``P y``)
 
 .. code-block:: idris
 
    > :t replace
    replace : (x = y) -> P x -> P y
 
-So, in the following example, if we supply p1 x which is a proof that x=2 and the equality x=y then we get a proof that y=2.
+So, in the following example, if we supply ``p1 x`` which is a proof that ``x=2`` and the equality ``x=y`` then we get a proof that ``y=2``.
 
 .. code-block:: idris
 
@@ -66,16 +71,16 @@ So, in the following example, if we supply p1 x which is a proof that x=2 and th
 Rewrite
 =======
 
-Similar to 'replace' above but Idris provides a nicer syntax which makes 'rewrite' easier to use in examples like plusReducesR above.
+Similar to ``replace`` above but Idris provides a nicer syntax which makes ``rewrite`` easier to use in examples like ``plusReducesR`` above.
 
 .. code-block:: idris
 
    rewrite__impl : (P : a -> Type) -> x = y -> P y -> P x
    rewrite__impl p Refl prf = prf
 
-The difference from 'replace' above is nicer syntax and the property p1 is explicitly supplied and it goes in the opposite direction (input and output reversed).
+The difference from ``replace`` above is nicer syntax and the property ``p1`` is explicitly supplied and it goes in the opposite direction (input and output reversed).
 
-Example: again we supply p1 which is a proof that x=2 and the equality x=y then we get a proof that y=2.
+Example: again we supply ``p1`` which is a proof that ``x=2`` and the equality ``x=y`` then we get a proof that ``y=2``.
 
 .. code-block:: idris
 
@@ -87,16 +92,16 @@ Example: again we supply p1 which is a proof that x=2 and the equality x=y then
 
 We can think of rewrite doing this:
 
- * Start with a equation x=y and a property P: x -> Type
- * Searches y in P
- * Replaces all occurrences of y with x in P.
+ * start with a equation ``x=y`` and a property ``P: x -> Type``;
+ * search ``y`` in ``P``;
+ * replace all occurrences of ``y`` with ``x`` in ``P``.
 
 That is, we are doing a substitution.
 
 Symmetry and Transitivity
 =========================
 
-In addition to 'reflexivity' equality also obeys 'symmetry' and 'transitivity' and these are also included in the prelude:
+In addition to *reflexivity* equality also obeys *symmetry* and *transitivity* and these are also included in the prelude:
 
 .. code-block:: idris
 
@@ -111,7 +116,7 @@ In addition to 'reflexivity' equality also obeys 'symmetry' and 'transitivity' a
 Heterogeneous Equality
 ======================
 
-Also included in the prelude: 
+Also included in the prelude:
 
 .. code-block:: idris
 
diff --git a/docs/reference/codegen.rst b/docs/reference/codegen.rst
index f1b3cd656..64b9ccece 100644
--- a/docs/reference/codegen.rst
+++ b/docs/reference/codegen.rst
@@ -1,3 +1,5 @@
+.. _code-generation-targets:
+
 ************************
 Code Generation Targets
 ************************
@@ -16,6 +18,13 @@ Official Backends
 C Language
 ----------
 
+The default target of Idris is C. In order to view the generated C code, compile via:
+
+::
+
+    $ idris hello.idr -S -o hello.c
+
+
 Javascript
 ----------
 
@@ -27,10 +36,10 @@ issue the following command:
     $ idris --codegen javascript hello.idr -o hello.js
 
 
-Idris can produce very big chunks of JavaScript code (hello world
-weighs in at 1500 lines). However, the generated code can be minified
-using the `closure-compiler
-<https://developers.google.com/closure/compiler/>`__ from Google.
+Idris can produce big chunks of JavaScript code (hello world weighs in at about
+60 lines). However, the generated code can be minified using the
+`closure-compiler <https://developers.google.com/closure/compiler/>`__ from
+Google.
 
 ::
 
diff --git a/docs/reference/compilation.rst b/docs/reference/compilation.rst
index 774f0145e..199389ed1 100644
--- a/docs/reference/compilation.rst
+++ b/docs/reference/compilation.rst
@@ -54,7 +54,7 @@ by setting a verbosity level.
   Checking, and the individual steps prior to code generation.
 
 
-By default Idris' progress reporting is set to quiet-``-q``, or ``--quiet``.
+By default Idris' progress reporting is set to quiet: ``-q``, or ``--quiet``.
 
 Logging Internal Operation
 ===========================
@@ -100,32 +100,32 @@ Environment Variables
 Several paths set by default within the Idris compiler can be
 overridden through environment variables.  The provided variables are:
 
-* `IDRIS_CC` Change the `C` compiler used by the `C` backend.
-* `IDRIS_CFLAGS` Change the `C` flags passed to the `C` compiler.
-* `TARGET`   Change the target directory i.e. `data dir` where Idris installs files when installing using Cabal/Stack.
-* `IDRIS_LIBRARY_PATH` Change the location of where installed packages are found/installed.
-* `IDRIS_DOC_PATH`  Change the location of where generated idrisdoc for packages are installed.
+* ``IDRIS_CC`` Change the *C compiler* used by the *C backend*.
+* ``IDRIS_CFLAGS`` Change the *C flags* passed to the *C compiler*.
+* ``TARGET``   Change the target directory i.e. *data dir* where Idris installs files when installing using Cabal/Stack.
+* ``IDRIS_LIBRARY_PATH`` Change the location of where installed packages are found/installed.
+* ``IDRIS_DOC_PATH``  Change the location of where generated idrisdoc for packages are installed.
 
 .. note::
 
    In versions of Idris prior to 0.12.3 the environment variables
-   `IDRIS_LIBRARY_PATH` and `TARGET` were both used to affect the
+   ``IDRIS_LIBRARY_PATH`` and ``TARGET`` were both used to affect the
    installation of single packages and direct where Idris installed
    its data. The meaning of these variables has changed, and command
    line options are preferred when changing where individual packages
    are installed.
 
-The CLI option `--ibcsubdir` can be used to direct where generated IBC
+The CLI option ``--ibcsubdir`` can be used to direct where generated IBC
 files are placed.  However, this means Idris will install files in a
 non-standard location separate from the rest of the installed
-packages. The CLI option `--idrispath <dir>` allows you to add a
+packages. The CLI option ``--idrispath <dir>`` allows you to add a
 directory to the library search path; this option can be used multiple
-times and can be shortened to `-i <dir>`. Similary, the `--sourcepath
-<dir>` option can be used to add directories to the source search
-path. There is no shortened version for this option as `-s` is a
+times and can be shortened to ``-i <dir>``. Similary, the ``--sourcepath
+<dir>`` option can be used to add directories to the source search
+path. There is no shortened version for this option as ``-s`` is a
 reserved flag.
 
 Further, Idris also supports options to augment the paths used, and
-pass options to the code generator backend.  The option `--cg-opt
-<ARG>` can be used to pass options to the code generator. The format
-of `<ARG>` is dependent on the selected backend.
+pass options to the code generator backend.  The option ``--cg-opt
+<ARG>`` can be used to pass options to the code generator. The format
+of ``<ARG>`` is dependent on the selected backend.
diff --git a/docs/reference/erasure.rst b/docs/reference/erasure.rst
index 586fe4eda..7f44c5a74 100644
--- a/docs/reference/erasure.rst
+++ b/docs/reference/erasure.rst
@@ -254,7 +254,7 @@ Benchmarks
 ==========
 
 -  source: https://github.com/ziman/idris-benchmarks
--  results: http://ziman.functor.sk/erasure-bm/
+-  results: https://ziman.functor.sk/erasure-bm/
 
 It can be clearly seen that asymptotics are improved by erasure.
 
@@ -269,7 +269,7 @@ Usage warnings are quite bad and unhelpful at the moment. We should
 include more information and at least translate argument numbers to
 their names.
 
-There is no decent documentation yet. This wiki page is the first one.
+There is no decent documentation yet. This page is the first one.
 
 There is no generally accepted terminology. We switch between
 "dotted", "unused", "erased", "irrelevant", "inaccessible", while each
@@ -499,4 +499,4 @@ References
 
 .. [BMM04] Edwin Brady, Conor McBride, James McKinna: `Inductive
            families need not store their indices
-           <http://citeseerx.ist.psu.edu/viewdoc/summary;jsessionid=1F796FCF0F2C4C535FC70F62BE2FB821?doi=10.1.1.62.3849>`__
+           <https://citeseerx.ist.psu.edu/viewdoc/summary;jsessionid=1F796FCF0F2C4C535FC70F62BE2FB821?doi=10.1.1.62.3849>`__
diff --git a/docs/reference/ffi.rst b/docs/reference/ffi.rst
index cb0ed518e..9c105a9e9 100644
--- a/docs/reference/ffi.rst
+++ b/docs/reference/ffi.rst
@@ -121,12 +121,14 @@ Linking foreign code
 This is the example of linking C code. 
 
 .. code-block:: idris
+
     %include C "mylib.h"
     %link C "mylib.o"
 
 Example Makefile
 
 .. code-block:: shell
+
     DEFAULT: mylib.o main.idr
     	idris main.idr -o executableFile
 
@@ -202,9 +204,10 @@ unable to pass the closed-over values through C. If we want to pass Idris values
 to the callback we have to pass them through C explicitly. Non-primitive Idris
 values can be passed to C via the ``Raw`` type.
 
-The other big limitation is that it doesn't support IO functions. Use
-``unsafePerformIO`` to wrap them (i.e. to make an IO function usable as a callback, change the return type
-from IOr to r, and change the = do to = unsafePerformIO $ do).
+The other big limitation is that it doesn't support ``IO`` functions. Use
+``unsafePerformIO`` to wrap them (i.e. to make an ``IO`` function usable as a
+callback, change the return type from ``IO r`` to ``r``, and change the ``= do``
+to ``= unsafePerformIO $ do``).
 
 There are two special function names:
 ``%wrapper`` returns the function pointer that wraps an Idris function. This
@@ -256,7 +259,7 @@ useful to access constants that are preprocessor definitions (like ``INT_MAX``).
     main = print !intMax
 
 For more complicated interactions with C (such as reading and setting fields
-of a C struct), there is a module CFFI available in the contrib package.
+of a C ``struct``), there is a module C FFI available in the contrib package.
 
 C heap
 ------
@@ -369,7 +372,7 @@ Usage from C code
 The ``Raw`` type constructor allows you to access or return a runtime
 representation of the value. For instance, if you want to copy a string
 generated from C code into an Idris value, you may want to return a
-``Raw String``instead of a ``String`` and use ``MKSTR`` or ``MKSTRlen`` to
+``Raw String`` instead of a ``String`` and use ``MKSTR`` or ``MKSTRlen`` to
 copy it over.
 
 .. code-block:: idris
@@ -382,7 +385,7 @@ copy it over.
     const VAL get_string ()
     {
         char * c_string = get_string_allocated_with_malloc()
-        const VAL idris_string = MKSTR(c_string);
+        const VAL idris_string = MKSTR(get_vm(), c_string);
         free(c_string);
         return idris_string
     }
@@ -391,7 +394,7 @@ FFI implementation
 ------------------
 
 In order to write bindings to external libraries, the details of how
-``foreign`` works are unnecessary --- you simply need to know that
+``foreign`` works are unnecessary: you simply need to know that
 ``foreign`` takes an FFI descriptor, the function name, and its
 type. It is instructive to look a little deeper, however:
 
diff --git a/docs/reference/index.rst b/docs/reference/index.rst
index b9dc2a71b..74087ecfd 100644
--- a/docs/reference/index.rst
+++ b/docs/reference/index.rst
@@ -14,7 +14,7 @@ This will tell you how Idris works, for using it you should read the Idris Tutor
    Idris Community* has waived all copyright and related or neighboring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 
 .. toctree::
@@ -36,7 +36,6 @@ This will tell you how Idris works, for using it you should read the Idris Tutor
    internals
    language-features
    language-extensions
-   elaborator-reflection
    type-directed-search
    partial-evaluation
    misc
diff --git a/docs/reference/internals.rst b/docs/reference/internals.rst
index 87bf7dc2d..be8c8f53a 100644
--- a/docs/reference/internals.rst
+++ b/docs/reference/internals.rst
@@ -10,8 +10,8 @@ free to contribute.
 This document assumes that you are already familiar with Idris. It is
 intended for those who want to work on the internals.
 
-People looking to develop new back ends may want to look at [[Idris back
-end IRs\|Idris-back-end-IRs]]
+People looking to develop new back ends may want to look at
+:ref:`code-generation-targets`
 
 Core/TT.hs
 ==========
@@ -53,7 +53,7 @@ with ``SC`` and ``CaseAlt`` to get GHC to generate a function for
 mapping over contained terms.
 
 Constructor cases (``ConCase`` in ``CaseAlt``) refer to numbered
-constructors. Every constructor is numbered 0,1,2,…. At this stage in
+constructors. Every constructor is numbered *0,1,2,…*. At this stage in
 the compiler, the tags are datatype-local. After defunctionalization,
 however, they are made globally unique.
 
@@ -91,12 +91,12 @@ dictionary which makes totality checking easier.
 The ``normalise*`` functions give different behaviors - but
 ``normalise`` is the most common.
 
-``normaliseC`` - "resolved" means with names converted to de Bruijn
-indices as appropriate.
+- ``normaliseC`` - "resolved" means with names converted to de Bruijn
+  indices as appropriate;
 
-``normaliseAll`` - reduce everything, even if it's non-total
+- ``normaliseAll`` - reduce everything, even if it's non-total;
 
-``normaliseTrace`` - special-purpose for debugging
+- ``normaliseTrace`` - special-purpose for debugging.
 
 ``simplify`` - reduce the things that are small - the list argument is
 the things to not reduce.
@@ -110,8 +110,8 @@ Core/Elaborate.hs
 =================
 
 Idris definitions are elaborated one by one and turned into the
-corresponding TT. This is done with a tactic language as an EDSL in the
-Elab monad (or Elab' when there's a custom state).
+corresponding ``TT``. This is done with a tactic language as an EDSL in the
+``Elab`` monad (or ``Elab'`` when there's a custom state).
 
 Lots of plumbing for errors.
 
@@ -122,17 +122,17 @@ The string in the pair returned by elaborate is log information.
 See JFP paper, but the names don't necessarily map to each other. The
 paper is the "idealized version" without logging, additional state, etc.
 
-All the tactics take Raws, typechecking happens there.
+All the tactics take ``Raw`` s, typechecking happens there.
 
-claim (x : t) assumes a new x : t.
+``claim (x : t)`` assumes a new ``x : t``.
 
 PLEASE TIDY THINGS UP!
 
-proofSearch flag to try' is whether the failure came from a human (so
+``proofSearch`` flag is to try whether the failure came from a human (so
 fail) or from a machine (so continue)
 
-Idris-level syntax for providing alternatives explicitly: (\| x, y, z
-\|) try x, y, z in order, and take the first that succeeds.
+Idris-level syntax for providing alternatives explicitly: ``(| x, y, z
+|)`` try ``x``, ``y``, ``z`` in order, and take the first that succeeds.
 
 Core/ProofState.hs
 ==================
@@ -140,37 +140,40 @@ Core/ProofState.hs
 Core/Unify.hs
 =============
 
-Deals with unification. Unification can reply with: - this works - this
-can never work - this will work if these other unification problems work
-out (eg unifying f x with 1)
+Deals with unification. Unification can reply with:
 
-match\_unify: same thing as unification except it's just matching name
-against name, term against term. x + y matches to 0 + y with x = 0. Used
-for <== syntax as well as type class resolution.
+- this works
+- this can never work
+- this will work if these other unification problems work out (e.g.
+  unifying ``f x`` with ``1``)
+
+``match_unify``: same thing as unification except it's just matching name
+against name, term against term. ``x + y`` matches to ``0 + y`` with
+``x = 0``. Used for ``<==`` syntax as well as type class resolution.
 
 Idris/AbsSyntaxTree.hs
 ======================
 
-PTerm is the datatype of Idris syntax. P is for Program. Each PTerm
-turns into a TT term by applying a series of tactics.
+``PTerm`` is the datatype of Idris syntax. ``P`` is for *Program*.
+Each ``PTerm`` turns into a TT term by applying a series of tactics.
 
-IState is the major interpreter state. The global context is the
-tt\_ctxt field.
+``IState`` is the major interpreter state. The global context is the
+``tt_ctxt`` field.
 
-Ctxt maps possibly ambiguous names to their referents.
+``Ctxt`` maps possibly ambiguous names to their referents.
 
 Idris/ElabDecls.hs
 ==================
 
-This is where the actual elaboration from PTerm to TT happens.
+This is where the actual elaboration from ``PTerm`` to ``TT`` happens.
 
 Idris/ElabTerm.hs
 =================
 
-build is the function that creates a Raw. All the "junk" is to deal with
+``build`` is the function that creates a ``Raw``. All the "junk" is to deal with
 things like metavars and so forth. It has to remember what names are
 still to be defined, and it doesn't yet know the type (filled in by
 unificaiton later). Also case expressions have to turn into top-level
 functions.
 
-resolveTC is type class resolution.
+``resolveTC`` is type class resolution.
diff --git a/docs/reference/language-extensions.rst b/docs/reference/language-extensions.rst
index cfdf9a5c1..6297033b7 100644
--- a/docs/reference/language-extensions.rst
+++ b/docs/reference/language-extensions.rst
@@ -3,13 +3,12 @@ Language Extensions
 *******************
 
 
-
 Type Providers
 ===============
 
 Idris type providers are a way to get the type system to reflect
 observations about the world outside of Idris. Similarly to `F# type
-providers <http://msdn.microsoft.com/en-us/library/vstudio/hh156509.aspx>`__,
+providers <https://msdn.microsoft.com/en-us/library/vstudio/hh156509.aspx>`__,
 they cause effectful computations to run during type checking, returning
 information that the type checker can use when checking the rest of the
 program. While F# type providers are based on code generation, Idris
@@ -32,5 +31,11 @@ to the user.
 Example Idris type providers can be seen at `this
 repository <https://github.com/david-christiansen/idris-type-providers>`__.
 More detailed descriptions are available in David Christiansen's `WGP
-'13 paper <http://dx.doi.org/10.1145/2502488.2502495>`__ and `M.Sc.
+'13 paper <https://dx.doi.org/10.1145/2502488.2502495>`__ and `M.Sc.
 thesis <http://itu.dk/people/drc/david-christiansen-thesis.pdf>`__.
+
+Elaborator Reflection
+=====================
+
+Another way to extend the language is elaborator reflection which is described
+in the :ref:`elaborator-index` section.
diff --git a/docs/reference/misc.rst b/docs/reference/misc.rst
index b83b48b0a..0fd7ddd2c 100644
--- a/docs/reference/misc.rst
+++ b/docs/reference/misc.rst
@@ -115,11 +115,11 @@ Here is an example:
     import Syntax.PreorderReasoning
     multThree : (a, b, c : Nat) -> a * b * c = c * a * b
     multThree a b c =
-      (a * b * c) ={ sym (multAssociative a b c) }=
-      (a * (b * c)) ={ cong (multCommutative b c) }=
-      (a * (c * b)) ={ multAssociative a c b }=
-      (a * c * b) ={ cong {f = (* b)} (multCommutative a c) }=
-      (c * a * b) QED
+      (a * b * c)	={ sym (multAssociative a b c) }=
+      (a * (b * c))	={ cong (multCommutative b c) }=
+      (a * (c * b))	={ multAssociative a c b }=
+      (a * c * b)	={ cong {f = (* b)} (multCommutative a c) }=
+      (c * a * b)	QED
 
 Note that the parentheses are required -- only a simple expression can
 be on the left of ``={ }=`` or ``QED``. Also, when using preorder
diff --git a/docs/reference/partial-evaluation.rst b/docs/reference/partial-evaluation.rst
index f7c5fc9ff..ee2160102 100644
--- a/docs/reference/partial-evaluation.rst
+++ b/docs/reference/partial-evaluation.rst
@@ -8,7 +8,7 @@ of functions with arguments annotated as ``%static``.
 
 (This is an implementation of the partial evaluator described in `this
 ICFP 2010
-paper <http://eb.host.cs.st-andrews.ac.uk/writings/icfp10.pdf>`__.
+paper <https://eb.host.cs.st-andrews.ac.uk/writings/icfp10.pdf>`__.
 Please refer to this for more precise definitions of what follows.)
 
 Partial evaluation is switched off by default since Idris 1.0. It can
@@ -207,7 +207,7 @@ Specialising Interpreters
 A particularly useful situation where partial evaluation becomes
 effective is in defining an interpreter for a well-typed expression
 language, defined as follows (see the `Idris tutorial, section
-4 <http://eb.host.cs.st-andrews.ac.uk/writings/idris-tutorial.pdf>`__
+4 <https://eb.host.cs.st-andrews.ac.uk/writings/idris-tutorial.pdf>`__
 for more details on how this works):
 
 ::
diff --git a/docs/reference/type-directed-search.rst b/docs/reference/type-directed-search.rst
index 21cb7736c..38864cc04 100644
--- a/docs/reference/type-directed-search.rst
+++ b/docs/reference/type-directed-search.rst
@@ -4,7 +4,7 @@ Type Directed Search ``:search``
 
 Idris' ``:search`` command searches for terms according to their
 approximate type signature (much like
-`Hoogle <http://www.haskell.org/hoogle/>`__ for Haskell). For
+`Hoogle <https://www.haskell.org/hoogle/>`__ for Haskell). For
 example::
 
     Idris> :search e -> List e -> List e
diff --git a/docs/reference/uniqueness-types.rst b/docs/reference/uniqueness-types.rst
index a5162eb50..2ef2c0b82 100644
--- a/docs/reference/uniqueness-types.rst
+++ b/docs/reference/uniqueness-types.rst
@@ -13,7 +13,7 @@ ideally while giving up as little high level conveniences as possible.
 
 They are inspired by linear types, `Uniqueness Types
 <https://en.wikipedia.org/wiki/Uniqueness_type>`__ in the `Clean
-<http://wiki.clean.cs.ru.nl/Clean>`__ programming language, and
+<https://wiki.clean.cs.ru.nl/Clean>`__ programming language, and
 ownership types and borrowed pointers in the `Rust
 <https://www.rust-lang.org/>`__ programming language.
 
@@ -199,7 +199,7 @@ return it in exactly the condition in which it was received!
 The restriction is that when a ``Borrowed`` type is matched, any
 pattern variables under the ``Read`` which have a unique type may not
 be referred to at all on the right hand side (unless they are
-themselves ``lent`` to another function).
+themselves lent to another function).
 
 Uniqueness information is stored in the type, and in particular in
 function types. Once we're in a unique context, any new function which
diff --git a/docs/st/index.rst b/docs/st/index.rst
index fd9b6774e..da0a478b2 100644
--- a/docs/st/index.rst
+++ b/docs/st/index.rst
@@ -14,7 +14,7 @@ the `Control.ST` library in `Idris`.
    Idris Community* has waived all copyright and related or neighbouring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 .. toctree::
    :maxdepth: 1
diff --git a/docs/st/introduction.rst b/docs/st/introduction.rst
index 2ee9828cb..ecaf83747 100644
--- a/docs/st/introduction.rst
+++ b/docs/st/introduction.rst
@@ -3,7 +3,7 @@ Overview
 ********
 
 Pure functional languages with dependent types such as `Idris
-<http://www.idris-lang.org/>`_ support reasoning about programs directly
+<https://www.idris-lang.org/>`_ support reasoning about programs directly
 in the type system, promising that we can *know* a program will run
 correctly (i.e. according to the specification in its type) simply
 because it compiles. 
diff --git a/docs/tutorial/conclusions.rst b/docs/tutorial/conclusions.rst
index fdfdccf07..34d6fc1cf 100644
--- a/docs/tutorial/conclusions.rst
+++ b/docs/tutorial/conclusions.rst
@@ -7,7 +7,7 @@ Further Reading
 Further information about Idris programming, and programming with
 dependent types in general, can be obtained from various sources:
 
--  The Idris web site (http://www.idris-lang.org/) and by asking
+-  The Idris web site (https://www.idris-lang.org/) and by asking
    questions on the mailing list.
 
 -  The IRC channel ``#idris``, on
@@ -25,7 +25,7 @@ dependent types in general, can be obtained from various sources:
    https://github.com/idris-lang/Idris-dev.
 
 -  Existing projects on the ``Idris Hackers`` web space:
-   http://idris-hackers.github.io.
+   https://idris-hackers.github.io.
 
 - Various papers (e.g. [1]_, [2]_, and [3]_).  Although these mostly
    describe older versions of Idris.
@@ -36,14 +36,14 @@ dependent types in general, can be obtained from various sources:
        Aspects of Declarative Languages (PADL'12), Claudio Russo and
        Neng-Fa Zhou (Eds.). Springer-Verlag, Berlin, Heidelberg,
        242-257. DOI=10.1007/978-3-642-27694-1_18
-       http://dx.doi.org/10.1007/978-3-642-27694-1_18
+       https://dx.doi.org/10.1007/978-3-642-27694-1_18
 
 .. [2] Edwin C. Brady. 2011. IDRIS ---: systems programming meets full
        dependent types. In Proceedings of the 5th ACM workshop on
        Programming languages meets program verification (PLPV
        '11). ACM, New York, NY, USA,
        43-54. DOI=10.1145/1929529.1929536
-       http://doi.acm.org/10.1145/1929529.1929536
+       https://doi.acm.org/10.1145/1929529.1929536
 
 .. [3] Edwin C. Brady and Kevin Hammond. 2010. Scrapping your
        inefficient engine: using partial evaluation to improve
@@ -51,4 +51,4 @@ dependent types in general, can be obtained from various sources:
        15th ACM SIGPLAN international conference on Functional
        programming (ICFP '10). ACM, New York, NY, USA,
        297-308. DOI=10.1145/1863543.1863587
-       http://doi.acm.org/10.1145/1863543.1863587
+       https://doi.acm.org/10.1145/1863543.1863587
diff --git a/docs/tutorial/index.rst b/docs/tutorial/index.rst
index 92be8ced9..507c740b0 100644
--- a/docs/tutorial/index.rst
+++ b/docs/tutorial/index.rst
@@ -15,7 +15,7 @@ existing functional programming language such as Haskell or OCaml.
    Idris Community* has waived all copyright and related or neighboring
    rights to Documentation for Idris.
 
-   More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/
+   More information concerning the CC0 can be found online at: https://creativecommons.org/publicdomain/zero/1.0/
 
 
 .. toctree::
diff --git a/docs/tutorial/introduction.rst b/docs/tutorial/introduction.rst
index f89d523e5..208d50dae 100644
--- a/docs/tutorial/introduction.rst
+++ b/docs/tutorial/introduction.rst
@@ -6,7 +6,7 @@ Introduction
 
 In conventional programming languages, there is a clear distinction
 between *types* and *values*. For example, in `Haskell
-<http://www.haskell.org>`_, the following are types, representing
+<https://www.haskell.org>`_, the following are types, representing
 integers, characters, lists of characters, and lists of any value
 respectively:
 
@@ -49,7 +49,7 @@ Intended Audience
 
 This tutorial is intended as a brief introduction to the language, and
 is aimed at readers already familiar with a functional language such
-as `Haskell <http://www.haskell.org>`_ or `OCaml <http://ocaml.org>`_.
+as `Haskell <https://www.haskell.org>`_ or `OCaml <https://ocaml.org>`_.
 In particular, a certain amount of familiarity with Haskell syntax is
 assumed, although most concepts will at least be explained
 briefly. The reader is also assumed to have some interest in using
diff --git a/docs/tutorial/miscellany.rst b/docs/tutorial/miscellany.rst
index 4ffdcac5c..9825b5f27 100644
--- a/docs/tutorial/miscellany.rst
+++ b/docs/tutorial/miscellany.rst
@@ -131,7 +131,7 @@ an extension of ``.lidr`` then it is assumed to be a literate file. In
 literate programs, everything is assumed to be a comment unless the line
 begins with a greater than sign ``>``, for example:
 
-.. code-block:: idris
+.. code-block:: literate-idris
 
     > module literate
 
@@ -242,7 +242,7 @@ through the following directives:
 Testing foreign function calls
 ------------------------------
 
-Normally, the Idris interpreter (used for typechecking and at the REPL)
+Normally, the Idris interpreter (used for typechecking and as the REPL)
 will not perform IO actions. Additionally, as it neither generates C
 code nor compiles to machine code, the ``%lib``, ``%include`` and
 ``%link`` directives have no effect. IO actions and FFI calls can be
@@ -560,7 +560,7 @@ But what about the type of ``Type``? If we ask Idris it reports:
     Type : Type 1
 
 If ``Type`` were its own type, it would lead to an inconsistency due to
-`Girard’s paradox <http://www.cs.cmu.edu/afs/cs.cmu.edu/user/kw/www/scans/girard72thesis.pdf>`_,
+`Girard’s paradox <https://www.cs.cmu.edu/afs/cs.cmu.edu/user/kw/www/scans/girard72thesis.pdf>`_,
 so internally there is a *hierarchy* of types (or *universes*):
 
 .. code-block:: idris
diff --git a/docs/tutorial/syntax.rst b/docs/tutorial/syntax.rst
index 09ed8d9a6..d560c7fc5 100644
--- a/docs/tutorial/syntax.rst
+++ b/docs/tutorial/syntax.rst
@@ -196,16 +196,16 @@ syntax rule, we can even go as far as:
        Aspects of Declarative Languages (PADL'12), Claudio Russo and
        Neng-Fa Zhou (Eds.). Springer-Verlag, Berlin, Heidelberg,
        242-257. DOI=10.1007/978-3-642-27694-1_18
-       http://dx.doi.org/10.1007/978-3-642-27694-1_18
+       https://dx.doi.org/10.1007/978-3-642-27694-1_18
 
 .. [2] Edwin C. Brady. 2011. IDRIS ---: systems programming meets full
        dependent types. In Proceedings of the 5th ACM workshop on
        Programming languages meets program verification (PLPV
        '11). ACM, New York, NY, USA,
        43-54. DOI=10.1145/1929529.1929536
-       http://doi.acm.org/10.1145/1929529.1929536
+       https://doi.acm.org/10.1145/1929529.1929536
 
 .. [3] Edwin Brady and Kevin Hammond. 2010. Correct-by-Construction
        Concurrency: Using Dependent Types to Verify Implementations of
        Effectful Resource Usage Protocols. Fundam. Inf. 102, 2 (April
-       2010), 145-176. http://dl.acm.org/citation.cfm?id=1883636
+       2010), 145-176. https://dl.acm.org/citation.cfm?id=1883636
diff --git a/docs/tutorial/typesfuns.rst b/docs/tutorial/typesfuns.rst
index 7c736f7be..56c1abe83 100644
--- a/docs/tutorial/typesfuns.rst
+++ b/docs/tutorial/typesfuns.rst
@@ -1190,7 +1190,7 @@ name. For example, a pair type could be defined as follows:
         fst : a
         snd : b
 
-Using the ``class`` record from earlier, the size of the class can be
+Using the ``Class`` record from earlier, the size of the class can be
 restricted using a ``Vect`` and the size included in the type by parameterising
 the record with the size.  For example:
 
diff --git a/idris-tutorial.pdf b/idris-tutorial.pdf
index 0dd687362..fe906bea0 100644
Binary files a/idris-tutorial.pdf and b/idris-tutorial.pdf differ
diff --git a/idris.cabal b/idris.cabal
index 2422b0fc9..bb6c03951 100644
--- a/idris.cabal
+++ b/idris.cabal
@@ -1,10 +1,11 @@
+Cabal-Version:  2.4
 Name:           idris
 Version:        1.3.2
-License:        BSD3
+License:        BSD-3-Clause
 License-file:   LICENSE
 Author:         Edwin Brady
 Maintainer:     Edwin Brady <eb@cs.st-andrews.ac.uk>
-Homepage:       http://www.idris-lang.org/
+Homepage:       https://www.idris-lang.org/
 Bug-reports:    https://github.com/idris-lang/Idris-dev/issues
 
 Stability:      Beta
@@ -16,7 +17,7 @@ Description:    Idris is a general purpose language with full dependent types.
                 meaning that some aspects of a program's behaviour can be
                 specified precisely in the type. The language is closely
                 related to Epigram and Agda. There is a tutorial at
-                <http://www.idris-lang.org/documentation>.
+                <https://www.idris-lang.org/documentation>.
                 Features include:
                 .
                 * Full, first class, dependent types with dependent pattern matching
@@ -41,42 +42,25 @@ Description:    Idris is a general purpose language with full dependent types.
                 .
                 * Hugs style interactive environment
 
-Cabal-Version:  >= 1.22
-
 Build-type:     Custom
 
 Tested-With:    GHC == 7.10.3, GHC == 8.0.1
 
+-- NOTE: due to https://github.com/haskell/cabal/issues/6125 the use of ** is
+--   heavily discouraged.
 Data-files:            idrisdoc/styles.css
-                       jsrts/jsbn/jsbn-browser.js
-                       jsrts/jsbn/jsbn-node.js
-                       jsrts/Runtime-common.js
-                       jsrts/Runtime-javascript.js
-                       jsrts/Runtime-node.js
+                       jsrts/jsbn/*.js
+                       jsrts/*.js
                        jsrts/jsbn/LICENSE
-                       rts/arduino/idris_main.c
-                       rts/idris_bitstring.c
-                       rts/idris_bitstring.h
-                       rts/idris_gc.c
-                       rts/idris_gc.h
-                       rts/idris_gmp.c
-                       rts/idris_gmp.h
-                       rts/idris_heap.c
-                       rts/idris_heap.h
-                       rts/idris_main.c
-                       rts/idris_net.c
-                       rts/idris_net.h
-                       rts/idris_opts.c
-                       rts/idris_opts.h
-                       rts/idris_rts.c
-                       rts/idris_rts.h
-                       rts/idris_stats.c
-                       rts/idris_stats.h
-                       rts/idris_stdfgn.c
-                       rts/idris_stdfgn.h
-                       rts/mini-gmp.c
-                       rts/mini-gmp.h
-                       rts/libtest.c
+                       rts/Makefile
+                       rts/*.c
+                       rts/seL4/*.c
+                       rts/arduino/*.c
+                       rts/windows/*.c
+                       rts/windows/*.h
+                       rts/*.h
+                       rts/seL4/CMakeLists.txt
+                       rts/seL4/README.md
 
 Extra-doc-files:
                        CHANGELOG.md
@@ -86,13 +70,75 @@ Extra-doc-files:
                        README.md
                        RELEASE-CHECKS.md
                        idris-tutorial.pdf
+                       man/idris.1
                        samples/effects/*.idr
                        samples/misc/*.idr
-                       samples/misc/*.lidr
                        samples/tutorial/*.idr
+                       samples/ST/*.idr
+                       samples/ST/Graphics/*.idr
+                       samples/ST/Net/*.idr
+                       samples/misc/*.lidr
 
 -- extra-source-files is generated by Setup.hs using `git --ls-files`.
 Extra-source-files:
+                      Makefile
+                      config.mk
+                      custom.mk-alldeps
+                      mkpkg.sh
+                      stack-shell.nix
+                      stack.yaml
+                      stylize.sh
+                      win-release.sh
+
+                      benchmarks/*.pl
+                      benchmarks/fasta/*.idr
+                      benchmarks/fasta/*.ipkg
+                      benchmarks/pidigits/*.idr
+                      benchmarks/pidigits/*.ipkg
+                      benchmarks/quasigroups/*.idr
+                      benchmarks/quasigroups/*.ipkg
+                      benchmarks/trivial/*.idr
+                      benchmarks/trivial/*.ipkg
+                      benchmarks/quasigroups/board
+
+                      icons/*.png
+                      icons/*.ico
+                      icons/*.rc
+                      icons/*.svg
+                      icons/*.xml
+
+                      libs/**/*.idr
+                      libs/**/*.ipkg
+                      libs/**/*.txt
+                      libs/Makefile
+                      libs/base/Makefile
+                      libs/contrib/Makefile
+                      libs/effects/Makefile
+                      libs/prelude/Makefile
+                      libs/pruviloj/Makefile
+
+                      scripts/generate-multi-ghc-travis-template
+                      scripts/runidris
+                      scripts/runidris-node
+
+                      src/.ghci
+
+                      test/*.md
+                      test/*.hs
+                      test/**/*.idr
+                      test/**/*.lidr
+                      test/**/*.ipkg
+                      test/**/*.out
+                      test/**/*.sh
+                      test/**/*.c
+                      test/**/*.h
+                      test/**/*.in
+                      test/**/*.txt
+                      test/**/*.js
+                      test/base001/Makefile
+                      test/ffi004/theOtherType
+                      test/ffi004/theType
+                      test/scripts/timeout
 
 source-repository head
   type:     git
@@ -100,7 +146,7 @@ source-repository head
 
 custom-setup
   setup-depends:
-    Cabal >= 1.10 && <2.5,
+    Cabal >= 2.4 && < 3.1,
     base  >= 4 && <5,
     directory,
     filepath,
@@ -261,26 +307,29 @@ Library
                   Util.Pretty
                 , Util.Net
 
-
-
-                -- Auto Generated
                 , Paths_idris
                 , Version_idris
                 , Tools_idris
                 , BuildFlags_idris
 
+                -- Auto Generated
+  Autogen-modules:  Paths_idris
+                  , Version_idris
+                  , Tools_idris
+                  , BuildFlags_idris
+
   Build-depends:  base >=4 && <5
                 , aeson >= 0.6 && < 1.5
                 , annotated-wl-pprint >= 0.7 && < 0.8
-                , ansi-terminal < 0.9
+                , ansi-terminal < 0.11
                 , ansi-wl-pprint < 0.7
                 , array >= 0.4.0.1 && < 0.6
                 , base64-bytestring < 1.1
                 , binary >= 0.8.4.1 && < 0.9
                 , blaze-html >= 0.6.1.3 && < 0.10
-                , blaze-markup >= 0.5.2.1 && < 0.9
+                , blaze-markup >= 0.5.2.1 && < 0.10
                 , bytestring < 0.11
-                , cheapskate >= 0.1.1 && < 0.2
+                , cheapskate >= 0.1.1.2 && < 0.2
                 , code-page >= 0.1 && < 0.3
                 , containers >= 0.5 && < 0.7
                 , deepseq < 1.5
@@ -289,10 +338,10 @@ Library
                 , fingertree >= 0.1.4.1 && < 0.2
                 , haskeline >= 0.7 && < 0.8
                 , ieee754 >= 0.7 && < 0.9
-                , megaparsec >= 7.0.4 && < 8
+                , megaparsec >= 7.0.4 && < 9
                 , mtl >= 2.1 && < 2.3
-                , network >= 2.7 && < 2.9
-                , optparse-applicative >= 0.13 && < 0.15
+                , network >= 2.7 && < 3.1.2
+                , optparse-applicative >= 0.13 && < 0.16
                 , parser-combinators >= 1.0.0
                 , pretty < 1.2
                 , process < 1.7
@@ -300,8 +349,8 @@ Library
                 , safe >= 0.3.9
                 , split < 0.3
                 , terminal-size < 0.4
-                , text >=1.2.1.0 && < 1.3
-                , time >= 1.4 && < 1.9
+                , text >=1.2.1.0 && < 1.4
+                , time >= 1.4 && < 2.0
                 , transformers >= 0.5 && < 0.6
                 , uniplate >=1.6 && < 1.7
                 , unordered-containers < 0.3
@@ -309,11 +358,12 @@ Library
                 , vector < 0.13
                 , vector-binary-instances < 0.3
                 , zip-archive > 0.2.3.5 && < 0.5
-                , fsnotify >= 0.2 && < 2.2
+                , fsnotify >= 0.2 && < 0.4
                 , async < 2.3
 
   if !impl(ghc >= 8.0)
-    Build-Depends: semigroups == 0.18.*
+    Build-Depends:  semigroups == 0.18.*
+                  , fail == 4.9.0.*
 
   Default-Language: Haskell2010
   ghc-prof-options: -auto-all -caf-all
@@ -332,6 +382,7 @@ Library
      cpp-options:   -DIDRIS_GMP
   if flag(freestanding)
      other-modules: Target_idris
+     autogen-modules: Target_idris
      cpp-options:   -DFREESTANDING
   if flag(CI)
      ghc-options:   -Werror
@@ -365,7 +416,7 @@ Test-suite regression-and-feature-tests
                , filepath
                , directory
                , haskeline >= 0.7
-               , optparse-applicative >= 0.13 && < 0.15
+               , optparse-applicative >= 0.13 && < 0.16
                , tagged
                , tasty >= 0.8
                , tasty-golden >= 2.0
@@ -380,6 +431,7 @@ Test-suite regression-and-feature-tests
 
 Executable idris-codegen-c
   Main-is:        Main.hs
+  autogen-modules:  Paths_idris
   other-modules:  Paths_idris
   hs-source-dirs: codegen/idris-codegen-c
 
@@ -395,6 +447,7 @@ Executable idris-codegen-c
 
 Executable idris-codegen-javascript
   Main-is:        Main.hs
+  autogen-modules:  Paths_idris
   other-modules:  Paths_idris
   hs-source-dirs: codegen/idris-codegen-javascript
 
@@ -410,6 +463,7 @@ Executable idris-codegen-javascript
 
 Executable idris-codegen-node
   Main-is:        Main.hs
+  autogen-modules:  Paths_idris
   other-modules:  Paths_idris
   hs-source-dirs: codegen/idris-codegen-node
 
diff --git a/libs/base/Control/Isomorphism.idr b/libs/base/Control/Isomorphism.idr
index 40c893ece..f308a6b5c 100644
--- a/libs/base/Control/Isomorphism.idr
+++ b/libs/base/Control/Isomorphism.idr
@@ -17,21 +17,22 @@ record Iso a b where
 
 -- Isomorphism properties
 
-||| Isomorphism is Reflexive
+||| Isomorphism is reflexive
 isoRefl : Iso a a
-isoRefl = MkIso id id (\x => Refl) (\x => Refl)
+isoRefl = MkIso id id (\_ => Refl) (\_ => Refl)
 
 ||| Isomorphism is transitive
 isoTrans : Iso a b -> Iso b c -> Iso a c
 isoTrans (MkIso to from toFrom fromTo) (MkIso to' from' toFrom' fromTo') =
-  MkIso (\x => to' (to x))
-        (\y => from (from' y))
-        (\y => (to' (to (from (from' y))))  ={ cong (toFrom (from' y)) }=
-               (to' (from' y))              ={ toFrom' y               }=
-               y                            QED)
-        (\x => (from (from' (to' (to x))))  ={ cong (fromTo' (to x)) }=
-               (from (to x))                ={ fromTo x              }=
-               x                            QED)
+  MkIso xto xfrom xtoFrom xfromTo where
+    xto : a -> c
+    xto = to' . to
+    xfrom : c -> a
+    xfrom = from . from'
+    xtoFrom : (z : c) -> xto (xfrom z) = z
+    xtoFrom z = rewrite toFrom $ from' z in toFrom' z
+    xfromTo : (x : a) -> xfrom (xto x) = x
+    xfromTo x = rewrite fromTo' (to x) in fromTo x
 
 Category Iso where
   id = isoRefl
@@ -99,8 +100,7 @@ eitherBotRight = isoTrans eitherComm eitherBotLeft
 
 ||| Isomorphism is a congruence with regards to disjunction
 eitherCong : Iso a a' -> Iso b b' -> Iso (Either a b) (Either a' b')
-eitherCong {a = a} {a' = a'} {b = b} {b' = b'}
-           (MkIso to from toFrom fromTo)
+eitherCong (MkIso to from toFrom fromTo)
            (MkIso to' from' toFrom' fromTo') =
   MkIso (eitherMap to to') (eitherMap from from') ok1 ok2
     where eitherMap : (c -> c') -> (d -> d') -> Either c d -> Either c' d'
@@ -143,9 +143,7 @@ pairAssoc = MkIso to from ok1 ok2
 
 ||| Conjunction with truth is a no-op
 pairUnitRight : Iso (a, ()) a
-pairUnitRight = MkIso fst (\x => (x, ())) (\x => Refl) ok
-  where ok : (x : (a, ())) -> (fst x, ()) = x
-        ok (x, ()) = Refl
+pairUnitRight = MkIso fst (\x => (x, ())) (\_ => Refl) (\(_, ()) => Refl)
 
 ||| Conjunction with truth is a no-op
 pairUnitLeft : Iso ((), a) a
@@ -161,8 +159,7 @@ pairBotRight = isoTrans pairComm pairBotLeft
 
 ||| Isomorphism is a congruence with regards to conjunction
 pairCong : Iso a a' -> Iso b b' -> Iso (a, b) (a', b')
-pairCong {a = a} {a' = a'} {b = b} {b' = b'}
-         (MkIso to from toFrom fromTo)
+pairCong (MkIso to from toFrom fromTo)
          (MkIso to' from' toFrom' fromTo') =
   MkIso to'' from'' iso1 iso2
     where to'' : (a, b) -> (a', b')
@@ -205,7 +202,7 @@ distribLeft = MkIso to from toFrom fromTo
 
 ||| Products distribute over sums
 distribRight : Iso (a, Either b c) (Either (a, b) (a, c))
-distribRight {a} {b} {c} = (pairComm `isoTrans` distribLeft) `isoTrans` eitherCong pairComm pairComm
+distribRight = (pairComm `isoTrans` distribLeft) `isoTrans` eitherCong pairComm pairComm
 
 
 -- Enable preorder reasoning syntax over isomorphisms
@@ -222,7 +219,7 @@ step a iso1 iso2 = isoTrans iso1 iso2
 -- Isomorphisms over Maybe
 ||| Isomorphism is a congruence with respect to Maybe
 maybeCong : Iso a b -> Iso (Maybe a) (Maybe b)
-maybeCong {a} {b} (MkIso to from toFrom fromTo) = MkIso (map to) (map from) ok1 ok2
+maybeCong (MkIso to from toFrom fromTo) = MkIso (map to) (map from) ok1 ok2
   where ok1 : (y : Maybe b) -> map to (map from y) = y
         ok1 Nothing = Refl
         ok1 (Just x) = (Just (to (from x))) ={ cong (toFrom x) }= (Just x) QED
@@ -253,7 +250,7 @@ maybeVoidUnit = (Maybe Void)     ={ maybeEither   }=
                 ()              QED
 
 eitherMaybeLeftMaybe : Iso (Either (Maybe a) b) (Maybe (Either a b))
-eitherMaybeLeftMaybe {a} {b} =
+eitherMaybeLeftMaybe =
   (Either (Maybe a) b)     ={ eitherCongLeft maybeEither }=
   (Either (Either a ()) b) ={ eitherAssoc                }=
   (Either a (Either () b)) ={ eitherCongRight eitherComm }=
@@ -263,7 +260,7 @@ eitherMaybeLeftMaybe {a} {b} =
 
 
 eitherMaybeRightMaybe : Iso (Either a (Maybe b)) (Maybe (Either a b))
-eitherMaybeRightMaybe {a} {b} =
+eitherMaybeRightMaybe =
   (Either a (Maybe b)) ={ eitherComm           }=
   (Either (Maybe b) a) ={ eitherMaybeLeftMaybe }=
   (Maybe (Either b a)) ={ maybeCong eitherComm }=
@@ -288,8 +285,8 @@ maybeIsoS = MkIso forth back fb bf
         fb (FS x) = Refl
 
 finZeroBot : Iso (Fin 0) Void
-finZeroBot = MkIso (\x => void (uninhabited x))
-                   (\x => void x)
+finZeroBot = MkIso (void . uninhabited)
+                   void
                    (\x => void x)
                    (\x => void (uninhabited x))
 
diff --git a/libs/base/Data/Fin.idr b/libs/base/Data/Fin.idr
index a2577b67e..730b1b32e 100644
--- a/libs/base/Data/Fin.idr
+++ b/libs/base/Data/Fin.idr
@@ -65,6 +65,11 @@ weakenN : (n : Nat) -> Fin m -> Fin (m + n)
 weakenN n FZ = FZ
 weakenN n (FS f) = FS (weakenN n f)
 
+||| Weaken the bound on a Fin using an inequality proof
+weakenLTE : LTE n m -> Fin n -> Fin m
+weakenLTE (LTESucc p)  FZ    = FZ
+weakenLTE (LTESucc p) (FS f) = FS $ weakenLTE p f
+
 ||| Attempt to tighten the bound on a Fin.
 ||| Return `Left` if the bound could not be tightened, or `Right` if it could.
 strengthen : Fin (S n) -> Either (Fin (S n)) (Fin n)
@@ -101,6 +106,10 @@ implementation MinBound (Fin (S n)) where
 implementation MaxBound (Fin (S n)) where
   maxBound = last
 
+||| Add two Fins
+addFin : (x : Fin n) -> (y : Fin m) -> Fin (finToNat x + m)
+addFin  FZ    y = y
+addFin (FS x) y = FS $ addFin x y
 
 -- Construct a Fin from an integer literal which must fit in the given Fin
 
diff --git a/libs/base/Data/List/Quantifiers.idr b/libs/base/Data/List/Quantifiers.idr
index 932076e33..993e9931e 100644
--- a/libs/base/Data/List/Quantifiers.idr
+++ b/libs/base/Data/List/Quantifiers.idr
@@ -75,3 +75,8 @@ all d (x::xs) with (d x)
     case all d xs of
       Yes prf' => Yes (prf :: prf')
       No prf' => No (notAllThere prf')
+
+||| Given a proof of membership for some element, extract the property proof for it
+indexAll : Elem x xs -> All p xs -> p x
+indexAll  Here     (p::_  ) = p
+indexAll (There e) ( _::ps) = indexAll e ps
diff --git a/libs/base/Data/So.idr b/libs/base/Data/So.idr
index 374f588f1..bf672b80f 100644
--- a/libs/base/Data/So.idr
+++ b/libs/base/Data/So.idr
@@ -12,7 +12,7 @@ module Data.So
 ||| If you find yourself using `So` for something other than primitive types,
 ||| it may be appropriate to define a type of evidence for the property that you
 ||| care about instead.
-data So : Bool -> Type where 
+data So : Bool -> Type where
   Oh : So True
 
 implementation Uninhabited (So False) where
@@ -23,4 +23,14 @@ choose : (b : Bool) -> Either (So b) (So (not b))
 choose True  = Left Oh
 choose False = Right Oh
 
+||| Absurd when you have proof that both `b` and `not b` is true.
+export
+soAbsurd : So b -> So (not b) -> Void
+soAbsurd sb snb with (sb)
+  | Oh = uninhabited snb
+
+||| Transmission between usage of value-level `not` and type-level `Not`.
+export
+soNotToNotSo : So (not b) -> Not (So b)
+soNotToNotSo = flip soAbsurd
 
diff --git a/libs/base/Data/Vect.idr b/libs/base/Data/Vect.idr
index bb1eeb4af..9ab1a0f0b 100644
--- a/libs/base/Data/Vect.idr
+++ b/libs/base/Data/Vect.idr
@@ -278,7 +278,7 @@ fromList l =
 (++) []      ys = ys
 (++) (x::xs) ys = x :: xs ++ ys
 
-||| Repeate some value some number of times.
+||| Repeat some value some number of times.
 |||
 ||| @ len the number of times to repeat it
 ||| @ x the value to repeat
diff --git a/libs/contrib/Control/Algebra/Laws.idr b/libs/contrib/Control/Algebra/Laws.idr
index 6d6a8b309..46e9356e8 100644
--- a/libs/contrib/Control/Algebra/Laws.idr
+++ b/libs/contrib/Control/Algebra/Laws.idr
@@ -1,105 +1,277 @@
 module Control.Algebra.Laws
 
 import Prelude.Algebra as A
-import Control.Algebra
+import Control.Algebra as Alg
 import Interfaces.Verified
 
 %access export
 
-||| A prof that -0 = 0 in any verified group.
-inverseNeutralIsNeutral : VerifiedGroup t => inverse (the t A.neutral) = A.neutral
+-- Monoids
+
+||| Inverses are unique.
+uniqueInverse : VerifiedMonoid t => (x, y, z : t) ->
+  y <+> x = A.neutral -> x <+> z = A.neutral -> y = z
+uniqueInverse x y z p q =
+  rewrite sym $ monoidNeutralIsNeutralL y in
+    rewrite sym q in
+      rewrite semigroupOpIsAssociative y x z in
+  rewrite p in
+    rewrite monoidNeutralIsNeutralR z in
+      Refl
+
+-- Groups
+
+||| Only identity is self-squaring.
+selfSquareId : VerifiedGroup t => (x : t) ->
+  x <+> x = x -> x = A.neutral
+selfSquareId x p =
+  rewrite sym $ monoidNeutralIsNeutralR x in
+    rewrite sym $ groupInverseIsInverseR x in
+  rewrite sym $ semigroupOpIsAssociative (inverse x) x x in
+    rewrite p in
+      Refl
+
+||| Inverse elements commute.
+inverseCommute : VerifiedGroup t => (x, y : t) ->
+  y <+> x = A.neutral -> x <+> y = A.neutral
+inverseCommute x y p = selfSquareId (x <+> y) prop where
+  prop : (x <+> y) <+> (x <+> y) = x <+> y
+  prop =
+    rewrite sym $ semigroupOpIsAssociative x y (x <+> y) in
+      rewrite semigroupOpIsAssociative y x y in
+    rewrite p in
+      rewrite monoidNeutralIsNeutralR y in
+        Refl
+
+||| Every element has a right inverse.
+groupInverseIsInverseL : VerifiedGroup t => (x : t) ->
+  x <+> inverse x = Algebra.neutral
+groupInverseIsInverseL x =
+  inverseCommute x (inverse x) (groupInverseIsInverseR x)
+
+||| -(-x) = x in any verified group.
+inverseSquaredIsIdentity : VerifiedGroup t => (x : t) ->
+  inverse (inverse x) = x
+inverseSquaredIsIdentity x =
+  let x' = inverse x in
+    uniqueInverse
+      x'
+      (inverse x')
+      x
+      (groupInverseIsInverseR x')
+      (groupInverseIsInverseR x)
+
+||| If every square in a group is identity, the group is commutative.
+squareIdCommutative : VerifiedGroup t => (x, y : t) ->
+  ((a : t) -> a <+> a = A.neutral) ->
+  x <+> y = y <+> x
+squareIdCommutative x y p =
+  let
+    xy = x <+> y
+    yx = y <+> x
+      in
+  uniqueInverse xy xy yx (p xy) prop where
+    prop : (x <+> y) <+> (y <+> x) = A.neutral
+    prop =
+      rewrite sym $ semigroupOpIsAssociative x y (y <+> x) in
+        rewrite semigroupOpIsAssociative y y x in
+      rewrite p y in
+        rewrite monoidNeutralIsNeutralR x in
+          p x
+
+||| -0 = 0 in any verified group.
+inverseNeutralIsNeutral : VerifiedGroup t =>
+  inverse (the t A.neutral) = A.neutral
 inverseNeutralIsNeutral {t} =
-    let zero = the t neutral
-        step1 = cong {f = (<+> inverse zero)} (the (zero = zero) Refl)
-        step2 = replace {P = \x => zero <+> inverse zero = x} (groupInverseIsInverseL zero) step1
-    in
-    replace {P = \x => x = neutral} (monoidNeutralIsNeutralR $ inverse zero) step2
-
-||| A proof that -(-x) = x in any verified group.
-inverseSquaredIsIdentity : VerifiedGroup t => (x : t) -> inverse (inverse x) = x
-inverseSquaredIsIdentity {t} x =
-    let zero = the t neutral
-        step1 = cong {f = (x <+>)} (groupInverseIsInverseL (inverse x))
-        step2 = replace {P = \r => r = x <+> neutral} (semigroupOpIsAssociative x (inverse x) (inverse $ inverse x)) step1
-        step3 = replace {P = \r => r <+> inverse (inverse x) = x <+> neutral} (groupInverseIsInverseL x) step2
-        step4 = replace {P = \r => r = x <+> neutral} (monoidNeutralIsNeutralR (inverse $ inverse x)) step3
-    in
-    replace {P = \r => inverse (inverse x) = r} (monoidNeutralIsNeutralL x) step4
-
-||| A proof that -(x + y) = -x - y in any verified abelian group.
-inverseDistributesOverGroupOp : VerifiedAbelianGroup t => (l, r : t) -> inverse (l <+> r) = inverse l <+> inverse r
-inverseDistributesOverGroupOp {t} l r =
-    let step1 = replace {P = \x => x = neutral} (sym $ groupInverseIsInverseL (l <+> r)) $ the (the t neutral = neutral) Refl
-        step2 = cong {f = ((inverse r) <+>) . ((inverse l) <+>)} step1
-        step3 = replace {P = \x => inverse r <+> (inverse l <+> (l <+> r <+> inverse (l <+> r))) = inverse r <+> x} (monoidNeutralIsNeutralL (inverse l)) step2
-        step4 = replace {P = \x => x = inverse r <+> inverse l} (semigroupOpIsAssociative (inverse r) (inverse l) (l <+> r <+> inverse (l <+> r))) step3
-        step5 = replace {P = \x => x = inverse r <+> inverse l} (semigroupOpIsAssociative (inverse r <+> inverse l) (l <+> r) (inverse (l <+> r))) step4
-        step6 = replace {P = \x => x <+> inverse (l <+> r) = inverse r <+> inverse l} (semigroupOpIsAssociative (inverse r <+> inverse l) l r) step5
-        step7 = replace {P = \x => x <+> r <+> inverse (l <+> r) = inverse r <+> inverse l} (sym $ semigroupOpIsAssociative (inverse r) (inverse l) l) step6
-        step8 = replace {P = \x => inverse r <+> x <+> r <+> inverse (l <+> r) = inverse r <+> inverse l} (groupInverseIsInverseR l) step7
-        step9 = replace {P = \x => x <+> r <+> inverse (l <+> r) = inverse r <+> inverse l} (monoidNeutralIsNeutralL (inverse r)) step8
-        step10 = replace {P = \x => x <+> inverse (l <+> r) = inverse r <+> inverse l} (groupInverseIsInverseR r) step9
-        step11 = replace {P = \x => x = inverse r <+> inverse l} (monoidNeutralIsNeutralR (inverse (l <+> r))) step10
-    in
-    replace {P = \x => inverse (l <+> r) = x} (abelianGroupOpIsCommutative (inverse r) (inverse l)) step11
-
-||| A proof that anything multiplied by zero yields zero back.
-multNeutralAbsorbingL : VerifiedRingWithUnity t => (r : t) -> A.neutral <.> r = A.neutral
-multNeutralAbsorbingL r =
-    let step1 = the (unity <.> r = r) (ringWithUnityIsUnityR r)
-        step2 = replace {P = \x => x <.> r = r} (sym $ monoidNeutralIsNeutralR unity) step1
-        step3 = replace {P = \x => x = r} (ringOpIsDistributiveR neutral unity r) step2
-        step4 = replace {P = \x => neutral <.> r <+> x = r} (ringWithUnityIsUnityR r) step3
-        step5 = cong {f = \x => x <+> inverse r} step4
-        step6 = replace {P = \x => x = r <+> inverse r} (sym $ semigroupOpIsAssociative (neutral <.> r) r (inverse r)) step5
-        step7 = replace {P = \x => neutral <.> r <+> x = x} (groupInverseIsInverseL r) step6
-    in
-    replace {P = \x => x = neutral} (monoidNeutralIsNeutralL (neutral <.> r)) step7
-
-||| A proof that anything multiplied by zero yields zero back.
-multNeutralAbsorbingR : VerifiedRingWithUnity t => (l : t) -> l <.> A.neutral = A.neutral
-multNeutralAbsorbingR l =
-    let step1 = the (l <.> unity = l) (ringWithUnityIsUnityL l)
-        step2 = replace {P = \x => l <.> x = l} (sym $ monoidNeutralIsNeutralR unity) step1
-        step3 = replace {P = \x => x = l} (ringOpIsDistributiveL l neutral unity) step2
-        step4 = replace {P = \x => l <.> neutral <+> x = l} (ringWithUnityIsUnityL l) step3
-        step5 = cong {f = \x => x <+> inverse l} step4
-        step6 = replace {P = \x => x = l <+> inverse l} (sym $ semigroupOpIsAssociative (l <.> neutral) l (inverse l)) step5
-        step7 = replace {P = \x => l <.> neutral <+> x = x} (groupInverseIsInverseL l) step6
-    in
-    replace {P = \x => x = neutral} (monoidNeutralIsNeutralL (l <.> neutral)) step7
-
-||| A proof that inverse operator can be extracted before multiplication
+  let e = the t neutral in
+    rewrite sym $ cong {f = inverse} (groupInverseIsInverseL e) in
+      rewrite monoidNeutralIsNeutralR $ inverse e in
+        inverseSquaredIsIdentity e
+
+||| -(x + y) = -y + -x in any verified group.
+inverseOfSum : VerifiedGroup t => (l, r : t) ->
+  inverse (l <+> r) = inverse r <+> inverse l
+inverseOfSum {t} l r =
+  let
+    e = the t neutral
+    il = inverse l
+    ir = inverse r
+    lr = l <+> r
+    ilr = inverse lr
+    iril = ir <+> il
+    ile = il <+> e
+      in
+  -- expand
+  rewrite sym $ monoidNeutralIsNeutralR ilr in
+    rewrite sym $ groupInverseIsInverseR r in
+      rewrite sym $ monoidNeutralIsNeutralL ir in
+        rewrite sym $ groupInverseIsInverseR l in
+  -- shuffle
+  rewrite semigroupOpIsAssociative ir il l in
+    rewrite sym $ semigroupOpIsAssociative iril l r in
+      rewrite sym $ semigroupOpIsAssociative iril lr ilr in
+  -- contract
+  rewrite sym $ monoidNeutralIsNeutralL il in
+    rewrite groupInverseIsInverseL lr in
+      rewrite sym $ semigroupOpIsAssociative (ir <+> ile) l ile in
+        rewrite semigroupOpIsAssociative l il e in
+          rewrite groupInverseIsInverseL l in
+            rewrite monoidNeutralIsNeutralL e in
+              Refl
+
+||| y = z if x + y = x + z.
+cancelLeft : VerifiedGroup t => (x, y, z : t) ->
+  x <+> y = x <+> z -> y = z
+cancelLeft x y z p =
+  rewrite sym $ monoidNeutralIsNeutralR y in
+    rewrite sym $ groupInverseIsInverseR x in
+      rewrite sym $ semigroupOpIsAssociative (inverse x) x y in
+        rewrite p in
+      rewrite semigroupOpIsAssociative (inverse x) x z in
+    rewrite groupInverseIsInverseR x in
+  monoidNeutralIsNeutralR z
+
+||| y = z if y + x = z + x.
+cancelRight : VerifiedGroup t => (x, y, z : t) ->
+  y <+> x = z <+> x -> y = z
+cancelRight x y z p =
+  rewrite sym $ monoidNeutralIsNeutralL y in
+    rewrite sym $ groupInverseIsInverseL x in
+      rewrite semigroupOpIsAssociative y x (inverse x) in
+        rewrite p in
+      rewrite sym $ semigroupOpIsAssociative z x (inverse x) in
+    rewrite groupInverseIsInverseL x in
+  monoidNeutralIsNeutralL z
+
+||| For any a and b, ax = b and ya = b have solutions.
+latinSquareProperty : VerifiedGroup t => (a, b : t) ->
+  ((x : t ** a <+> x = b),
+    (y : t ** y <+> a = b))
+latinSquareProperty a b =
+  let a' = inverse a in
+    (((a' <+> b) **
+      rewrite semigroupOpIsAssociative a a' b in
+        rewrite groupInverseIsInverseL a in
+          monoidNeutralIsNeutralR b),
+    (b <+> a' **
+      rewrite sym $ semigroupOpIsAssociative b a' a in
+        rewrite groupInverseIsInverseR a in
+          monoidNeutralIsNeutralL b))
+
+||| For any a, b, x, the solution to ax = b is unique.
+uniqueSolutionR : VerifiedGroup t => (a, b, x, y : t) ->
+  a <+> x = b -> a <+> y = b -> x = y
+uniqueSolutionR a b x y p q = cancelLeft a x y $ trans p (sym q)
+
+||| For any a, b, y, the solution to ya = b is unique.
+uniqueSolutionL : VerifiedGroup t => (a, b, x, y : t) ->
+  x <+> a = b -> y <+> a = b -> x = y
+uniqueSolutionL a b x y p q = cancelRight a x y $ trans p (sym q)
+
+||| -(x + y) = -x + -y in any verified abelian group.
+inverseDistributesOverGroupOp : VerifiedAbelianGroup t => (l, r : t) ->
+  inverse (l <+> r) = inverse l <+> inverse r
+inverseDistributesOverGroupOp l r =
+  rewrite abelianGroupOpIsCommutative (inverse l) (inverse r) in
+    inverseOfSum l r
+
+-- Rings
+
+||| Anything multiplied by zero yields zero back in a verified ring.
+multNeutralAbsorbingL : VerifiedRing t => (r : t) ->
+  A.neutral <.> r = A.neutral
+multNeutralAbsorbingL {t} r =
+  let
+    e = the t neutral
+    ir = inverse r
+    exr = e <.> r
+    iexr = inverse exr
+      in
+  rewrite sym $ monoidNeutralIsNeutralR exr in
+    rewrite sym $ groupInverseIsInverseR exr in
+  rewrite sym $ semigroupOpIsAssociative iexr exr ((iexr <+> exr) <.> r) in
+    rewrite groupInverseIsInverseR exr in
+  rewrite sym $ ringOpIsDistributiveR e e r in
+    rewrite monoidNeutralIsNeutralR e in
+  groupInverseIsInverseR exr
+
+||| Anything multiplied by zero yields zero back in a verified ring.
+multNeutralAbsorbingR : VerifiedRing t => (l : t) ->
+  l <.> A.neutral = A.neutral
+multNeutralAbsorbingR {t} l =
+  let
+    e = the t neutral
+    il = inverse l
+    lxe = l <.> e
+    ilxe = inverse lxe
+      in
+  rewrite sym $ monoidNeutralIsNeutralL lxe in
+    rewrite sym $ groupInverseIsInverseL lxe in
+  rewrite semigroupOpIsAssociative (l <.> (lxe <+> ilxe)) lxe ilxe in
+    rewrite groupInverseIsInverseL lxe in
+  rewrite sym $ ringOpIsDistributiveL l e e in
+    rewrite monoidNeutralIsNeutralL e in
+  groupInverseIsInverseL lxe
+
+||| Inverse operator can be extracted before multiplication.
 ||| (-x)y = -(xy)
-multInverseInversesL : VerifiedRingWithUnity t => (l, r : t) -> inverse l <.> r = inverse (l <.> r)
+multInverseInversesL : VerifiedRing t => (l, r : t) ->
+  inverse l <.> r = inverse (l <.> r)
 multInverseInversesL l r =
-    let step1 = replace {P = \x => x <.> r = neutral} (sym $ groupInverseIsInverseL l) (multNeutralAbsorbingL r)
-        step2 = replace {P = \x => x = neutral} (ringOpIsDistributiveR l (inverse l) r) step1
-        step3 = cong {f = ((inverse (l <.> r)) <+>)} step2
-        step4 = replace {P = \x => inverse (l <.> r) <+> (l <.> r <+> inverse l <.> r) = x} (monoidNeutralIsNeutralL (inverse (l <.> r))) step3
-        step5 = replace {P = \x => x = inverse (l <.> r)} (semigroupOpIsAssociative (inverse (l <.> r)) (l <.> r) (inverse l <.> r)) step4
-        step6 = replace {P = \x => x <+> inverse l <.> r = inverse (l <.> r)} (groupInverseIsInverseR (l <.> r)) step5
-    in
-    replace {P = \x => x = inverse (l <.> r)} (monoidNeutralIsNeutralR (inverse l <.> r)) step6
-
-||| A proof that inverse operator can be extracted before multiplication
+  let
+    il = inverse l
+    lxr = l <.> r
+    ilxr = il <.> r
+    i_lxr = inverse lxr
+      in
+  rewrite sym $ monoidNeutralIsNeutralR ilxr in
+    rewrite sym $ groupInverseIsInverseR lxr in
+      rewrite sym $ semigroupOpIsAssociative i_lxr lxr ilxr in
+  rewrite sym $ ringOpIsDistributiveR l il r in
+    rewrite groupInverseIsInverseL l in
+  rewrite multNeutralAbsorbingL r in
+    monoidNeutralIsNeutralL i_lxr
+
+||| Inverse operator can be extracted before multiplication.
 ||| x(-y) = -(xy)
-multInverseInversesR : VerifiedRingWithUnity t => (l, r : t) -> l <.> inverse r = inverse (l <.> r)
+multInverseInversesR : VerifiedRing t => (l, r : t) ->
+  l <.> inverse r = inverse (l <.> r)
 multInverseInversesR l r =
-    let step1 = replace {P = \x => l <.> x = neutral} (sym $ groupInverseIsInverseL r) (multNeutralAbsorbingR l)
-        step2 = replace {P = \x => x = neutral} (ringOpIsDistributiveL l r (inverse r)) step1
-        step3 = cong {f = ((inverse (l <.> r)) <+>)} step2
-        step4 = replace {P = \x => inverse (l <.> r) <+> (l <.> r <+> l <.> inverse r) = x} (monoidNeutralIsNeutralL (inverse (l <.> r))) step3
-        step5 = replace {P = \x => x = inverse (l <.> r)} (semigroupOpIsAssociative (inverse (l <.> r)) (l <.> r) (l <.> inverse r)) step4
-        step6 = replace {P = \x => x <+> l <.> inverse r = inverse (l <.> r)} (groupInverseIsInverseR (l <.> r)) step5
-    in
-    replace {P = \x => x = inverse (l <.> r)} (monoidNeutralIsNeutralR (l <.> inverse r)) step6
-
-||| A proof that multiplication of inverses is the same as multiplication of original
-||| elements. (-x)(-y) = xy
-multNegativeByNegativeIsPositive : VerifiedRingWithUnity t => (l, r : t) -> inverse l <.> inverse r = l <.> r
+  let
+    ir = inverse r
+    lxr = l <.> r
+    lxir = l <.> ir
+    ilxr = inverse lxr
+      in
+  rewrite sym $ monoidNeutralIsNeutralL lxir in
+    rewrite sym $ groupInverseIsInverseL lxr in
+      rewrite semigroupOpIsAssociative lxir lxr ilxr in
+  rewrite sym $ ringOpIsDistributiveL l ir r in
+    rewrite groupInverseIsInverseR r in
+  rewrite multNeutralAbsorbingR l in
+    monoidNeutralIsNeutralR ilxr
+
+||| Multiplication of inverses is the same as multiplication of
+||| original elements.
+||| (-x)(-y) = xy
+multNegativeByNegativeIsPositive : VerifiedRing t => (l, r : t) ->
+  inverse l <.> inverse r = l <.> r
 multNegativeByNegativeIsPositive l r =
     rewrite multInverseInversesR (inverse l) r in
     rewrite sym $ multInverseInversesL (inverse l) r in
     rewrite inverseSquaredIsIdentity l in
     Refl
+
+inverseOfUnityR : VerifiedRingWithUnity t => (x : t) ->
+  inverse Alg.unity <.> x = inverse x
+inverseOfUnityR x =
+  rewrite multInverseInversesL Alg.unity x in
+    rewrite ringWithUnityIsUnityR x in
+      Refl
+
+inverseOfUnityL : VerifiedRingWithUnity t => (x : t) ->
+  x <.> inverse Alg.unity = inverse x
+inverseOfUnityL x =
+  rewrite multInverseInversesR x Alg.unity in
+    rewrite ringWithUnityIsUnityL x in
+      Refl
diff --git a/libs/contrib/Data/Bool/Algebra.idr b/libs/contrib/Data/Bool/Algebra.idr
new file mode 100644
index 000000000..069b2e7da
--- /dev/null
+++ b/libs/contrib/Data/Bool/Algebra.idr
@@ -0,0 +1,98 @@
+module Data.Bool.Algebra
+
+import Control.Algebra
+import Interfaces.Verified
+
+%access public export
+%default total
+
+-- && is Bool -> Lazy Bool -> Bool,
+-- but Bool -> Bool -> Bool is required
+and : Bool -> Bool -> Bool
+and True True = True
+and _ _ = False
+
+xor : Bool -> Bool -> Bool
+xor True True = False
+xor False False = False
+xor _ _ = True
+
+[PlusBoolSemi] Semigroup Bool where
+  (<+>) = xor
+
+[PlusBoolSemiV] VerifiedSemigroup Bool using PlusBoolSemi where
+  semigroupOpIsAssociative True True True = Refl
+  semigroupOpIsAssociative True True False = Refl
+  semigroupOpIsAssociative True False True = Refl
+  semigroupOpIsAssociative True False False = Refl
+  semigroupOpIsAssociative False True True = Refl
+  semigroupOpIsAssociative False False True = Refl
+  semigroupOpIsAssociative False True False = Refl
+  semigroupOpIsAssociative False False False = Refl
+
+[PlusBoolMonoid] Monoid Bool using PlusBoolSemi where
+  neutral = False
+
+[PlusBoolMonoidV] VerifiedMonoid Bool using PlusBoolSemiV, PlusBoolMonoid where
+  monoidNeutralIsNeutralL True = Refl
+  monoidNeutralIsNeutralL False = Refl
+
+  monoidNeutralIsNeutralR True = Refl
+  monoidNeutralIsNeutralR False = Refl
+
+[PlusBoolGroup] Group Bool using PlusBoolMonoid where
+  -- Each Bool is its own additive inverse.
+  inverse = id
+
+[PlusBoolGroupV] VerifiedGroup Bool using PlusBoolMonoidV, PlusBoolGroup where
+  groupInverseIsInverseR True = Refl
+  groupInverseIsInverseR False = Refl
+
+[PlusBoolAbel] AbelianGroup Bool using PlusBoolGroup where
+
+[PlusBoolAbelV] VerifiedAbelianGroup Bool using PlusBoolGroupV, PlusBoolAbel where
+  abelianGroupOpIsCommutative True True = Refl
+  abelianGroupOpIsCommutative True False = Refl
+  abelianGroupOpIsCommutative False True = Refl
+  abelianGroupOpIsCommutative False False = Refl
+
+[RingBool] Ring Bool using PlusBoolAbel where
+  (<.>) = and
+
+[RingBoolV] VerifiedRing Bool using RingBool, PlusBoolAbelV where
+  ringOpIsAssociative True True True = Refl
+  ringOpIsAssociative True True False = Refl
+  ringOpIsAssociative True False True = Refl
+  ringOpIsAssociative True False False = Refl
+  ringOpIsAssociative False True True = Refl
+  ringOpIsAssociative False False True = Refl
+  ringOpIsAssociative False True False = Refl
+  ringOpIsAssociative False False False = Refl
+
+  ringOpIsDistributiveL True True True = Refl
+  ringOpIsDistributiveL True True False = Refl
+  ringOpIsDistributiveL True False True = Refl
+  ringOpIsDistributiveL True False False = Refl
+  ringOpIsDistributiveL False True True = Refl
+  ringOpIsDistributiveL False False True = Refl
+  ringOpIsDistributiveL False True False = Refl
+  ringOpIsDistributiveL False False False = Refl
+
+  ringOpIsDistributiveR True True True = Refl
+  ringOpIsDistributiveR True True False = Refl
+  ringOpIsDistributiveR True False True = Refl
+  ringOpIsDistributiveR True False False = Refl
+  ringOpIsDistributiveR False True True = Refl
+  ringOpIsDistributiveR False False True = Refl
+  ringOpIsDistributiveR False True False = Refl
+  ringOpIsDistributiveR False False False = Refl
+
+[RingUnBool] RingWithUnity Bool using RingBool where
+  unity = True
+
+VerifiedRingWithUnity Bool using RingUnBool, RingBoolV where
+  ringWithUnityIsUnityL True = Refl
+  ringWithUnityIsUnityL False = Refl
+
+  ringWithUnityIsUnityR True = Refl
+  ringWithUnityIsUnityR False = Refl
diff --git a/libs/contrib/Data/Combinators.idr b/libs/contrib/Data/Combinators.idr
index 28d2805b7..887d99b44 100644
--- a/libs/contrib/Data/Combinators.idr
+++ b/libs/contrib/Data/Combinators.idr
@@ -26,13 +26,13 @@ infixl 9 ...
 (...) = (.) . (.)
 
 ||| Warbler, as named in "To Mock a Mockingbird".
-||| See http://code.jsoftware.com/wiki/Vocabulary/tilde
+||| See https://code.jsoftware.com/wiki/Vocabulary/tilde
 ||| Equivalent to `join` on the Reader monad (`(->) e` in Haskell)
 reflex : (a -> a -> b) -> (a -> b)
 reflex f x = f x x
 
 ||| Phoenix, according to Data.Aviary.
-||| See http://code.jsoftware.com/wiki/Vocabulary/fork.
+||| See https://code.jsoftware.com/wiki/Vocabulary/fork.
 ||| Equivalent to `liftA2` on the Reader monad (`(->) e` in Haskell)
 fork2 : (b -> c -> d) -> (a -> b) -> (a -> c) -> (a -> d)
 fork2 f g h x = f (g x) (h x)
diff --git a/libs/contrib/Data/List/Extra.idr b/libs/contrib/Data/List/Extra.idr
deleted file mode 100644
index 0c9e30eb8..000000000
--- a/libs/contrib/Data/List/Extra.idr
+++ /dev/null
@@ -1,46 +0,0 @@
-module Data.List.Extra
-
-%default total
-%access export
-
-||| The final segment of the accumulator is the final segment of the result.
-reverseOntoAcc : (xs, ys, zs : List a) ->
-  reverseOnto (ys ++ zs) xs = (reverseOnto ys xs) ++ zs
-reverseOntoAcc [] _ _ = Refl
-reverseOntoAcc (x :: xs) (ys) (zs) = reverseOntoAcc xs (x :: ys) zs
-
-||| Serves as a specification for reverseOnto.
-reverseOntoSpec : (xs, ys : List a) -> reverseOnto xs ys = reverse ys ++ xs
-reverseOntoSpec xs ys = reverseOntoAcc ys [] xs
-
-||| The reverse of an empty list is an empty list.  Together with reverseCons,
-||| serves as a specification for reverse.
-reverseNil : reverse [] = []
-reverseNil = Refl
-
-||| The reverse of a cons is the reverse of the tail followed by the head.
-||| Together with reverseNil serves as a specification for reverse.
-reverseCons : (x : a) -> (xs : List a) -> reverse (x::xs) = reverse xs ++ [x]
-reverseCons x xs = reverseOntoSpec [x] xs
-
-||| Reversing an append is appending reversals backwards.
-reverseAppend : (xs, ys : List a) ->
-  reverse (xs ++ ys) = reverse ys ++ reverse xs
-reverseAppend [] ys = sym (appendNilRightNeutral (reverse ys))
-reverseAppend (x :: xs) ys =
-  rewrite reverseCons x (xs ++ ys) in
-    rewrite reverseAppend xs ys in
-      rewrite reverseCons x xs in
-        sym $ appendAssociative (reverse ys) (reverse xs) [x]
-
-||| Reversing a singleton list is a no-op.
-reverseSingletonId : (x : a) -> reverse [x] = [x]
-reverseSingletonId _ = Refl
-
-||| Reversing a reverse gives the original.
-reverseReverseId : (xs : List a) -> reverse (reverse xs) = xs
-reverseReverseId [] = Refl
-reverseReverseId (x :: xs) =
-  rewrite reverseCons x xs in
-    rewrite reverseAppend (reverse xs) [x] in
-      cong $ reverseReverseId xs
diff --git a/libs/contrib/Data/List/Reverse.idr b/libs/contrib/Data/List/Reverse.idr
new file mode 100644
index 000000000..1df065ec3
--- /dev/null
+++ b/libs/contrib/Data/List/Reverse.idr
@@ -0,0 +1,99 @@
+||| Properties of the reverse function.
+module Data.List.Reverse
+
+%default total
+%access export
+
+||| The final segment of the accumulator is the final segment of the result.
+reverseOntoAcc : (xs, ys, zs : List a) ->
+  reverseOnto (ys ++ zs) xs = (reverseOnto ys xs) ++ zs
+reverseOntoAcc [] _ _ = Refl
+reverseOntoAcc (x :: xs) (ys) (zs) = reverseOntoAcc xs (x :: ys) zs
+
+||| Serves as a specification for reverseOnto.
+reverseOntoSpec : (xs, ys : List a) -> reverseOnto xs ys = reverse ys ++ xs
+reverseOntoSpec xs ys = reverseOntoAcc ys [] xs
+
+||| The reverse of an empty list is an empty list.  Together with reverseCons,
+||| serves as a specification for reverse.
+reverseNil : reverse [] = []
+reverseNil = Refl
+
+||| The reverse of a cons is the reverse of the tail followed by the head.
+||| Together with reverseNil serves as a specification for reverse.
+reverseCons : (x : a) -> (xs : List a) -> reverse (x::xs) = reverse xs ++ [x]
+reverseCons x xs = reverseOntoSpec [x] xs
+
+||| Reversing an append is appending reversals backwards.
+reverseAppend : (xs, ys : List a) ->
+  reverse (xs ++ ys) = reverse ys ++ reverse xs
+reverseAppend [] ys = sym (appendNilRightNeutral (reverse ys))
+reverseAppend (x :: xs) ys =
+  rewrite reverseCons x (xs ++ ys) in
+    rewrite reverseAppend xs ys in
+      rewrite reverseCons x xs in
+        sym $ appendAssociative (reverse ys) (reverse xs) [x]
+
+||| A recursive definition of reverse.
+reverseRec : List a -> List a
+reverseRec [] = []
+reverseRec (x :: xs) = reverseRec xs ++ [x]
+
+||| The iterative and recursive defintions of reverse are the same.
+reverseEquiv : (xs : List a) -> reverseRec xs = reverse xs
+reverseEquiv [] = Refl
+reverseEquiv (x :: xs) =
+  rewrite reverseEquiv xs in
+    rewrite reverseAppend [x] xs in
+      Refl
+
+||| Reversing a singleton list is a no-op.
+reverseSingletonId : (x : a) -> reverse [x] = [x]
+reverseSingletonId _ = Refl
+
+||| Reversing a reverse gives the original.
+reverseReverseId : (xs : List a) -> reverse (reverse xs) = xs
+reverseReverseId [] = Refl
+reverseReverseId (x :: xs) =
+  rewrite reverseCons x xs in
+    rewrite reverseAppend (reverse xs) [x] in
+      cong $ reverseReverseId xs
+
+||| Reversing onto preserves list length.
+reverseOntoLength : (xs, acc : List a) ->
+  length $ reverseOnto acc xs = length acc + length xs
+reverseOntoLength [] acc = rewrite plusZeroRightNeutral (length acc) in Refl
+reverseOntoLength (x :: xs) acc =
+  rewrite reverseOntoLength xs (x :: acc) in
+    plusSuccRightSucc (length acc) (length xs)
+
+||| Reversing preserves list length.
+reverseLength : (xs : List a) -> length $ reverse xs = length xs
+reverseLength xs = reverseOntoLength xs []
+
+||| Equal reversed lists are equal.
+reverseEqual : (xs, ys : List a) -> reverse xs = reverse ys -> xs = ys
+reverseEqual xs ys prf =
+  rewrite sym $ reverseReverseId xs in
+    rewrite prf in
+      reverseReverseId ys
+
+||| Do geese see God?
+data Palindrome : (xs : List a) -> Type where
+  Empty : Palindrome []
+  Single : Palindrome [_]
+  Multi : Palindrome xs -> Palindrome $ [x] ++ xs ++ [x]
+
+||| A Palindrome reversed is itself.
+palindromeReverse : (xs : List a) -> Palindrome xs -> reverse xs = xs
+palindromeReverse [] Empty = Refl
+palindromeReverse [_] Single = Refl
+palindromeReverse ([x] ++ ys ++ [x]) (Multi pf) =
+  rewrite reverseAppend ([x] ++ ys) [x] in
+    rewrite reverseAppend [x] ys in
+      rewrite palindromeReverse ys pf in
+        Refl
+
+||| Only Palindromes are equal to their own reverse.
+postulate  -- This is a tough one. Any takers?
+reversePalindrome : (xs : List a) -> reverse xs = xs -> Palindrome xs
diff --git a/libs/contrib/Data/Monoid.idr b/libs/contrib/Data/Monoid.idr
index 0adb1e790..f3ee5224c 100644
--- a/libs/contrib/Data/Monoid.idr
+++ b/libs/contrib/Data/Monoid.idr
@@ -8,18 +8,6 @@ module Data.Monoid
 -- TODO: These instances exist, but can't be named the same.
 -- Decide on names for these
 
--- [all] Semigroup Bool where
---   a <+> b = a && b
---
--- [all] Monoid Bool where
---   neutral = True
---
--- [any] Semigroup Bool where
---   a <+> b = a || b
---
--- [any] Monoid Bool where
---   neutral = False
-
 Semigroup () where
   (<+>) _ _ = ()
 
diff --git a/libs/contrib/Data/Nat/Ack.idr b/libs/contrib/Data/Nat/Ack.idr
new file mode 100644
index 000000000..54ad7b790
--- /dev/null
+++ b/libs/contrib/Data/Nat/Ack.idr
@@ -0,0 +1,60 @@
+||| Properties of the Ackermann function.
+module Data.Nat.Ackermann
+
+%access public export
+
+%default total
+
+-- Primitive recursive functions are functions that can be calculated
+-- by programs that don't use unbounded loops. Almost all common
+-- mathematical functions are primitive recursive.
+
+-- Uncomputable functions are functions that can't be calculated by
+-- any programs at all. One example is the Busy Beaver function:
+--   BB(k) = the maximum number of steps that can be executed by a
+--           halting Turing machine with k states.
+-- The values of the Busy Beaver function are unimaginably large for
+-- any but the smallest inputs.
+
+-- The Ackermann function is the most well-known example of a total
+-- computable function that is not primitive recursive, i.e. a general
+-- recursive function. It grows strictly faster than any primitive
+-- recursive function, but also strictly slower than a function like
+-- the Busy Beaver.
+
+-- There are many variations of the Ackermann function. Here is one
+-- common definition
+-- (see https://sites.google.com/site/pointlesslargenumberstuff/home/2/ackermann)
+-- that uses nested recursion:
+
+ackRec : Nat -> Nat -> Nat
+-- Base rule
+ackRec Z m = S m
+-- Prime rule
+ackRec (S k) Z = ackRec k 1
+-- Catastrophic rule
+ackRec (S k) (S j) = ackRec k $ ackRec (S k) j
+
+-- The so-called "base rule" and "prime rule" work together to ensure
+-- termination. Happily, the Idris totality checker has no issues.
+
+-- An unusual "repeating" defintion of the function is given in the
+-- book The Little Typer:
+
+ackRep : Nat -> Nat -> Nat
+ackRep Z = (+) 1
+ackRep (S k) = repeat (ackRep k)
+  where
+    repeat : (Nat -> Nat) -> Nat -> Nat
+    repeat f Z = f 1
+    repeat f (S k) = f (repeat f k)
+
+-- These two definitions don't look like they define the same
+-- function, but they do:
+
+ackRepRec : (n, m : Nat) -> ackRep n m = ackRec n m
+ackRepRec Z _ = Refl
+ackRepRec (S k) Z = ackRepRec k 1
+ackRepRec (S k) (S j) =
+  rewrite sym $ ackRepRec (S k) j in
+    ackRepRec k $ ackRep (S k) j
diff --git a/libs/contrib/Data/Nat/Fact.idr b/libs/contrib/Data/Nat/Fact.idr
new file mode 100644
index 000000000..f3b5e3be7
--- /dev/null
+++ b/libs/contrib/Data/Nat/Fact.idr
@@ -0,0 +1,56 @@
+||| Properties of factorial functions.
+module Data.Nat.Fact
+
+%access public export
+
+%default total
+
+||| Recursive definition of factorial.
+factRec : Nat -> Nat
+factRec Z = 1
+factRec (S k) = (S k) * factRec k
+
+||| Tail-recursive accumulator for factItr.
+factAcc : Nat -> Nat -> Nat
+factAcc Z acc = acc
+factAcc (S k) acc = factAcc k $ (S k) * acc
+
+||| Iterative definition of factorial.
+factItr : Nat -> Nat
+factItr n = factAcc n 1
+
+----------------------------------------
+
+||| Multiplicand-shuffling lemma.
+multShuffle : (a, b, c : Nat) -> a * (b * c) = b * (a * c)
+multShuffle a b c =
+  rewrite multAssociative a b c in
+    rewrite multCommutative a b in
+      sym $ multAssociative b a c
+
+||| Multiplication of the accumulator.
+factAccMult : (a, b, c : Nat) ->
+  a * factAcc b c = factAcc b (a * c)
+factAccMult _ Z _ = Refl
+factAccMult a (S k) c =
+  rewrite factAccMult a k (S k * c) in
+    rewrite multShuffle a (S k) c in
+      Refl
+
+||| Addition of accumulators.
+factAccPlus : (a, b, c : Nat) ->
+  factAcc a b + factAcc a c = factAcc a (b + c)
+factAccPlus Z _ _ = Refl
+factAccPlus (S k) b c =
+  rewrite factAccPlus k (S k * b) (S k * c) in
+    rewrite sym $ multDistributesOverPlusRight (S k) b c in
+      Refl
+
+||| The recursive and iterative definitions are the equivalent.
+factRecItr : (n : Nat) -> factRec n = factItr n
+factRecItr Z = Refl
+factRecItr (S k) =
+  rewrite factRecItr k in
+    rewrite factAccMult k k 1 in
+      rewrite multOneRightNeutral k in
+        factAccPlus k 1 k
diff --git a/libs/contrib/Data/Nat/Parity.idr b/libs/contrib/Data/Nat/Parity.idr
index 4523e0a5e..819fc00f7 100644
--- a/libs/contrib/Data/Nat/Parity.idr
+++ b/libs/contrib/Data/Nat/Parity.idr
@@ -2,18 +2,9 @@ module Data.Nat.Parity
 
 %access public export
 
---------------------------------------------------------------------------------
--- Parity
---------------------------------------------------------------------------------
+----------------------------------------
 
-mutual
-  even : Nat -> Bool
-  even Z = True
-  even (S k) = odd k
-
-  odd : Nat -> Bool
-  odd Z = False
-  odd (S k) = even k
+-- Type-level, constructive definitions of parity.
 
 ||| A nat is Even when it is twice some other nat.
 Even : Nat -> Type
@@ -23,6 +14,8 @@ Even n = (half : Nat ** n = half * 2)
 Odd : Nat -> Type
 Odd n = (haf : Nat ** n = S $ haf * 2)
 
+----------------------------------------
+
 ||| Two more than an Even is Even.
 add2Even : Even n -> Even (2 + n)
 add2Even (half ** pf) = (S half ** cong {f = (+) 2} pf)
@@ -52,20 +45,73 @@ succDoublePredPred {k = S _} prf = cong {f = Nat.pred} prf
 predEvenOdd : Even (S n) -> Odd n
 predEvenOdd (half ** pf) = (pred half ** succDoublePredPred pf)
 
+----------------------------------------
+
+-- Boolean definitions of parity.
+
+mutual
+  even : Nat -> Bool
+  even Z = True
+  even (S k) = odd k
+
+  odd : Nat -> Bool
+  odd Z = False
+  odd (S k) = even k
+
+----------------------------------------
+
+-- The boolean and type-level definitions are equivalent in the sense
+-- that a proof of one can be gotten from a proof of the other.
+
+mutual
+  ||| Evens are even.
+  evenEven : Even n -> even n = True
+  evenEven {n = Z} _ = Refl
+  evenEven {n = S _} pf = oddOdd $ predEvenOdd pf
+
+  ||| Odds are odd.
+  oddOdd : Odd n -> odd n = True
+  oddOdd {n = Z} (_ ** pf) = absurd pf
+  oddOdd {n = S _} pf = evenEven $ predOddEven pf
+
+mutual
+  ||| If it's even, it's Even.
+  evenEvenConverse : even n = True -> Even n
+  evenEvenConverse {n = Z} prf = (0 ** Refl)
+  evenEvenConverse {n = S k} prf =
+    let (haf ** pf) = oddOddConverse prf in
+      (S haf ** cong pf)
+
+  ||| If it's odd, it's Odd
+  oddOddConverse : odd n = True -> Odd n
+  oddOddConverse {n = Z} prf = absurd prf
+  oddOddConverse {n = S k} prf =
+    let (half ** pf) = evenEvenConverse prf in
+      (half ** cong pf)
+
+----------------------------------------
+
+||| Every nat is either even or odd.
+evenorodd : (n : Nat) -> Either (even n = True) (odd n = True)
+evenorodd Z = Left Refl
+evenorodd (S k) = case evenorodd k of
+  Left l => Right l
+  Right r => Left r
+
 ||| Every nat is either Even or Odd.
 evenOrOdd : (n : Nat) -> Either (Even n) (Odd n)
-evenOrOdd Z = Left (0 ** Refl)
-evenOrOdd (S k) = case evenOrOdd k of
-  Left (half ** pf) => Right (half ** cong {f = S} pf)
-  Right (haf ** pf) => Left (S haf ** cong {f = S} pf)
+evenOrOdd n = case evenorodd n of
+  Left e => Left $ evenEvenConverse e
+  Right o => Right $ oddOddConverse o
+
+||| No nat is both even and odd.
+notevenandodd : even n = True -> odd n = True -> Void
+notevenandodd {n = Z} en on = absurd on
+notevenandodd {n = S _} en on = notevenandodd on en
 
 ||| No nat is both Even and Odd.
 notEvenAndOdd : Even n -> Odd n -> Void
-notEvenAndOdd {n = Z} _ (_ ** odd) = absurd odd
-notEvenAndOdd {n = (S k)} (half ** even) (haf ** odd) =
-  notEvenAndOdd {n = k}
-   (haf ** cong {f = Nat.pred} odd)
-   (pred half ** succDoublePredPred even)
+notEvenAndOdd en on = notevenandodd (evenEven en) (oddOdd on)
 
 ||| Evenness is decidable.
 evenDec : (n : Nat) -> Dec $ Even n
@@ -79,13 +125,93 @@ oddDec n = case evenOrOdd n of
   Left even => No $ notEvenAndOdd even
   Right odd => Yes odd
 
-mutual
-  ||| Evens are even.
-  evenEven : Even n -> even n = True
-  evenEven {n = Z} _ = Refl
-  evenEven {n = S _} pf = oddOdd $ predEvenOdd pf
+----------------------------------------
+
+||| An Odd is the successor of an Even.
+oddSuccEven : Odd n -> (m : Nat ** (n = S m, Even m))
+oddSuccEven (haf ** pf) = (haf * 2 ** (pf, (haf ** Refl)))
+
+||| Even plus Even is Even.
+evenPlusEven : Even j -> Even k -> Even (j + k)
+evenPlusEven (half_j ** pf_j) (half_k ** pf_k) =
+  (half_j + half_k **
+    rewrite pf_j in
+      rewrite pf_k in
+        sym $ multDistributesOverPlusLeft half_j half_k 2)
+
+||| Odd plus Even is Odd.
+oddPlusEven : Odd j -> Even k -> Odd (j + k)
+oddPlusEven oj ek =
+  let
+    (i ** (ipj, ei)) = oddSuccEven oj
+    (half_ik ** eik) = evenPlusEven ei ek
+      in
+  (half_ik **
+    rewrite ipj in
+      cong {f = S} eik)
+
+||| Even plus Odd is Odd.
+evenPlusOdd : Even j -> Odd k -> Odd (j + k)
+evenPlusOdd {j} {k} ej ok = rewrite plusCommutative j k in oddPlusEven ok ej
+
+||| Odd plus Odd is Even.
+oddPlusOdd : Odd j -> Odd k -> Even (j + k)
+oddPlusOdd oj ok =
+  let
+    (i ** (ipj, ei)) = oddSuccEven oj
+    (haf_ik ** oik) = evenPlusOdd ei ok
+      in
+  (S haf_ik **
+    rewrite ipj in
+      rewrite oik in
+        Refl)
 
-  ||| Odds are odd.
-  oddOdd : Odd n -> odd n = True
-  oddOdd {n = Z} (_ ** pf) = absurd pf
-  oddOdd {n = S _} pf = evenEven $ predOddEven pf
+||| A helper fact.
+multShuffle : (a, b, c : Nat) ->
+  (a * c) * (b * c) = ((a * b) * c) * c
+multShuffle a b c =
+  rewrite multAssociative (a * c) b c in
+    rewrite multCommutative (a * c) b in
+      rewrite multAssociative b a c in
+        rewrite multCommutative b a in
+          Refl
+
+||| Even times Even is Even.
+evenMultEven : Even j -> Even k -> Even (j * k)
+evenMultEven (half_j ** pf_j) (half_k ** pf_k) =
+  (half_j * half_k * 2 **
+    rewrite pf_j in
+      rewrite pf_k in
+        multShuffle half_j half_k 2)
+
+||| Odd times Even is Even.
+oddMultEven : Odd j -> Even k -> Even (j * k)
+oddMultEven oj (half_k ** pf_k) =
+  let
+    (i ** (ipj, ei)) = oddSuccEven oj
+    (half_ik ** oik) = evenMultEven ei (half_k ** pf_k)
+      in
+  (half_k + half_ik **
+    rewrite multDistributesOverPlusLeft half_k half_ik 2 in
+      rewrite ipj in
+        rewrite oik in
+          rewrite pf_k in
+            Refl)
+
+||| Even times Odd is Even.
+evenMultOdd : Even j -> Odd k -> Even (j * k)
+evenMultOdd {j} {k} ej ok = rewrite multCommutative j k in oddMultEven ok ej
+
+||| Odd times Odd is Odd.
+oddMultOdd : Odd j -> Odd k -> Odd (j * k)
+oddMultOdd oj (haf_k ** pf_k) =
+  let
+    (i ** (ipj, ei)) = oddSuccEven oj
+    (half_ik ** eik) = evenMultOdd ei (haf_k ** pf_k)
+      in
+  (haf_k + half_ik **
+    rewrite multDistributesOverPlusLeft haf_k half_ik 2 in
+      rewrite ipj in
+        rewrite eik in
+          rewrite pf_k in
+            Refl)
diff --git a/libs/contrib/Data/SortedMap.idr b/libs/contrib/Data/SortedMap.idr
index df04b4a0e..3d3af2846 100644
--- a/libs/contrib/Data/SortedMap.idr
+++ b/libs/contrib/Data/SortedMap.idr
@@ -201,6 +201,10 @@ export
 empty : Ord k => SortedMap k v
 empty = Empty
 
+export
+singleton : Ord k => k -> v -> SortedMap k v
+singleton k v = M Z (Leaf k v)
+
 export
 lookup : k -> SortedMap k v -> Maybe v
 lookup _ Empty = Nothing
diff --git a/libs/contrib/Interfaces/Verified.idr b/libs/contrib/Interfaces/Verified.idr
index ed1d44157..f7abf3533 100644
--- a/libs/contrib/Interfaces/Verified.idr
+++ b/libs/contrib/Interfaces/Verified.idr
@@ -82,7 +82,7 @@ VerifiedApplicative (Either a) where
   applicativeHomomorphism x g = Refl
   applicativeInterchange x (Left y) = Refl
   applicativeInterchange x (Right y) = Refl
-  
+
 private
 foldrConcatEq : (g1 : List (a -> b)) -> (g2 : List (a -> b)) ->
                 (xs : List a) ->
@@ -276,14 +276,9 @@ implementation VerifiedMonoid (List a) where
   monoidNeutralIsNeutralR xs = Refl
 
 interface (VerifiedMonoid a, Group a) => VerifiedGroup a where
-  groupInverseIsInverseL : (l : a) -> l <+> inverse l = Algebra.neutral
   groupInverseIsInverseR : (r : a) -> inverse r <+> r = Algebra.neutral
 
 VerifiedGroup ZZ using PlusZZMonoidV where
-  groupInverseIsInverseL k = rewrite sym $ multCommutativeZ (NegS 0) k in
-                             rewrite multNegLeftZ 0 k in
-                             rewrite multOneLeftNeutralZ k in
-                             plusNegateInverseLZ k
   groupInverseIsInverseR k = rewrite sym $ multCommutativeZ (NegS 0) k in
                              rewrite multNegLeftZ 0 k in
                              rewrite multOneLeftNeutralZ k in
@@ -351,7 +346,7 @@ VerifiedBoundedJoinSemilattice Nat where
 
 VerifiedBoundedJoinSemilattice Bool where
   joinBottomIsIdentity = orFalseNeutral
-  
+
 interface (VerifiedMeetSemilattice a, BoundedMeetSemilattice a) => VerifiedBoundedMeetSemilattice a where
   meetTopIsIdentity : (x : a) -> meet x Lattice.top = x
 
diff --git a/libs/contrib/Language/JSON.idr b/libs/contrib/Language/JSON.idr
index 714b741a0..07c5687d7 100644
--- a/libs/contrib/Language/JSON.idr
+++ b/libs/contrib/Language/JSON.idr
@@ -1,4 +1,4 @@
-||| The JSON language, as described at http://json.org/
+||| The JSON language, as described at https://json.org/
 module Language.JSON
 
 import Language.JSON.Lexer
diff --git a/libs/contrib/Text/Literate.idr b/libs/contrib/Text/Literate.idr
index 9b80ff5c3..34e93a0d5 100644
--- a/libs/contrib/Text/Literate.idr
+++ b/libs/contrib/Text/Literate.idr
@@ -30,13 +30,13 @@ import Data.List.Views
 %default total
 
 untilEOL : Recognise False
-untilEOL = manyUntil (is '\n') any
+untilEOL = manyUntil newline any
 
 line : String -> Lexer
 line s = exact s <+> space <+> untilEOL
 
 block : String -> String -> Lexer
-block s e = exact s <+> manyUntil (exact e) any 
+block s e = surround (exact s <+> untilEOL) (exact e <+> untilEOL) any
 
 data Token = CodeBlock String String String
            | Any String
@@ -76,7 +76,7 @@ reduce (MkToken _ _ (CodeBlock l r src) :: rest) acc with (lines src) -- Strip t
   reduce (MkToken _ _ (CodeBlock l r src) :: rest) acc | (s :: ys) with (snocList ys)
     reduce (MkToken _ _ (CodeBlock l r src) :: rest) acc | (s :: []) | Empty = reduce rest acc -- 2
     reduce (MkToken _ _ (CodeBlock l r src) :: rest) acc | (s :: (srcs ++ [f])) | (Snoc rec) =
-        reduce rest (acc ++ "\n" ++ unlines srcs ++ "\n")
+        reduce rest (acc ++ unlines srcs)
 
 -- [ NOTE ] 1 & 2 shouldn't happen as code blocks are well formed i.e. have two deliminators.
 
@@ -101,7 +101,7 @@ record LiterateError where
 ||| + Bird Style
 |||
 |||```
-|||MkLitStyle Nil [">", "<"] Nil
+|||MkLitStyle Nil [">", "<"] [".lidr"]
 |||```
 |||
 ||| + Literate Haskell (for LaTeX)
@@ -120,6 +120,14 @@ record LiterateError where
 |||           ["org"]
 |||```
 |||
+||| + Common Mark
+|||
+|||```
+|||MkLitStyle [("```idris","```"), ("<!-- idris","--!>")]
+|||           Nil
+|||           [".md", ".idris.md"]
+|||```
+|||
 public export
 record LiterateStyle where
   constructor MkLitStyle
@@ -152,4 +160,11 @@ extractCode (MkLitStyle delims markers exts) str =
         (toks, (_,_,"")) => Right $ reduce toks ""
         (_, (l,c,i))     => Left (MkLitErr l c i)
 
+||| Synonym for `extractCode`.
+export
+unlit : (specification : LiterateStyle)
+     -> (litStr        : String)
+     -> Either LiterateError String
+unlit = extractCode
+
 -- --------------------------------------------------------------------- [ EOF ]
diff --git a/libs/contrib/contrib.ipkg b/libs/contrib/contrib.ipkg
index 414d2c6b2..1c29c26a0 100644
--- a/libs/contrib/contrib.ipkg
+++ b/libs/contrib/contrib.ipkg
@@ -30,6 +30,7 @@ modules = CFFI
         , Control.ST.File
 
         , Data.Bool.Extra
+        , Data.Bool.Algebra
         , Data.BoundedList
         , Data.Chain
         , Data.CoList
@@ -43,13 +44,16 @@ modules = CFFI
         , Data.Heap
         , Data.IOArray
         , Data.List.Zipper
-        , Data.List.Extra
+        , Data.List.Reverse
 
         , Data.Matrix
         , Data.Matrix.Algebraic
         , Data.Matrix.Numeric
 
         , Data.Nat
+        , Data.Nat.Ack
+        , Data.Nat.Fact
+        , Data.Nat.Fib
         , Data.Nat.Parity
         , Data.Nat.DivMod
         , Data.Nat.DivMod.IteratedSubtraction
diff --git a/libs/effects/Effect/File.idr b/libs/effects/Effect/File.idr
index 91e98e9e1..19f4fdff0 100644
--- a/libs/effects/Effect/File.idr
+++ b/libs/effects/Effect/File.idr
@@ -73,8 +73,8 @@ data FileHandle : (m : Mode) -> Type where
 -- ---------------------------------------------- [ Resource Type Construction ]
 
 ||| Calculates the type for the resource being computed over.  `Unit`
-||| to describe pre-and-post file handle acquisistion, and `FileHandle
-||| m` when a file handle has been aqcuired.
+||| to describe pre-and-post file handle acquisition, and `FileHandle
+||| m` when a file handle has been acquired.
 |||
 ||| @m The mode the file handle was generated under.
 ||| @ty The functions return type.
@@ -315,7 +315,7 @@ R = FileHandle Read
 W : Type
 W = FileHandle WriteTruncate
 
-||| A file can only be appeneded to.
+||| A file can only be appended to.
 A : Type
 A = FileHandle Append
 
@@ -324,7 +324,7 @@ RW : Type
 RW = FileHandle ReadWrite
 
 ||| A file opened for reading and writing and has been truncated to
-||| zero if it previsiouly existed.
+||| zero if it previously existed.
 RWPlus : Type
 RWPlus = FileHandle ReadWriteTruncate
 
diff --git a/libs/effects/Effect/Logging/Category.idr b/libs/effects/Effect/Logging/Category.idr
index ee7662f05..970cf97b6 100644
--- a/libs/effects/Effect/Logging/Category.idr
+++ b/libs/effects/Effect/Logging/Category.idr
@@ -130,7 +130,7 @@ initLogger l cs = call $ InitLogger l cs
 |||
 ||| @l The logging level.
 ||| @cs The logging categories.
-||| @m THe message to be logged.
+||| @m The message to be logged.
 log : (Show a, Eq a) => (l : LogLevel n)
                      -> (cs : List a)
                      -> (m : String)
@@ -141,7 +141,7 @@ log l cs msg = call $ Log l cs msg
 |||
 ||| @l The logging level.
 ||| @cs The logging categories.
-||| @m THe message to be logged.
+||| @m The message to be logged.
 logN : (Show a, Eq a) => (l : Nat)
                       -> {auto prf : LTE l 70}
                       -> (cs : List a)
diff --git a/libs/effects/Effect/Perf.idr b/libs/effects/Effect/Perf.idr
index 2b5a96e6c..d5ce8cfed 100644
--- a/libs/effects/Effect/Perf.idr
+++ b/libs/effects/Effect/Perf.idr
@@ -193,7 +193,7 @@ collectPMetrics b = call $ TurnOn b
 collectPMetricsAndShow : Eff () [PERF]
 collectPMetricsAndShow = call $ TurnOn True
 
-||| Return gatheres metrics
+||| Return gathered metrics
 getPerfMetrics : Eff PMetrics [PERF]
 getPerfMetrics = call $ GetMetrics
 
diff --git a/libs/prelude/IO.idr b/libs/prelude/IO.idr
index 292472e7d..824b2965c 100644
--- a/libs/prelude/IO.idr
+++ b/libs/prelude/IO.idr
@@ -80,7 +80,7 @@ foreign_prim f fname (FFun arg sc) env
 ||| Idris compiler backend in use. For the default C backend, see the
 ||| documentation for `FFI_C`.
 |||
-||| For more details, please consult [the Idris documentation](http://docs.idris-lang.org/en/latest/reference/ffi.html).
+||| For more details, please consult [the Idris documentation](https://idris.readthedocs.io/en/latest/reference/ffi.html).
 |||
 ||| @ f     an FFI descriptor, which is specific to the compiler backend.
 ||| @ fname the name of the foreign function
diff --git a/libs/prelude/Prelude/File.idr b/libs/prelude/Prelude/File.idr
index 47fc2ad10..b60d4a2c2 100644
--- a/libs/prelude/Prelude/File.idr
+++ b/libs/prelude/Prelude/File.idr
@@ -3,6 +3,7 @@ module Prelude.File
 import Builtins
 import Prelude.List
 import Prelude.Maybe
+import Prelude.Functor
 import Prelude.Monad
 import Prelude.Chars
 import Prelude.Strings
@@ -80,7 +81,7 @@ do_ferror h = foreign FFI_C "fileError" (Ptr -> IO Int) h
 export
 ferror : File -> IO Bool
 ferror (FHandle h) = do err <- do_ferror h
-                        pure (not (err == 0))
+                        pure (err /= 0)
 
 ||| Call the RTS's file opening function
 private
@@ -95,15 +96,13 @@ export
 fopen : (f : String) -> (m : String) -> IO (Either FileError File)
 fopen f m = do h <- do_fopen f m
                if !(nullPtr h)
-                  then do err <- getFileError
-                          pure (Left err)
+                  then Left <$> getFileError
                   else pure (Right (FHandle h))
 
 ||| Check whether a file handle is actually a null pointer
 export
 validFile : File -> IO Bool
-validFile (FHandle h) = do x <- nullPtr h
-                           pure (not x)
+validFile (FHandle h) = not <$> nullPtr h
 
 ||| Modes for opening files
 data Mode = Read | WriteTruncate | Append | ReadWrite | ReadWriteTruncate | ReadAppend
@@ -151,7 +150,8 @@ do_getFileAccessTime h =
 private
 do_getFileModifiedTime : Ptr -> IO Integer
 do_getFileModifiedTime h = 
-   do MkRaw i <- foreign FFI_C "fileModifiedTime" (Ptr -> IO (Raw Integer)) h
+   do vm <- getMyVM
+      MkRaw i <- foreign FFI_C "fileModifiedTime" (Ptr -> Ptr -> IO (Raw Integer)) vm h
       pure i
 
 private
@@ -169,17 +169,15 @@ fileSize : File -> IO (Either FileError Int)
 fileSize (FHandle h) 
     = do s <- do_getFileSize h
          if (s < 0)
-            then do err <- getFileError
-                    pure (Left err)
+            then Left <$> getFileError
             else pure (Right s)
 
 export
 fileModifiedTime : File -> IO (Either FileError Integer)
 fileModifiedTime (FHandle h)
     = do s <- do_getFileModifiedTime h
-         if (s < 0)
-            then do err <- getFileError
-                    pure (Left err)
+         if (s == -1)
+            then Left <$> getFileError
             else pure (Right s)
 
 export
@@ -187,8 +185,7 @@ fileAccessTime : File -> IO (Either FileError Integer)
 fileAccessTime (FHandle h)
     = do s <- do_getFileAccessTime h
          if (s < 0)
-            then do err <- getFileError
-                    pure (Left err)
+            then Left <$> getFileError
             else pure (Right s)
 
 export
@@ -196,11 +193,9 @@ fileStatusTime : File -> IO (Either FileError Integer)
 fileStatusTime (FHandle h)
     = do s <- do_getFileStatusTime h
          if (s < 0)
-            then do err <- getFileError
-                    pure (Left err)
+            then Left <$> getFileError
             else pure (Right s)
 
-
 private
 do_fread : Ptr -> IO' l String
 do_fread h = prim_fread h
@@ -264,8 +259,7 @@ do_fwrite h s = do res <- prim_fwrite h s
                       then do errno <- getErrno
                               if errno == 0
                                  then pure (Left FileWriteError)
-                                 else do err <- getFileError
-                                         pure (Left err)
+                                 else Left <$> getFileError
                       else pure (Right ())
 
 ||| Write a line to a file
@@ -287,7 +281,7 @@ do_feof h = foreign FFI_C "fileEOF" (Ptr -> IO Int) h
 export
 fEOF : File -> IO Bool
 fEOF (FHandle h) = do eof <- do_feof h
-                      pure (not (eof == 0))
+                      pure (eof /= 0)
 
 private
 do_fremove : String -> IO Int
@@ -317,7 +311,8 @@ readFile : (filepath : String) -> IO (Either FileError String)
 readFile fn = do Right h <- openFile fn Read
                     | Left err => pure (Left err)
                  Right max <- fileSize h
-                    | Left err => pure (Left err)
+                    | Left err => do closeFile h
+                                     pure (Left err)
                  sb <- newStringBuffer (max + 1)
                  c <- readFile' h max sb
                  closeFile h
@@ -340,8 +335,11 @@ export
 writeFile : (filepath : String) -> (contents : String) ->
             IO (Either FileError ())
 writeFile fn contents = do
-     Right h  <- openFile fn WriteTruncate | Left err => pure (Left err)
-     Right () <- fPutStr h contents        | Left err => pure (Left err)
+     Right h  <- openFile fn WriteTruncate 
+        | Left err => pure (Left err)
+     Right () <- fPutStr h contents        
+        | Left err => do closeFile h
+                         pure (Left err)
      closeFile h
      pure (Right ())
 
@@ -351,8 +349,7 @@ dirOpen : (d : String) -> IO (Either FileError Directory)
 dirOpen d
     = do dptr <- foreign FFI_C "idris_dirOpen" (String -> IO Ptr) d
          if !(nullPtr dptr)
-            then do err <- getFileError
-                    pure (Left err)
+            then Left <$> getFileError
             else pure (Right (DHandle dptr))
 
 export
@@ -363,7 +360,7 @@ export
 dirError : Directory -> IO Bool
 dirError (DHandle d)
     = do err <- foreign FFI_C "idris_dirError" (Ptr -> IO Int) d
-         pure (not (err == 0))
+         pure (err /= 0)
 
 export
 dirEntry : Directory -> IO (Either FileError String)
@@ -379,8 +376,7 @@ createDir d
     = do ok <- foreign FFI_C "idris_mkdir" (String -> IO Int) d
          if (ok == 0)
             then pure (Right ())
-            else do err <- getFileError
-                    pure (Left err)
+            else Left <$> getFileError
 
 export
 changeDir : String -> IO Bool
diff --git a/libs/prelude/Prelude/Nat.idr b/libs/prelude/Prelude/Nat.idr
index 029176b1d..26b6a36a3 100644
--- a/libs/prelude/Prelude/Nat.idr
+++ b/libs/prelude/Prelude/Nat.idr
@@ -512,19 +512,18 @@ plusLeftCancel (S left) right right' p =
 
 total plusRightCancel : (left : Nat) -> (left' : Nat) -> (right : Nat) ->
   (p : left + right = left' + right) -> left = left'
-plusRightCancel left left' Z         p = rewrite sym (plusZeroRightNeutral left) in
-                                         rewrite sym (plusZeroRightNeutral left') in
-                                                 p
-plusRightCancel left left' (S right) p =
-  plusRightCancel left left' right
-    (succInjective _ _ (rewrite plusSuccRightSucc left right in
-                        rewrite plusSuccRightSucc left' right in p))
+plusRightCancel left left' right p =
+  plusLeftCancel right left left' $
+    rewrite plusCommutative right left in
+      rewrite plusCommutative right left' in
+        p
 
 total plusLeftLeftRightZero : (left : Nat) -> (right : Nat) ->
   (p : left + right = left) -> right = Z
-plusLeftLeftRightZero Z        right p = p
-plusLeftLeftRightZero (S left) right p =
-  plusLeftLeftRightZero left right (succInjective _ _ p)
+plusLeftLeftRightZero left right p =
+  plusLeftCancel left right Z $
+    rewrite plusZeroRightNeutral left in
+      p
 
 -- Mult
 total multZeroLeftZero : (right : Nat) -> Z * right = Z
@@ -558,27 +557,21 @@ multCommutative (S left) right =
       rewrite multRightSuccPlus right left in
               Refl
 
-total multDistributesOverPlusRight : (left : Nat) -> (centre : Nat) -> (right : Nat) ->
-  left * (centre + right) = (left * centre) + (left * right)
-multDistributesOverPlusRight Z        centre right = Refl
-multDistributesOverPlusRight (S left) centre right =
-  let inductiveHypothesis = multDistributesOverPlusRight left centre right in
-    rewrite inductiveHypothesis in
-    rewrite plusAssociative (plus centre (mult left centre)) right (mult left right) in
-    rewrite sym (plusAssociative centre (mult left centre) right) in
-    rewrite plusCommutative (mult left centre) right in
-    rewrite plusAssociative centre right (mult left centre) in
-    rewrite plusAssociative (plus centre right) (mult left centre) (mult left right) in
-            Refl
-
 total multDistributesOverPlusLeft : (left : Nat) -> (centre : Nat) -> (right : Nat) ->
   (left + centre) * right = (left * right) + (centre * right)
-multDistributesOverPlusLeft Z        centre right = Refl
-multDistributesOverPlusLeft (S left) centre right =
-  let inductiveHypothesis = multDistributesOverPlusLeft left centre right in
-    rewrite inductiveHypothesis in
-    rewrite plusAssociative right (mult left right) (mult centre right) in
-            Refl
+multDistributesOverPlusLeft Z centre right = Refl
+multDistributesOverPlusLeft (S k) centre right =
+  rewrite multDistributesOverPlusLeft k centre right in
+    rewrite plusAssociative right (k * right) (centre * right) in
+      Refl
+
+total multDistributesOverPlusRight : (left : Nat) -> (centre : Nat) -> (right : Nat) ->
+  left * (centre + right) = (left * centre) + (left * right)
+multDistributesOverPlusRight left centre right =
+  rewrite multCommutative left (centre + right) in
+    rewrite multCommutative left centre in
+      rewrite multCommutative left right in
+  multDistributesOverPlusLeft centre right left
 
 total multAssociative : (left : Nat) -> (centre : Nat) -> (right : Nat) ->
   left * (centre * right) = (left * centre) * right
@@ -590,18 +583,10 @@ multAssociative (S left) centre right =
             Refl
 
 total multOneLeftNeutral : (right : Nat) -> 1 * right = right
-multOneLeftNeutral Z         = Refl
-multOneLeftNeutral (S right) =
-  let inductiveHypothesis = multOneLeftNeutral right in
-    rewrite inductiveHypothesis in
-            Refl
+multOneLeftNeutral right = plusZeroRightNeutral right
 
 total multOneRightNeutral : (left : Nat) -> left * 1 = left
-multOneRightNeutral Z        = Refl
-multOneRightNeutral (S left) =
-  let inductiveHypothesis = multOneRightNeutral left in
-    rewrite inductiveHypothesis in
-            Refl
+multOneRightNeutral left = rewrite multCommutative left 1 in multOneLeftNeutral left
 
 -- Minus
 total minusSuccSucc : (left : Nat) -> (right : Nat) ->
@@ -689,10 +674,7 @@ total powerZeroOne : (base : Nat) -> power base 0 = S Z
 powerZeroOne base = Refl
 
 total powerOneNeutral : (base : Nat) -> power base 1 = base
-powerOneNeutral Z        = Refl
-powerOneNeutral (S base) =
-  let inductiveHypothesis = powerOneNeutral base in
-    rewrite inductiveHypothesis in Refl
+powerOneNeutral base = rewrite multCommutative base 1 in multOneLeftNeutral base
 
 total powerOneSuccOne : (exp : Nat) -> power 1 exp = S Z
 powerOneSuccOne Z       = Refl
@@ -701,8 +683,7 @@ powerOneSuccOne (S exp) =
     rewrite inductiveHypothesis in Refl
 
 total powerSuccSuccMult : (base : Nat) -> power base 2 = mult base base
-powerSuccSuccMult Z        = Refl
-powerSuccSuccMult (S base) = rewrite multOneRightNeutral base in Refl
+powerSuccSuccMult base = rewrite multOneRightNeutral base in Refl
 
 total powerPowerMultPower : (base : Nat) -> (exp : Nat) -> (exp' : Nat) ->
   power (power base exp) exp' = power base (exp * exp')
@@ -796,34 +777,24 @@ minimumIdempotent Z = Refl
 minimumIdempotent (S k) = cong (minimumIdempotent k)
 
 total minimumZeroZeroRight : (right : Nat) -> minimum 0 right = Z
-minimumZeroZeroRight Z = Refl
-minimumZeroZeroRight (S right) = minimumZeroZeroRight right
+minimumZeroZeroRight right = Refl
 
 total minimumZeroZeroLeft : (left : Nat) -> minimum left 0 = Z
-minimumZeroZeroLeft Z        = Refl
-minimumZeroZeroLeft (S left) = Refl
+minimumZeroZeroLeft left = rewrite minimumCommutative left 0 in Refl
 
 total minimumSuccSucc : (left : Nat) -> (right : Nat) ->
   minimum (S left) (S right) = S (minimum left right)
-minimumSuccSucc Z        Z         = Refl
-minimumSuccSucc (S left) Z         = Refl
-minimumSuccSucc Z        (S right) = Refl
-minimumSuccSucc (S left) (S right) = Refl
+minimumSuccSucc left right = Refl
 
 total maximumZeroNRight : (right : Nat) -> maximum Z right = right
-maximumZeroNRight Z         = Refl
-maximumZeroNRight (S right) = Refl
+maximumZeroNRight right = Refl
 
 total maximumZeroNLeft : (left : Nat) -> maximum left Z = left
-maximumZeroNLeft Z        = Refl
-maximumZeroNLeft (S left) = Refl
+maximumZeroNLeft left = rewrite maximumCommutative left Z in Refl
 
 total maximumSuccSucc : (left : Nat) -> (right : Nat) ->
   S (maximum left right) = maximum (S left) (S right)
-maximumSuccSucc Z        Z         = Refl
-maximumSuccSucc (S left) Z         = Refl
-maximumSuccSucc Z        (S right) = Refl
-maximumSuccSucc (S left) (S right) = Refl
+maximumSuccSucc left right = Refl
 
 total sucMaxL : (l : Nat) -> maximum (S l) l = (S l)
 sucMaxL Z = Refl
diff --git a/man/idris.1 b/man/idris.1
index e7fe456f8..55f63566b 100644
--- a/man/idris.1
+++ b/man/idris.1
@@ -113,7 +113,7 @@ should not necessarily be seen as production ready nor for industrial use.
 
 .SH SEE ALSO
 
-+ The IDRIS web site (http://idris-lang.org/
++ The IDRIS web site (https://idris-lang.org/
 
 +  The IRC channel #idris, on chat.freenode.net
 
diff --git a/rts/idris_bitstring.c b/rts/idris_bitstring.c
index d8f9ac6c2..8fc7f8cc5 100644
--- a/rts/idris_bitstring.c
+++ b/rts/idris_bitstring.c
@@ -1,5 +1,3 @@
-#include <assert.h>
-
 #include "idris_rts.h"
 
 VAL idris_b8const(VM *vm, uint8_t a) {
diff --git a/rts/idris_rts.c b/rts/idris_rts.c
index 7390c37dd..9b739ddf7 100644
--- a/rts/idris_rts.c
+++ b/rts/idris_rts.c
@@ -242,6 +242,13 @@ void* iallocate(VM * vm, size_t isize, int outerlock) {
             vm->heap.size += size;
         }
         idris_gc(vm);
+
+        // If there's still not enough room, grow the heap and try again
+        if (vm->heap.next + size >= vm->heap.end) {
+            vm->heap.size += size+vm->heap.growth;
+            idris_gc(vm);
+        }
+
 #ifdef HAS_PTHREAD
         if (lock) { // not message passing
            pthread_mutex_unlock(&vm->alloc_lock);
@@ -1151,16 +1158,6 @@ void idris_disableBuffering(void) {
   setvbuf(stdout, NULL, _IONBF, 0);
 }
 
-#ifndef SEL4
-int idris_usleep(int usec) {
-    struct timespec t;
-    t.tv_sec = usec / 1000000;
-    t.tv_nsec = (usec % 1000000) * 1000;
-
-    return nanosleep(&t, NULL);
-}
-#endif // SEL4
-
 void stackOverflow(void) {
   fprintf(stderr, "Stack overflow");
   exit(-1);
diff --git a/rts/idris_rts.h b/rts/idris_rts.h
index 9c51636cb..8ad990a5e 100644
--- a/rts/idris_rts.h
+++ b/rts/idris_rts.h
@@ -291,6 +291,9 @@ typedef intptr_t i_int;
     if (vm->valstack_top+(x) > vm->stack_max) { stackOverflow(); } \
     else { memset(vm->valstack_top, 0, (x)*sizeof(VAL)); } \
   } while(0)
+#define RESERVENOALLOC(x) do { \
+    if (vm->valstack_top+(x) > vm->stack_max) { stackOverflow(); } \
+  } while(0)
 #define ADDTOP(x) vm->valstack_top += (x)
 #define TOPBASE(x) vm->valstack_top = vm->valstack_base + (x)
 #define BASETOP(x) vm->valstack_base = vm->valstack_top + (x)
@@ -504,10 +507,6 @@ const char *idris_getArg(int i);
 // disable stdin/stdout buffering
 void idris_disableBuffering(void);
 
-#ifndef SEL4
-int idris_usleep(int usec);
-#endif // SEL4
-
 // Handle stack overflow.
 // Just reports an error and exits.
 
diff --git a/rts/idris_stdfgn.c b/rts/idris_stdfgn.c
index 150553597..1507e9e8d 100644
--- a/rts/idris_stdfgn.c
+++ b/rts/idris_stdfgn.c
@@ -74,13 +74,13 @@ VAL fileAccessTime(void* h) {
     }
 }
 
-VAL fileModifiedTime(void* h) {
+VAL fileModifiedTime(VM* vm, void* h) {
     FILE* f = (FILE*)h;
     int fd = fileno(f);
 
     struct stat buf;
     if (fstat(fd, &buf) == 0) {
-        return MKBIGI(buf.st_mtime);
+        return MKBIGUI(vm, buf.st_mtime);
     } else {
         return MKBIGI(-1);
     }
@@ -228,6 +228,16 @@ VAL idris_clock(VM* vm) {
     return result;
 }
 
+#ifndef SEL4
+int idris_usleep(int usec) {
+    struct timespec t;
+    t.tv_sec = usec / 1000000;
+    t.tv_nsec = (usec % 1000000) * 1000;
+
+    return nanosleep(&t, NULL);
+}
+#endif // SEL4
+
 VAL idris_mkFileError(VM* vm) {
     VAL result;
     switch(errno) {
diff --git a/rts/idris_stdfgn.h b/rts/idris_stdfgn.h
index 65778ffad..b0645991e 100644
--- a/rts/idris_stdfgn.h
+++ b/rts/idris_stdfgn.h
@@ -18,7 +18,7 @@ int fileSize(void* h);
 
 // Return a negative number if not a file (e.g. directory or device)
 VAL fileAccessTime(void* h);
-VAL fileModifiedTime(void* h);
+VAL fileModifiedTime(VM* vm, void* h);
 VAL fileStatusTime(void* h);
 
 void* idris_dirOpen(char* dname);
@@ -54,6 +54,9 @@ char* getEnvPair(int i);
 
 VAL idris_time();
 VAL idris_clock(VM* vm);
+#ifndef SEL4
+int idris_usleep(int usec);
+#endif // SEL4
 
 void idris_forceGC();
 
diff --git a/rts/idris_utf8.c b/rts/idris_utf8.c
index 96832ace4..c41ffe091 100644
--- a/rts/idris_utf8.c
+++ b/rts/idris_utf8.c
@@ -1,5 +1,4 @@
 #include "idris_utf8.h"
-#include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
 
diff --git a/src/IRTS/Bytecode.hs b/src/IRTS/Bytecode.hs
index 3a7146967..07829c59c 100644
--- a/src/IRTS/Bytecode.hs
+++ b/src/IRTS/Bytecode.hs
@@ -86,6 +86,7 @@ data BC =
     -- | reserve n more stack items (i.e. check there's space, grow if
     -- necessary)
   | RESERVE Int
+  | RESERVENOALLOC Int
 
     -- | move the top of stack up
   | ADDTOP Int
@@ -127,13 +128,13 @@ bc reg (SV (Loc i))  r = assign reg (L i) ++ clean r
 bc reg (SApp False f vs) r =
       if argCount == 0
          then moveReg 0 vs ++ [STOREOLD, BASETOP 0, CALL f] ++ ret
-         else RESERVE argCount : moveReg 0 vs ++
+         else RESERVENOALLOC argCount : moveReg 0 vs ++
             [STOREOLD, BASETOP 0, ADDTOP argCount, CALL f] ++ ret
    where
       ret      = assign reg RVal ++ clean r
       argCount = length vs
 bc reg (SApp True f vs) r
-    = RESERVE (length vs) : moveReg 0 vs
+    = RESERVENOALLOC (length vs) : moveReg 0 vs
       ++ [SLIDE (length vs), TOPBASE (length vs), TAILCALL f]
 bc reg (SForeign t fname args) r
     = FOREIGNCALL reg t fname (map farg args) : clean r
diff --git a/src/IRTS/CodegenC.hs b/src/IRTS/CodegenC.hs
index 77ce9bd6c..4e9e9f17b 100644
--- a/src/IRTS/CodegenC.hs
+++ b/src/IRTS/CodegenC.hs
@@ -321,6 +321,8 @@ bcc f i (SLIDE n) = indent i ++ "SLIDE(vm, " ++ show n ++ ");\n"
 bcc f i REBASE = indent i ++ "REBASE;\n"
 bcc f i (RESERVE 0) = ""
 bcc f i (RESERVE n) = indent i ++ "RESERVE(" ++ show n ++ ");\n"
+bcc f i (RESERVENOALLOC 0) = ""
+bcc f i (RESERVENOALLOC n) = indent i ++ "RESERVENOALLOC(" ++ show n ++ ");\n"
 bcc f i (ADDTOP 0) = ""
 bcc f i (ADDTOP n) = indent i ++ "ADDTOP(" ++ show n ++ ");\n"
 bcc f i (TOPBASE n) = indent i ++ "TOPBASE(" ++ show n ++ ");\n"
diff --git a/src/IRTS/DumpBC.hs b/src/IRTS/DumpBC.hs
index 568fe20b1..f28275c07 100644
--- a/src/IRTS/DumpBC.hs
+++ b/src/IRTS/DumpBC.hs
@@ -63,6 +63,7 @@ serializeBC n bc = indent n ++
       SLIDE n -> "SLIDE " ++ show n
       REBASE -> "REBASE"
       RESERVE n -> "RESERVE " ++ show n
+      RESERVENOALLOC n -> "RESERVENOALLOC " ++ show n
       ADDTOP n -> "ADDTOP " ++ show n
       TOPBASE n -> "TOPBASE " ++ show n
       BASETOP n -> "BASETOP " ++ show n
diff --git a/src/IRTS/Portable.hs b/src/IRTS/Portable.hs
index 9f94a516e..feca42064 100644
--- a/src/IRTS/Portable.hs
+++ b/src/IRTS/Portable.hs
@@ -265,6 +265,7 @@ instance ToJSON BC where
     toJSON (FOREIGNCALL r fd ret exps) = object ["FOREIGNCALL" .= (r, fd, ret, exps)]
     toJSON (SLIDE i) = object ["SLIDE" .= i]
     toJSON (RESERVE i) = object ["RESERVE" .= i]
+    toJSON (RESERVENOALLOC i) = object ["RESERVENOALLOC" .= i]
     toJSON (ADDTOP i) = object ["ADDTOP" .= i]
     toJSON (TOPBASE i) = object ["TOPBASE" .= i]
     toJSON (BASETOP i) = object ["BASETOP" .= i]
diff --git a/src/Idris/CmdOptions.hs b/src/Idris/CmdOptions.hs
index ed1dd9f1c..8b204a0e3 100644
--- a/src/Idris/CmdOptions.hs
+++ b/src/Idris/CmdOptions.hs
@@ -18,6 +18,7 @@ import Idris.Info (getIdrisVersion)
 import Idris.Options
 import IRTS.CodegenCommon
 
+import qualified Control.Monad.Fail as Fail
 import Control.Monad.Trans (lift)
 import Control.Monad.Trans.Except (throwE)
 import Control.Monad.Trans.Reader (ask)
@@ -71,7 +72,7 @@ runArgParser = do opts <- execParser $ info parser
                                         PP.empty,
                                         PP.text "More details over Idris can be found online here:",
                                         PP.empty,
-                                        PP.indent 4 (PP.text "http://www.idris-lang.org/")]
+                                        PP.indent 4 (PP.text "https://www.idris-lang.org/")]
 
 execArgParserPure :: [String] -> ParserResult [Opt]
 execArgParserPure args = preProcOpts <$> execParserPure (prefs idm) (info parser idm) args
@@ -264,7 +265,7 @@ parseCodegen :: String -> Codegen
 parseCodegen "bytecode" = Bytecode
 parseCodegen cg         = Via IBCFormat (map toLower cg)
 
-parseLogCats :: Monad m => String -> m [LogCat]
+parseLogCats :: Fail.MonadFail m => String -> m [LogCat]
 parseLogCats s =
     case lastMay (readP_to_S doParse s) of
       Just (xs, _) -> return xs
@@ -290,7 +291,7 @@ parseLogCats s =
       s <- look
       fail $ "Category: " ++ s ++ " is not recognised."
 
-parseConsoleWidth :: Monad m => String -> m ConsoleWidth
+parseConsoleWidth :: Fail.MonadFail m => String -> m ConsoleWidth
 parseConsoleWidth "auto"     = return AutomaticWidth
 parseConsoleWidth "infinite" = return InfinitelyWide
 parseConsoleWidth  s =
diff --git a/src/Idris/Core/CaseTree.hs b/src/Idris/Core/CaseTree.hs
index 5779a66ba..559d5943b 100644
--- a/src/Idris/Core/CaseTree.hs
+++ b/src/Idris/Core/CaseTree.hs
@@ -627,7 +627,7 @@ groupCons cs = gc [] cs
         PConst cval -> return $ addConG cval (ps, res) acc
         PSuc n -> return $ addg False CSuc [n] (ps, res) acc
         PReflected fn args -> return $ addg False (CFn fn) args (ps, res) acc
-        pat -> fail $ show pat ++ " is not a constructor or constant (can't happen)"
+        pat -> error $ show pat ++ " is not a constructor or constant (can't happen)"
 
     addg uniq c conargs res []
            = [ConGroup uniq c [(conargs, res)]]
diff --git a/src/Idris/Core/TT.hs b/src/Idris/Core/TT.hs
index 5c34bd586..778eb7cef 100644
--- a/src/Idris/Core/TT.hs
+++ b/src/Idris/Core/TT.hs
@@ -70,6 +70,7 @@ import qualified Prelude as S (Semigroup(..))
 import Control.Applicative (Alternative, Applicative(..))
 import qualified Control.Applicative as A (Alternative(..))
 import Control.DeepSeq (($!!))
+import qualified Control.Monad.Fail as Fail
 import Control.Monad.State.Strict
 import Data.Binary hiding (get, put)
 import Data.Char
@@ -324,6 +325,11 @@ bindTC x k = case x of
 instance Monad TC where
     return x = OK x
     x >>= k = bindTC x k
+#if !(MIN_VERSION_base(4,13,0))
+    fail = Fail.fail
+#endif
+
+instance Fail.MonadFail TC where
     fail e = Error (InternalMsg e)
 
 instance MonadPlus TC where
diff --git a/src/Idris/ModeCommon.hs b/src/Idris/ModeCommon.hs
index a9ff941ed..0a86171c9 100644
--- a/src/Idris/ModeCommon.hs
+++ b/src/Idris/ModeCommon.hs
@@ -167,7 +167,7 @@ loadInputs inputs toline -- furthest line to read in input source files
 banner = "     ____    __     _                                          \n" ++
          "    /  _/___/ /____(_)____                                     \n" ++
          "    / // __  / ___/ / ___/     Version " ++ getIdrisVersion ++ "\n" ++
-         "  _/ // /_/ / /  / (__  )      http://www.idris-lang.org/      \n" ++
+         "  _/ // /_/ / /  / (__  )      https://www.idris-lang.org/     \n" ++
          " /___/\\__,_/_/  /_/____/       Type :? for help               \n" ++
          "\n" ++
          "Idris is free software with ABSOLUTELY NO WARRANTY.            \n" ++
diff --git a/src/Idris/Parser/Stack.hs b/src/Idris/Parser/Stack.hs
index f75789ab6..fb7b61144 100644
--- a/src/Idris/Parser/Stack.hs
+++ b/src/Idris/Parser/Stack.hs
@@ -5,7 +5,7 @@ Description : Idris parser stack and its primitives.
 License     : BSD3
 Maintainer  : The Idris Community.
 -}
-{-# LANGUAGE ConstraintKinds, FlexibleContexts, MultiParamTypeClasses #-}
+{-# LANGUAGE CPP, ConstraintKinds, FlexibleContexts, MultiParamTypeClasses #-}
 module Idris.Parser.Stack
   ( -- * Parsing
     Parser(..)
@@ -36,6 +36,7 @@ import Idris.Core.TT (FC(..))
 import Idris.Output (Message(..))
 
 import Control.Arrow (app)
+import qualified Control.Monad.Fail as Fail
 import Control.Monad.State.Strict (StateT(..), evalStateT)
 import Control.Monad.Writer.Strict (MonadWriter(..), WriterT(..), listen,
                                     runWriterT, tell)
@@ -51,7 +52,7 @@ import qualified Util.Pretty as PP
 type Parser s = StateT s (WriterT FC (P.Parsec Void String))
 
 -- | A constraint for parsing without state
-type Parsing m = (P.MonadParsec Void String m, MonadWriter FC m)
+type Parsing m = (Fail.MonadFail m, P.MonadParsec Void String m, MonadWriter FC m)
 
 -- | Run the Idris parser stack
 runparser :: Parser st res -> st -> String -> String -> Either ParseError res
@@ -76,11 +77,20 @@ parseErrorOffset = P.errorOffset . parseError
 instance Message ParseError where
   messageExtent err = sourcePositionFC pos
     where
+#if MIN_VERSION_megaparsec(8,0,0)
+      P.PosState {P.pstateSourcePos = pos} =
+        P.reachOffsetNoLine (parseErrorOffset err) (parseErrorPosState err)
+#else
       (pos, _) = P.reachOffsetNoLine (parseErrorOffset err) (parseErrorPosState err)
+#endif
   messageText = PP.text . init . P.parseErrorTextPretty . parseError
   messageSource err = Just sline
     where
+#if MIN_VERSION_megaparsec(8,0,0)
+      (sline, _) = P.reachOffset (parseErrorOffset err) (parseErrorPosState err)
+#else
       (_, sline, _) = P.reachOffset (parseErrorOffset err) (parseErrorPosState err)
+#endif
 
 -- | A fully formatted parse error, with caret and bar, etc.
 prettyError :: ParseError -> String
@@ -88,7 +98,11 @@ prettyError =  P.errorBundlePretty . unParseError
 
 {- * Mark and restore -}
 
+#if MIN_VERSION_megaparsec(8,0,0)
+type Mark = P.State String Void
+#else
 type Mark = P.State String
+#endif
 
 -- | Retrieve the parser state so we can restart from this point later.
 mark :: Parsing m => m Mark
diff --git a/src/Idris/Reflection.hs b/src/Idris/Reflection.hs
index f8c77587b..036d84d38 100644
--- a/src/Idris/Reflection.hs
+++ b/src/Idris/Reflection.hs
@@ -1105,7 +1105,7 @@ unApplyRaw tm = ua [] tm
     ua args t         = (t, args)
 
 -- | Build the reflected function definition(s) that correspond(s) to
--- a provided unqualifed name
+-- a provided unqualified name
 buildFunDefns :: IState -> Name -> [RFunDefn Term]
 buildFunDefns ist n =
   [ mkFunDefn name clauses
diff --git a/stack-11.22.yaml b/stack-11.22.yaml
new file mode 100644
index 000000000..c15fc3c6b
--- /dev/null
+++ b/stack-11.22.yaml
@@ -0,0 +1,21 @@
+#recheck extra-deps next on resolver or cabal file change
+resolver: lts-11.22
+
+extra-deps:
+- cheapskate-0.1.1.2
+- megaparsec-7.0.5
+- Cabal-2.4.1.0
+- network-3.1.1.1
+- parser-combinators-1.0.0
+
+flags:
+  idris:
+    FFI: true
+    GMP: true
+
+ghc-options:
+  idris: -fwarn-unused-imports -fwarn-unused-binds
+
+nix:
+  enable: false
+  shell-file: stack-shell.nix
diff --git a/stack-12.26.yaml b/stack-12.26.yaml
new file mode 100644
index 000000000..d1bfdbdbe
--- /dev/null
+++ b/stack-12.26.yaml
@@ -0,0 +1,20 @@
+#recheck extra-deps next on resolver or cabal file change
+resolver: lts-12.26
+
+extra-deps:
+- cheapskate-0.1.1.2
+- megaparsec-7.0.5
+- Cabal-2.4.1.0
+- network-3.1.1.1
+
+flags:
+  idris:
+    FFI: true
+    GMP: true
+
+ghc-options:
+  idris: -fwarn-unused-imports -fwarn-unused-binds
+
+nix:
+  enable: false
+  shell-file: stack-shell.nix
diff --git a/stack-15.3.yaml b/stack-15.3.yaml
new file mode 100644
index 000000000..90ed8a053
--- /dev/null
+++ b/stack-15.3.yaml
@@ -0,0 +1,17 @@
+#recheck extra-deps next on resolver or cabal file change
+resolver: lts-15.3
+
+extra-deps:
+- cheapskate-0.1.1.2
+
+flags:
+  idris:
+    FFI: true
+    GMP: true
+
+ghc-options:
+  idris: -fwarn-unused-imports -fwarn-unused-binds
+
+nix:
+  enable: false
+  shell-file: stack-shell.nix
diff --git a/stack-15.4.yaml b/stack-15.4.yaml
new file mode 100644
index 000000000..062645c43
--- /dev/null
+++ b/stack-15.4.yaml
@@ -0,0 +1,17 @@
+#recheck extra-deps next on resolver or cabal file change
+resolver: lts-15.4
+
+extra-deps:
+- cheapskate-0.1.1.2
+
+flags:
+  idris:
+    FFI: true
+    GMP: true
+
+ghc-options:
+  idris: -fwarn-unused-imports -fwarn-unused-binds
+
+nix:
+  enable: false
+  shell-file: stack-shell.nix
diff --git a/stack-alt.yaml b/stack-alt.yaml
deleted file mode 100644
index 03af48f5d..000000000
--- a/stack-alt.yaml
+++ /dev/null
@@ -1,25 +0,0 @@
-#recheck extra-deps next on resolver or cabal file change
-resolver: lts-11.4
-
-packages:
-  - location: .
-
-extra-deps:
-  - network-2.8.0.0@sha256:aae171e6c6028a7791dbe4de5b9d2da398056359e3cc7927465ffa3cdae1aa0b
-  - Cabal-2.2.0.1@sha256:2a80d8fb655474f0eaeb20434c47f64f84e6302e55973056f00df8ca050b9683
-  - megaparsec-7.0.4
-  - parser-combinators-1.0.0
-  - zip-archive-0.3.3@sha256:47cf2d66cc8e237f7226837758e1b041e24048ef3820d3d10276c500edb921bf
-  - containers-0.5.11.0@sha256:28ad7337057442f75bc689315ab4ec7bdf5e6b2c39668f306672cecd82c02798
-
-flags:
-  idris:
-    FFI: true
-    GMP: true
-
-ghc-options:
-  idris: -fwarn-unused-imports -fwarn-unused-binds
-
-nix:
-  enable: false
-  shell-file: stack-shell.nix
diff --git a/stack.yaml b/stack.yaml
deleted file mode 100644
index cdbffc2b9..000000000
--- a/stack.yaml
+++ /dev/null
@@ -1,24 +0,0 @@
-#recheck extra-deps next on resolver or cabal file change
-resolver: lts-13.21
-
-extra-deps:
-  - network-2.8.0.0@sha256:aae171e6c6028a7791dbe4de5b9d2da398056359e3cc7927465ffa3cdae1aa0b
-  - Cabal-2.2.0.1@sha256:2a80d8fb655474f0eaeb20434c47f64f84e6302e55973056f00df8ca050b9683
-  - megaparsec-7.0.4
-  - parser-combinators-1.0.0
-  - zip-archive-0.3.3@sha256:47cf2d66cc8e237f7226837758e1b041e24048ef3820d3d10276c500edb921bf
-  - containers-0.5.11.0@sha256:28ad7337057442f75bc689315ab4ec7bdf5e6b2c39668f306672cecd82c02798
-  - tasty-rerun-1.1.14@sha256:ba9c19a281535bea566e1044bc02c36ef17abcb310af4b6a149ec11780c7ce35
-  - binary-0.8.7.0@sha256:ae3e6cca723ac55c54bbb3fa771bcf18142bc727afd57818e66d6ee6c8044f12
-
-flags:
-  idris:
-    FFI: true
-    GMP: true
-
-ghc-options:
-  idris: -fwarn-unused-imports -fwarn-unused-binds
-
-nix:
-  enable: false
-  shell-file: stack-shell.nix
diff --git a/stack.yaml b/stack.yaml
new file mode 120000
index 000000000..3ec0293c9
--- /dev/null
+++ b/stack.yaml
@@ -0,0 +1 @@
+stack-15.4.yaml
\ No newline at end of file
diff --git a/test/README.md b/test/README.md
index 37ae2128b..f0529b320 100644
--- a/test/README.md
+++ b/test/README.md
@@ -113,18 +113,18 @@ and somewhat self-explanatory.
 
 1. Choose the family your test shall belong to and remember its identifier.
 2. Pick the next available integer in the test family. It will be the index.
-3. Say the family's identifier is `foo` and the index is `42`. You should call `./mktest.pl foo042` ; this will create the directory and a simple `run` script.
+3. Say the family's identifier is `foo` and the index is `42`. You should call `./mktest.pl foo042` ; this will create the directory and a simple `run.sh` script.
 4. Modify the `run` script to your liking. If you want to call the idris executable, write `${IDRIS:-idris} $@`.
 5. Add any file you may need in the directory. If they don't end in `.idr`, you should remember them for the next step.
 6. Add your test in `TestData.hs`. Each family has a list of `(Index, CompatCodegen)`.  See the next section for the available values in `CompatCodegen`. In most cases, you should write `( 42, ANY)`.
-7. Generate the `expected` file by doing:
+7. Generate the `expected.out` file by doing:
     ```
     # Using cabal
     cabal test --test-options="--pattern foo042 --accept"
     # Using stack
     stack test --test-arguments="--pattern foo042 --accept"
     ```
-8. Check the content of `expected`. Maybe the test didn't do what you thought it would. Fix and go back to 7 until it's ok.
+8. Check the content of `expected.out`. Maybe the test didn't do what you thought it would. Fix and go back to 7 until it's ok.
 
 ### Specifying compatible backends
 
@@ -146,7 +146,7 @@ Currently, `NONE` has the same effect as `ANY`, but this will change.
 
 ### Updating golden files
 
-To update the `expected` file for every test, do one of the following:
+To update the `expected.out` file for every test, do one of the following:
 
 ```
 # Using make
@@ -157,4 +157,4 @@ cabal test --test-options="--accept"
 stack test --test-arguments="--accept"
 ```
 
-"Accepted" tests are the ones that update the golden file. A test can still fail if the `run` script itself crashes.
+"Accepted" tests are the ones that update the golden file. A test can still fail if the `run.sh` script itself crashes.
diff --git a/test/TestRun.hs b/test/TestRun.hs
index 4809911f3..38a0fdcb6 100644
--- a/test/TestRun.hs
+++ b/test/TestRun.hs
@@ -62,7 +62,7 @@ ingredients = defaultIngredients ++
 test :: String -> String -> IO () -> TestTree
 test testName path = goldenVsFileDiff testName diff ref output
   where
-    ref = path </> "expected"
+    ref = path </> "expected.out"
     output = path </> "output"
     diff ref new | os == "openbsd" = ["diff", "-u", new, ref]
                  | otherwise = ["diff", "--strip-trailing-cr", "-u", new, ref]
@@ -92,7 +92,7 @@ mkGoldenTests testFamilies flags =
 -- this thing.
 runTest :: String -> Flags -> IO ()
 runTest path flags = do
-  let run = (proc "bash" ("run" : flags)) {cwd = Just path}
+  let run = (proc "bash" ("run.sh" : flags)) {cwd = Just path}
   (_, output, error_out) <- readCreateProcessWithExitCode run ""
   writeFile (path </> "output") (normalise output)
   when (error_out /= "") $ hPutStrLn stderr ("\nError: " ++ path ++ "\n" ++ error_out)
diff --git a/test/base001/expected b/test/base001/expected.out
similarity index 100%
rename from test/base001/expected
rename to test/base001/expected.out
diff --git a/test/base001/run b/test/base001/run.sh
old mode 100755
new mode 100644
similarity index 84%
rename from test/base001/run
rename to test/base001/run.sh
index f55f21402..2769ec64d
--- a/test/base001/run
+++ b/test/base001/run.sh
@@ -3,7 +3,7 @@
 set -u
 
 if [[ ${OSTYPE} = 'msys' ]]; then
-  cat expected # skip this test on Windows
+  cat expected.out # skip this test on Windows
 else
   ${IDRIS:-idris} "$@" --build base001.ipkg | grep -v 'make.*:'
   ./base001 2>&1 | grep -v '^sh:.*\./does-not-exist:'
diff --git a/test/basic001/expected b/test/basic001/expected.out
similarity index 100%
rename from test/basic001/expected
rename to test/basic001/expected.out
diff --git a/test/basic001/run b/test/basic001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic001/run
rename to test/basic001/run.sh
diff --git a/test/basic002/expected b/test/basic002/expected.out
similarity index 100%
rename from test/basic002/expected
rename to test/basic002/expected.out
diff --git a/test/basic002/run b/test/basic002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic002/run
rename to test/basic002/run.sh
diff --git a/test/basic003/expected b/test/basic003/expected.out
similarity index 100%
rename from test/basic003/expected
rename to test/basic003/expected.out
diff --git a/test/basic003/run b/test/basic003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic003/run
rename to test/basic003/run.sh
diff --git a/test/basic004/expected b/test/basic004/expected.out
similarity index 100%
rename from test/basic004/expected
rename to test/basic004/expected.out
diff --git a/test/basic004/run b/test/basic004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic004/run
rename to test/basic004/run.sh
diff --git a/test/basic005/expected b/test/basic005/expected.out
similarity index 100%
rename from test/basic005/expected
rename to test/basic005/expected.out
diff --git a/test/basic005/run b/test/basic005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic005/run
rename to test/basic005/run.sh
diff --git a/test/basic006/expected b/test/basic006/expected.out
similarity index 100%
rename from test/basic006/expected
rename to test/basic006/expected.out
diff --git a/test/basic006/run b/test/basic006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic006/run
rename to test/basic006/run.sh
diff --git a/test/basic007/expected b/test/basic007/expected.out
similarity index 100%
rename from test/basic007/expected
rename to test/basic007/expected.out
diff --git a/test/basic007/run b/test/basic007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic007/run
rename to test/basic007/run.sh
diff --git a/test/basic008/expected b/test/basic008/expected.out
similarity index 100%
rename from test/basic008/expected
rename to test/basic008/expected.out
diff --git a/test/basic008/run b/test/basic008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic008/run
rename to test/basic008/run.sh
diff --git a/test/basic009/expected b/test/basic009/expected.out
similarity index 100%
rename from test/basic009/expected
rename to test/basic009/expected.out
diff --git a/test/basic009/run b/test/basic009/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic009/run
rename to test/basic009/run.sh
diff --git a/test/basic010/expected b/test/basic010/expected.out
similarity index 100%
rename from test/basic010/expected
rename to test/basic010/expected.out
diff --git a/test/basic010/run b/test/basic010/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic010/run
rename to test/basic010/run.sh
diff --git a/test/basic011/expected b/test/basic011/expected.out
similarity index 100%
rename from test/basic011/expected
rename to test/basic011/expected.out
diff --git a/test/basic011/run b/test/basic011/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic011/run
rename to test/basic011/run.sh
diff --git a/test/basic012/expected b/test/basic012/expected.out
similarity index 100%
rename from test/basic012/expected
rename to test/basic012/expected.out
diff --git a/test/basic012/run b/test/basic012/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic012/run
rename to test/basic012/run.sh
diff --git a/test/basic013/expected b/test/basic013/expected.out
similarity index 100%
rename from test/basic013/expected
rename to test/basic013/expected.out
diff --git a/test/basic013/run b/test/basic013/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic013/run
rename to test/basic013/run.sh
diff --git a/test/basic014/expected b/test/basic014/expected.out
similarity index 100%
rename from test/basic014/expected
rename to test/basic014/expected.out
diff --git a/test/basic014/run b/test/basic014/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic014/run
rename to test/basic014/run.sh
diff --git a/test/basic015/expected b/test/basic015/expected.out
similarity index 100%
rename from test/basic015/expected
rename to test/basic015/expected.out
diff --git a/test/basic015/run b/test/basic015/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic015/run
rename to test/basic015/run.sh
diff --git a/test/basic016/expected b/test/basic016/expected.out
similarity index 100%
rename from test/basic016/expected
rename to test/basic016/expected.out
diff --git a/test/basic016/run b/test/basic016/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic016/run
rename to test/basic016/run.sh
diff --git a/test/basic017/expected b/test/basic017/expected.out
similarity index 100%
rename from test/basic017/expected
rename to test/basic017/expected.out
diff --git a/test/basic017/run b/test/basic017/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic017/run
rename to test/basic017/run.sh
diff --git a/test/basic018/expected b/test/basic018/expected.out
similarity index 100%
rename from test/basic018/expected
rename to test/basic018/expected.out
diff --git a/test/basic018/run b/test/basic018/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic018/run
rename to test/basic018/run.sh
diff --git a/test/basic019/expected b/test/basic019/expected.out
similarity index 100%
rename from test/basic019/expected
rename to test/basic019/expected.out
diff --git a/test/basic019/run b/test/basic019/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic019/run
rename to test/basic019/run.sh
diff --git a/test/basic020/expected b/test/basic020/expected.out
similarity index 100%
rename from test/basic020/expected
rename to test/basic020/expected.out
diff --git a/test/basic020/run b/test/basic020/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic020/run
rename to test/basic020/run.sh
diff --git a/test/basic021/expected b/test/basic021/expected.out
similarity index 100%
rename from test/basic021/expected
rename to test/basic021/expected.out
diff --git a/test/basic021/run b/test/basic021/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic021/run
rename to test/basic021/run.sh
diff --git a/test/basic022/expected b/test/basic022/expected.out
similarity index 100%
rename from test/basic022/expected
rename to test/basic022/expected.out
diff --git a/test/basic022/run b/test/basic022/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic022/run
rename to test/basic022/run.sh
diff --git a/test/basic023/expected b/test/basic023/expected.out
similarity index 100%
rename from test/basic023/expected
rename to test/basic023/expected.out
diff --git a/test/basic023/run b/test/basic023/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/basic023/run
rename to test/basic023/run.sh
diff --git a/test/basic024/expected b/test/basic024/expected.out
similarity index 100%
rename from test/basic024/expected
rename to test/basic024/expected.out
diff --git a/test/basic024/input b/test/basic024/input.in
similarity index 100%
rename from test/basic024/input
rename to test/basic024/input.in
diff --git a/test/basic024/run b/test/basic024/run.sh
similarity index 66%
rename from test/basic024/run
rename to test/basic024/run.sh
index 8ee701eaa..f3004a1cb 100644
--- a/test/basic024/run
+++ b/test/basic024/run.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-${IDRIS:-idris} $@ --quiet --port none < input
+${IDRIS:-idris} $@ --quiet --port none < input.in
 ${IDRIS:-idris} $@ basic024.idr -o basic024
 
 ./basic024
diff --git a/test/basic025/expected b/test/basic025/expected.out
similarity index 100%
rename from test/basic025/expected
rename to test/basic025/expected.out
diff --git a/test/basic025/input b/test/basic025/input.in
similarity index 100%
rename from test/basic025/input
rename to test/basic025/input.in
diff --git a/test/basic025/run b/test/basic025/run.sh
old mode 100755
new mode 100644
similarity index 55%
rename from test/basic025/run
rename to test/basic025/run.sh
index d0064ecf1..ffd0a8cde
--- a/test/basic025/run
+++ b/test/basic025/run.sh
@@ -1,7 +1,7 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none < input
+${IDRIS:-idris} $@ --quiet --port none < input.in
 ${IDRIS:-idris} $@ -o basic025 basic025.idr
 
-./basic025 input
+./basic025 input.in
 
 rm -f basic025 *.ibc
diff --git a/test/basic026/expected b/test/basic026/expected.out
similarity index 100%
rename from test/basic026/expected
rename to test/basic026/expected.out
diff --git a/test/basic026/run b/test/basic026/run.sh
similarity index 100%
rename from test/basic026/run
rename to test/basic026/run.sh
diff --git a/test/bignum001/expected b/test/bignum001/expected.out
similarity index 100%
rename from test/bignum001/expected
rename to test/bignum001/expected.out
diff --git a/test/bignum001/run b/test/bignum001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/bignum001/run
rename to test/bignum001/run.sh
diff --git a/test/bignum002/expected b/test/bignum002/expected.out
similarity index 100%
rename from test/bignum002/expected
rename to test/bignum002/expected.out
diff --git a/test/bignum002/run b/test/bignum002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/bignum002/run
rename to test/bignum002/run.sh
diff --git a/test/bignum003/expected b/test/bignum003/expected.out
similarity index 100%
rename from test/bignum003/expected
rename to test/bignum003/expected.out
diff --git a/test/bignum003/run b/test/bignum003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/bignum003/run
rename to test/bignum003/run.sh
diff --git a/test/bounded001/expected b/test/bounded001/expected.out
similarity index 100%
rename from test/bounded001/expected
rename to test/bounded001/expected.out
diff --git a/test/bounded001/run b/test/bounded001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/bounded001/run
rename to test/bounded001/run.sh
diff --git a/test/buffer001/expected b/test/buffer001/expected.out
similarity index 100%
rename from test/buffer001/expected
rename to test/buffer001/expected.out
diff --git a/test/buffer001/run b/test/buffer001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/buffer001/run
rename to test/buffer001/run.sh
diff --git a/test/buffer002/expected b/test/buffer002/expected.out
similarity index 100%
rename from test/buffer002/expected
rename to test/buffer002/expected.out
diff --git a/test/buffer002/run b/test/buffer002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/buffer002/run
rename to test/buffer002/run.sh
diff --git a/test/contrib001/expected b/test/contrib001/expected.out
similarity index 100%
rename from test/contrib001/expected
rename to test/contrib001/expected.out
diff --git a/test/contrib001/run b/test/contrib001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/contrib001/run
rename to test/contrib001/run.sh
diff --git a/test/corecords001/expected b/test/corecords001/expected.out
similarity index 100%
rename from test/corecords001/expected
rename to test/corecords001/expected.out
diff --git a/test/corecords001/run b/test/corecords001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/corecords001/run
rename to test/corecords001/run.sh
diff --git a/test/corecords002/expected b/test/corecords002/expected.out
similarity index 100%
rename from test/corecords002/expected
rename to test/corecords002/expected.out
diff --git a/test/corecords002/run b/test/corecords002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/corecords002/run
rename to test/corecords002/run.sh
diff --git a/test/delab001/expected b/test/delab001/expected.out
similarity index 100%
rename from test/delab001/expected
rename to test/delab001/expected.out
diff --git a/test/delab001/input b/test/delab001/input.in
similarity index 100%
rename from test/delab001/input
rename to test/delab001/input.in
diff --git a/test/delab001/run b/test/delab001/run.sh
old mode 100755
new mode 100644
similarity index 91%
rename from test/delab001/run
rename to test/delab001/run.sh
index 8a652882b..77f0e9da4
--- a/test/delab001/run
+++ b/test/delab001/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolor delab001.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolor delab001.idr < input.in
 rm -f *.ibc
diff --git a/test/directives001/expected b/test/directives001/expected.out
similarity index 100%
rename from test/directives001/expected
rename to test/directives001/expected.out
diff --git a/test/directives001/run b/test/directives001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/directives001/run
rename to test/directives001/run.sh
diff --git a/test/directives002/expected b/test/directives002/expected.out
similarity index 100%
rename from test/directives002/expected
rename to test/directives002/expected.out
diff --git a/test/directives002/run b/test/directives002/run.sh
similarity index 100%
rename from test/directives002/run
rename to test/directives002/run.sh
diff --git a/test/directives003/expected b/test/directives003/expected.out
similarity index 100%
rename from test/directives003/expected
rename to test/directives003/expected.out
diff --git a/test/directives003/run b/test/directives003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/directives003/run
rename to test/directives003/run.sh
diff --git a/test/disambig002/expected b/test/disambig002/expected.out
similarity index 100%
rename from test/disambig002/expected
rename to test/disambig002/expected.out
diff --git a/test/disambig002/run b/test/disambig002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/disambig002/run
rename to test/disambig002/run.sh
diff --git a/test/docs001/expected b/test/docs001/expected.out
similarity index 100%
rename from test/docs001/expected
rename to test/docs001/expected.out
diff --git a/test/docs001/input b/test/docs001/input.in
similarity index 100%
rename from test/docs001/input
rename to test/docs001/input.in
diff --git a/test/docs001/run b/test/docs001/run.sh
old mode 100755
new mode 100644
similarity index 92%
rename from test/docs001/run
rename to test/docs001/run.sh
index 9fb97107a..6c3173499
--- a/test/docs001/run
+++ b/test/docs001/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolor docs001.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolor docs001.idr < input.in
 rm *.ibc
diff --git a/test/docs002/expected b/test/docs002/expected.out
similarity index 100%
rename from test/docs002/expected
rename to test/docs002/expected.out
diff --git a/test/docs002/input b/test/docs002/input.in
similarity index 100%
rename from test/docs002/input
rename to test/docs002/input.in
diff --git a/test/docs002/run b/test/docs002/run.sh
old mode 100755
new mode 100644
similarity index 83%
rename from test/docs002/run
rename to test/docs002/run.sh
index 0e21066d9..6a06570d7
--- a/test/docs002/run
+++ b/test/docs002/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --nobanner --nocolor --quiet --port none docs002.idr < input
+${IDRIS:-idris} $@ --nobanner --nocolor --quiet --port none docs002.idr < input.in
 rm *.ibc
diff --git a/test/docs003/expected b/test/docs003/expected.out
similarity index 100%
rename from test/docs003/expected
rename to test/docs003/expected.out
diff --git a/test/docs003/input b/test/docs003/input.in
similarity index 100%
rename from test/docs003/input
rename to test/docs003/input.in
diff --git a/test/docs003/run b/test/docs003/run.sh
old mode 100755
new mode 100644
similarity index 92%
rename from test/docs003/run
rename to test/docs003/run.sh
index ff2d53aff..ad8722a5a
--- a/test/docs003/run
+++ b/test/docs003/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolor docs003.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolor docs003.idr < input.in
 rm *.ibc
diff --git a/test/docs004/expected b/test/docs004/expected.out
similarity index 100%
rename from test/docs004/expected
rename to test/docs004/expected.out
diff --git a/test/docs004/input b/test/docs004/input.in
similarity index 100%
rename from test/docs004/input
rename to test/docs004/input.in
diff --git a/test/docs004/run b/test/docs004/run.sh
old mode 100755
new mode 100644
similarity index 92%
rename from test/docs004/run
rename to test/docs004/run.sh
index 9a7be56e9..0e1323d4e
--- a/test/docs004/run
+++ b/test/docs004/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolor docs004.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolor docs004.idr < input.in
 rm *.ibc
diff --git a/test/docs005/expected b/test/docs005/expected.out
similarity index 100%
rename from test/docs005/expected
rename to test/docs005/expected.out
diff --git a/test/docs005/input b/test/docs005/input.in
similarity index 100%
rename from test/docs005/input
rename to test/docs005/input.in
diff --git a/test/docs005/run b/test/docs005/run.sh
old mode 100755
new mode 100644
similarity index 92%
rename from test/docs005/run
rename to test/docs005/run.sh
index e37e754dd..60545941f
--- a/test/docs005/run
+++ b/test/docs005/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolor docs005.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolor docs005.idr < input.in
 rm *.ibc
diff --git a/test/docs006/expected b/test/docs006/expected.out
similarity index 100%
rename from test/docs006/expected
rename to test/docs006/expected.out
diff --git a/test/docs006/input b/test/docs006/input.in
similarity index 100%
rename from test/docs006/input
rename to test/docs006/input.in
diff --git a/test/docs006/run b/test/docs006/run.sh
old mode 100755
new mode 100644
similarity index 92%
rename from test/docs006/run
rename to test/docs006/run.sh
index 447f88ca8..9b82852fc
--- a/test/docs006/run
+++ b/test/docs006/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolor docs006.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolor docs006.idr < input.in
 rm *.ibc
diff --git a/test/dsl001/expected b/test/dsl001/expected.out
similarity index 100%
rename from test/dsl001/expected
rename to test/dsl001/expected.out
diff --git a/test/dsl001/input b/test/dsl001/input.in
similarity index 100%
rename from test/dsl001/input
rename to test/dsl001/input.in
diff --git a/test/dsl001/run b/test/dsl001/run.sh
old mode 100755
new mode 100644
similarity index 93%
rename from test/dsl001/run
rename to test/dsl001/run.sh
index 19fcd13b0..732962235
--- a/test/dsl001/run
+++ b/test/dsl001/run.sh
@@ -1,5 +1,5 @@
 #!/usr/bin/env bash
 ${IDRIS:-idris} $@ test001.idr -o test001 --partial-eval
 ./test001
-${IDRIS:-idris} $@ test001.idr --partial-eval --quiet --port none < input
+${IDRIS:-idris} $@ test001.idr --partial-eval --quiet --port none < input.in
 rm -f test001 test001.ibc
diff --git a/test/dsl002/expected b/test/dsl002/expected.out
similarity index 100%
rename from test/dsl002/expected
rename to test/dsl002/expected.out
diff --git a/test/dsl002/run b/test/dsl002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/dsl002/run
rename to test/dsl002/run.sh
diff --git a/test/dsl002/test b/test/dsl002/test.in
similarity index 100%
rename from test/dsl002/test
rename to test/dsl002/test.in
diff --git a/test/dsl002/test014.idr b/test/dsl002/test014.idr
index 961ec1ee6..515cd9e93 100644
--- a/test/dsl002/test014.idr
+++ b/test/dsl002/test014.idr
@@ -64,6 +64,6 @@ readH fn = res (do let x = open fn Reading
                        else rputStrLn "Error")
 
 main : IO ()
-main = run (readH "test")
+main = run (readH "test.in")
 
 
diff --git a/test/dsl003/expected b/test/dsl003/expected.out
similarity index 100%
rename from test/dsl003/expected
rename to test/dsl003/expected.out
diff --git a/test/dsl003/run b/test/dsl003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/dsl003/run
rename to test/dsl003/run.sh
diff --git a/test/dsl004/expected b/test/dsl004/expected.out
similarity index 100%
rename from test/dsl004/expected
rename to test/dsl004/expected.out
diff --git a/test/dsl004/run b/test/dsl004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/dsl004/run
rename to test/dsl004/run.sh
diff --git a/test/effects001/expected b/test/effects001/expected.out
similarity index 100%
rename from test/effects001/expected
rename to test/effects001/expected.out
diff --git a/test/effects001/run b/test/effects001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/effects001/run
rename to test/effects001/run.sh
diff --git a/test/effects001/test021.idr b/test/effects001/test021.idr
index 918d494d7..1774c28fd 100644
--- a/test/effects001/test021.idr
+++ b/test/effects001/test021.idr
@@ -31,7 +31,7 @@ readFileCount = readAcc []
 
 testFile : TestFileIO () ()
 testFile = do
-    Success <- open "testFile" Read
+    Success <- open "testFile.in" Read
              | (FError err) => do
                  putStrLn "Error!"
                  pure ()
diff --git a/test/effects001/testFile b/test/effects001/testFile.in
similarity index 100%
rename from test/effects001/testFile
rename to test/effects001/testFile.in
diff --git a/test/effects002/expected b/test/effects002/expected.out
similarity index 100%
rename from test/effects002/expected
rename to test/effects002/expected.out
diff --git a/test/effects002/run b/test/effects002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/effects002/run
rename to test/effects002/run.sh
diff --git a/test/effects003/expected b/test/effects003/expected.out
similarity index 100%
rename from test/effects003/expected
rename to test/effects003/expected.out
diff --git a/test/effects003/input b/test/effects003/input.in
similarity index 100%
rename from test/effects003/input
rename to test/effects003/input.in
diff --git a/test/effects003/run b/test/effects003/run.sh
old mode 100755
new mode 100644
similarity index 83%
rename from test/effects003/run
rename to test/effects003/run.sh
index 52077e73a..e4b9604de
--- a/test/effects003/run
+++ b/test/effects003/run.sh
@@ -1,4 +1,4 @@
 #!/usr/bin/env bash
 ${IDRIS:-idris} $@ hangman.idr --nocolour -p effects -o hangman
-./hangman < input
+./hangman < input.in
 rm -f hangman *.ibc
diff --git a/test/effects004/expected b/test/effects004/expected.out
similarity index 100%
rename from test/effects004/expected
rename to test/effects004/expected.out
diff --git a/test/effects004/input b/test/effects004/input.in
similarity index 100%
rename from test/effects004/input
rename to test/effects004/input.in
diff --git a/test/effects004/run b/test/effects004/run.sh
old mode 100755
new mode 100644
similarity index 80%
rename from test/effects004/run
rename to test/effects004/run.sh
index ce4961d9b..ae32d385e
--- a/test/effects004/run
+++ b/test/effects004/run.sh
@@ -1,4 +1,4 @@
 #!/usr/bin/env bash
 ${IDRIS:-idris} $@ effects004.idr -o effects004 -p effects
-./effects004 < input
+./effects004 < input.in
 rm -f effects004 *.ibc
diff --git a/test/effects005/expected b/test/effects005/expected.out
similarity index 100%
rename from test/effects005/expected
rename to test/effects005/expected.out
diff --git a/test/effects005/run b/test/effects005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/effects005/run
rename to test/effects005/run.sh
diff --git a/test/error001/expected b/test/error001/expected.out
similarity index 100%
rename from test/error001/expected
rename to test/error001/expected.out
diff --git a/test/error001/run b/test/error001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error001/run
rename to test/error001/run.sh
diff --git a/test/error002/expected b/test/error002/expected.out
similarity index 100%
rename from test/error002/expected
rename to test/error002/expected.out
diff --git a/test/error002/run b/test/error002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error002/run
rename to test/error002/run.sh
diff --git a/test/error003/expected b/test/error003/expected.out
similarity index 100%
rename from test/error003/expected
rename to test/error003/expected.out
diff --git a/test/error003/run b/test/error003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error003/run
rename to test/error003/run.sh
diff --git a/test/error004/expected b/test/error004/expected.out
similarity index 100%
rename from test/error004/expected
rename to test/error004/expected.out
diff --git a/test/error004/run b/test/error004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error004/run
rename to test/error004/run.sh
diff --git a/test/error005/expected b/test/error005/expected.out
similarity index 100%
rename from test/error005/expected
rename to test/error005/expected.out
diff --git a/test/error005/run b/test/error005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error005/run
rename to test/error005/run.sh
diff --git a/test/error006/expected b/test/error006/expected.out
similarity index 100%
rename from test/error006/expected
rename to test/error006/expected.out
diff --git a/test/error006/run b/test/error006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error006/run
rename to test/error006/run.sh
diff --git a/test/error007/expected b/test/error007/expected.out
similarity index 100%
rename from test/error007/expected
rename to test/error007/expected.out
diff --git a/test/error007/run b/test/error007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error007/run
rename to test/error007/run.sh
diff --git a/test/error008/expected b/test/error008/expected.out
similarity index 100%
rename from test/error008/expected
rename to test/error008/expected.out
diff --git a/test/error008/run b/test/error008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error008/run
rename to test/error008/run.sh
diff --git a/test/error009/expected b/test/error009/expected.out
similarity index 100%
rename from test/error009/expected
rename to test/error009/expected.out
diff --git a/test/error009/run b/test/error009/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/error009/run
rename to test/error009/run.sh
diff --git a/test/ffi001/expected b/test/ffi001/expected.out
similarity index 100%
rename from test/ffi001/expected
rename to test/ffi001/expected.out
diff --git a/test/ffi001/run b/test/ffi001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi001/run
rename to test/ffi001/run.sh
diff --git a/test/ffi002/expected b/test/ffi002/expected.out
similarity index 100%
rename from test/ffi002/expected
rename to test/ffi002/expected.out
diff --git a/test/ffi002/run b/test/ffi002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi002/run
rename to test/ffi002/run.sh
diff --git a/test/ffi003/expected b/test/ffi003/expected.out
similarity index 100%
rename from test/ffi003/expected
rename to test/ffi003/expected.out
diff --git a/test/ffi003/input b/test/ffi003/input.in
similarity index 100%
rename from test/ffi003/input
rename to test/ffi003/input.in
diff --git a/test/ffi003/run b/test/ffi003/run.sh
old mode 100755
new mode 100644
similarity index 82%
rename from test/ffi003/run
rename to test/ffi003/run.sh
index 01c6721bd..f247e04be
--- a/test/ffi003/run
+++ b/test/ffi003/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolour test024.idr --exec main < input
+${IDRIS:-idris} $@ --quiet --port none --nocolour test024.idr --exec main < input.in
 rm -f *.ibc
diff --git a/test/ffi004/expected b/test/ffi004/expected.out
similarity index 100%
rename from test/ffi004/expected
rename to test/ffi004/expected.out
diff --git a/test/ffi004/run b/test/ffi004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi004/run
rename to test/ffi004/run.sh
diff --git a/test/ffi005/expected b/test/ffi005/expected.out
similarity index 100%
rename from test/ffi005/expected
rename to test/ffi005/expected.out
diff --git a/test/ffi005/run b/test/ffi005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi005/run
rename to test/ffi005/run.sh
diff --git a/test/ffi006/expected b/test/ffi006/expected.out
similarity index 100%
rename from test/ffi006/expected
rename to test/ffi006/expected.out
diff --git a/test/ffi006/run b/test/ffi006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi006/run
rename to test/ffi006/run.sh
diff --git a/test/ffi007/expected b/test/ffi007/expected.out
similarity index 100%
rename from test/ffi007/expected
rename to test/ffi007/expected.out
diff --git a/test/ffi007/run b/test/ffi007/run.sh
similarity index 100%
rename from test/ffi007/run
rename to test/ffi007/run.sh
diff --git a/test/ffi008/expected b/test/ffi008/expected.out
similarity index 100%
rename from test/ffi008/expected
rename to test/ffi008/expected.out
diff --git a/test/ffi008/run b/test/ffi008/run.sh
similarity index 100%
rename from test/ffi008/run
rename to test/ffi008/run.sh
diff --git a/test/ffi009/expected b/test/ffi009/expected.out
similarity index 100%
rename from test/ffi009/expected
rename to test/ffi009/expected.out
diff --git a/test/ffi009/run b/test/ffi009/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi009/run
rename to test/ffi009/run.sh
diff --git a/test/ffi010/expected b/test/ffi010/expected.out
similarity index 100%
rename from test/ffi010/expected
rename to test/ffi010/expected.out
diff --git a/test/ffi010/run b/test/ffi010/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi010/run
rename to test/ffi010/run.sh
diff --git a/test/ffi011/expected b/test/ffi011/expected.out
similarity index 100%
rename from test/ffi011/expected
rename to test/ffi011/expected.out
diff --git a/test/ffi011/ffi011 b/test/ffi011/ffi011.js
similarity index 100%
rename from test/ffi011/ffi011
rename to test/ffi011/ffi011.js
diff --git a/test/ffi011/run b/test/ffi011/run.sh
old mode 100755
new mode 100644
similarity index 84%
rename from test/ffi011/run
rename to test/ffi011/run.sh
index 69e7bc2ed..92ceda21e
--- a/test/ffi011/run
+++ b/test/ffi011/run.sh
@@ -1,4 +1,4 @@
 #!/usr/bin/env bash
 ${IDRIS:-idris} $@ ffi011.idr --interface -o lib.js
-node ./ffi011
+node ./ffi011.js
 rm -f *.ibc lib.js
diff --git a/test/ffi012/expected b/test/ffi012/expected.out
similarity index 100%
rename from test/ffi012/expected
rename to test/ffi012/expected.out
diff --git a/test/ffi012/ffi012 b/test/ffi012/ffi012.js
similarity index 100%
rename from test/ffi012/ffi012
rename to test/ffi012/ffi012.js
diff --git a/test/ffi012/run b/test/ffi012/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi012/run
rename to test/ffi012/run.sh
diff --git a/test/ffi013/expected b/test/ffi013/expected.out
similarity index 100%
rename from test/ffi013/expected
rename to test/ffi013/expected.out
diff --git a/test/ffi013/run b/test/ffi013/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/ffi013/run
rename to test/ffi013/run.sh
diff --git a/test/folding001/expected b/test/folding001/expected.out
similarity index 100%
rename from test/folding001/expected
rename to test/folding001/expected.out
diff --git a/test/folding001/run b/test/folding001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/folding001/run
rename to test/folding001/run.sh
diff --git a/test/idrisdoc001/expected b/test/idrisdoc001/expected.out
similarity index 100%
rename from test/idrisdoc001/expected
rename to test/idrisdoc001/expected.out
diff --git a/test/idrisdoc001/run b/test/idrisdoc001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc001/run
rename to test/idrisdoc001/run.sh
diff --git a/test/idrisdoc002/expected b/test/idrisdoc002/expected.out
similarity index 100%
rename from test/idrisdoc002/expected
rename to test/idrisdoc002/expected.out
diff --git a/test/idrisdoc002/run b/test/idrisdoc002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc002/run
rename to test/idrisdoc002/run.sh
diff --git a/test/idrisdoc003/expected b/test/idrisdoc003/expected.out
similarity index 100%
rename from test/idrisdoc003/expected
rename to test/idrisdoc003/expected.out
diff --git a/test/idrisdoc003/run b/test/idrisdoc003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc003/run
rename to test/idrisdoc003/run.sh
diff --git a/test/idrisdoc004/expected b/test/idrisdoc004/expected.out
similarity index 100%
rename from test/idrisdoc004/expected
rename to test/idrisdoc004/expected.out
diff --git a/test/idrisdoc004/run b/test/idrisdoc004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc004/run
rename to test/idrisdoc004/run.sh
diff --git a/test/idrisdoc005/expected b/test/idrisdoc005/expected.out
similarity index 100%
rename from test/idrisdoc005/expected
rename to test/idrisdoc005/expected.out
diff --git a/test/idrisdoc005/run b/test/idrisdoc005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc005/run
rename to test/idrisdoc005/run.sh
diff --git a/test/idrisdoc006/expected b/test/idrisdoc006/expected.out
similarity index 100%
rename from test/idrisdoc006/expected
rename to test/idrisdoc006/expected.out
diff --git a/test/idrisdoc006/run b/test/idrisdoc006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc006/run
rename to test/idrisdoc006/run.sh
diff --git a/test/idrisdoc007/expected b/test/idrisdoc007/expected.out
similarity index 100%
rename from test/idrisdoc007/expected
rename to test/idrisdoc007/expected.out
diff --git a/test/idrisdoc007/run b/test/idrisdoc007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc007/run
rename to test/idrisdoc007/run.sh
diff --git a/test/idrisdoc008/expected b/test/idrisdoc008/expected.out
similarity index 100%
rename from test/idrisdoc008/expected
rename to test/idrisdoc008/expected.out
diff --git a/test/idrisdoc008/run b/test/idrisdoc008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/idrisdoc008/run
rename to test/idrisdoc008/run.sh
diff --git a/test/idrisdoc009/expected b/test/idrisdoc009/expected.out
similarity index 100%
rename from test/idrisdoc009/expected
rename to test/idrisdoc009/expected.out
diff --git a/test/idrisdoc009/input b/test/idrisdoc009/input.in
similarity index 100%
rename from test/idrisdoc009/input
rename to test/idrisdoc009/input.in
diff --git a/test/idrisdoc009/run b/test/idrisdoc009/run.sh
old mode 100755
new mode 100644
similarity index 94%
rename from test/idrisdoc009/run
rename to test/idrisdoc009/run.sh
index 88ab94359..65168e370
--- a/test/idrisdoc009/run
+++ b/test/idrisdoc009/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --nocolour --quiet --port none Test.idr < input
+${IDRIS:-idris} $@ --nocolour --quiet --port none Test.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive001/expected b/test/interactive001/expected.out
similarity index 100%
rename from test/interactive001/expected
rename to test/interactive001/expected.out
diff --git a/test/interactive001/input b/test/interactive001/input.in
similarity index 100%
rename from test/interactive001/input
rename to test/interactive001/input.in
diff --git a/test/interactive001/run b/test/interactive001/run.sh
old mode 100755
new mode 100644
similarity index 82%
rename from test/interactive001/run
rename to test/interactive001/run.sh
index 392524b67..a4cdea93c
--- a/test/interactive001/run
+++ b/test/interactive001/run.sh
@@ -1,5 +1,5 @@
 #!/usr/bin/env bash
 
-${IDRIS:-idris} $@ --quiet --port none --indent-with 8 interactive001.idr < input
+${IDRIS:-idris} $@ --quiet --port none --indent-with 8 interactive001.idr < input.in
 
 rm -f *.ibc
diff --git a/test/interactive002/expected b/test/interactive002/expected.out
similarity index 100%
rename from test/interactive002/expected
rename to test/interactive002/expected.out
diff --git a/test/interactive002/input b/test/interactive002/input.in
similarity index 100%
rename from test/interactive002/input
rename to test/interactive002/input.in
diff --git a/test/interactive002/run b/test/interactive002/run.sh
old mode 100755
new mode 100644
similarity index 95%
rename from test/interactive002/run
rename to test/interactive002/run.sh
index f0230c594..a1ccc2075
--- a/test/interactive002/run
+++ b/test/interactive002/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none interactive002.idr < input
+${IDRIS:-idris} $@ --quiet --port none interactive002.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive003/expected b/test/interactive003/expected.out
similarity index 100%
rename from test/interactive003/expected
rename to test/interactive003/expected.out
diff --git a/test/interactive003/input b/test/interactive003/input.in
similarity index 100%
rename from test/interactive003/input
rename to test/interactive003/input.in
diff --git a/test/interactive003/run b/test/interactive003/run.sh
old mode 100755
new mode 100644
similarity index 95%
rename from test/interactive003/run
rename to test/interactive003/run.sh
index ab580d8a5..5b1cd7da7
--- a/test/interactive003/run
+++ b/test/interactive003/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none interactive003.idr < input
+${IDRIS:-idris} $@ --quiet --port none interactive003.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive004/expected b/test/interactive004/expected.out
similarity index 100%
rename from test/interactive004/expected
rename to test/interactive004/expected.out
diff --git a/test/interactive004/input b/test/interactive004/input.in
similarity index 100%
rename from test/interactive004/input
rename to test/interactive004/input.in
diff --git a/test/interactive004/run b/test/interactive004/run.sh
old mode 100755
new mode 100644
similarity index 95%
rename from test/interactive004/run
rename to test/interactive004/run.sh
index 24419ae99..fa704639a
--- a/test/interactive004/run
+++ b/test/interactive004/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none interactive004.idr < input
+${IDRIS:-idris} $@ --quiet --port none interactive004.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive005/expected b/test/interactive005/expected.out
similarity index 100%
rename from test/interactive005/expected
rename to test/interactive005/expected.out
diff --git a/test/interactive005/input b/test/interactive005/input.in
similarity index 100%
rename from test/interactive005/input
rename to test/interactive005/input.in
diff --git a/test/interactive005/run b/test/interactive005/run.sh
old mode 100755
new mode 100644
similarity index 80%
rename from test/interactive005/run
rename to test/interactive005/run.sh
index 9bf6fc76f..edec76780
--- a/test/interactive005/run
+++ b/test/interactive005/run.sh
@@ -1,5 +1,5 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --nocolour --quiet --port none interactive005.idr --consolewidth 70 < input
+${IDRIS:-idris} $@ --nocolour --quiet --port none interactive005.idr --consolewidth 70 < input.in
 rm -f *.ibc
 rm -f hello.bytecode
 rm -f hello
diff --git a/test/interactive006/expected b/test/interactive006/expected.out
similarity index 100%
rename from test/interactive006/expected
rename to test/interactive006/expected.out
diff --git a/test/interactive006/input b/test/interactive006/input.in
similarity index 100%
rename from test/interactive006/input
rename to test/interactive006/input.in
diff --git a/test/interactive006/run b/test/interactive006/run.sh
old mode 100755
new mode 100644
similarity index 84%
rename from test/interactive006/run
rename to test/interactive006/run.sh
index 7ebcd30ba..1d7aa1983
--- a/test/interactive006/run
+++ b/test/interactive006/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --port 5000 interactive006.idr < input
+${IDRIS:-idris} $@ --quiet --port none --port 5000 interactive006.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive007/expected b/test/interactive007/expected.out
similarity index 100%
rename from test/interactive007/expected
rename to test/interactive007/expected.out
diff --git a/test/interactive007/input b/test/interactive007/input.in
similarity index 100%
rename from test/interactive007/input
rename to test/interactive007/input.in
diff --git a/test/interactive007/run b/test/interactive007/run.sh
old mode 100755
new mode 100644
similarity index 66%
rename from test/interactive007/run
rename to test/interactive007/run.sh
index 92b0b63f7..ee1c09840
--- a/test/interactive007/run
+++ b/test/interactive007/run.sh
@@ -1,2 +1,2 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ -p contrib --nobanner --nocolor --port none < input | perl -pe 's-Data\\Z-Data/Z-g'
+${IDRIS:-idris} $@ -p contrib --nobanner --nocolor --port none < input.in | perl -pe 's-Data\\Z-Data/Z-g'
diff --git a/test/interactive008/expected b/test/interactive008/expected.out
similarity index 100%
rename from test/interactive008/expected
rename to test/interactive008/expected.out
diff --git a/test/interactive008/input b/test/interactive008/input.in
similarity index 100%
rename from test/interactive008/input
rename to test/interactive008/input.in
diff --git a/test/interactive008/run b/test/interactive008/run
deleted file mode 100755
index 9f83b046a..000000000
--- a/test/interactive008/run
+++ /dev/null
@@ -1,2 +0,0 @@
-#!/usr/bin/env bash
-${IDRIS:-idris} $@ --nobanner --nocolor --port none < input
diff --git a/test/interactive008/run.sh b/test/interactive008/run.sh
new file mode 100644
index 000000000..4ff27ced0
--- /dev/null
+++ b/test/interactive008/run.sh
@@ -0,0 +1,2 @@
+#!/usr/bin/env bash
+${IDRIS:-idris} $@ --nobanner --nocolor --port none < input.in
diff --git a/test/interactive009/expected b/test/interactive009/expected.out
similarity index 100%
rename from test/interactive009/expected
rename to test/interactive009/expected.out
diff --git a/test/interactive009/input b/test/interactive009/input.in
similarity index 100%
rename from test/interactive009/input
rename to test/interactive009/input.in
diff --git a/test/interactive009/run b/test/interactive009/run.sh
old mode 100755
new mode 100644
similarity index 95%
rename from test/interactive009/run
rename to test/interactive009/run.sh
index 7b392c21b..bf54445e0
--- a/test/interactive009/run
+++ b/test/interactive009/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none interactive009.idr < input
+${IDRIS:-idris} $@ --quiet --port none interactive009.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive010/expected b/test/interactive010/expected.out
similarity index 100%
rename from test/interactive010/expected
rename to test/interactive010/expected.out
diff --git a/test/interactive010/input b/test/interactive010/input.in
similarity index 100%
rename from test/interactive010/input
rename to test/interactive010/input.in
diff --git a/test/interactive010/run b/test/interactive010/run.sh
old mode 100755
new mode 100644
similarity index 91%
rename from test/interactive010/run
rename to test/interactive010/run.sh
index 79139c79e..ec396d22f
--- a/test/interactive010/run
+++ b/test/interactive010/run.sh
@@ -1,2 +1,2 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nobanner --nocolor  < input
+${IDRIS:-idris} $@ --quiet --port none --nobanner --nocolor  < input.in
diff --git a/test/interactive011/expected b/test/interactive011/expected.out
similarity index 100%
rename from test/interactive011/expected
rename to test/interactive011/expected.out
diff --git a/test/interactive011/input b/test/interactive011/input.in
similarity index 100%
rename from test/interactive011/input
rename to test/interactive011/input.in
diff --git a/test/interactive011/run b/test/interactive011/run.sh
old mode 100755
new mode 100644
similarity index 86%
rename from test/interactive011/run
rename to test/interactive011/run.sh
index 20b5a336c..590743070
--- a/test/interactive011/run
+++ b/test/interactive011/run.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
 cd src
-${IDRIS:-idris} "$@" --quiet --port none --indent-clause 4 Main.idr <../input
+${IDRIS:-idris} "$@" --quiet --port none --indent-clause 4 Main.idr <../input.in
 
 rm -f *.ibc
diff --git a/test/interactive012/expected b/test/interactive012/expected.out
similarity index 100%
rename from test/interactive012/expected
rename to test/interactive012/expected.out
diff --git a/test/interactive012/input b/test/interactive012/input.in
similarity index 100%
rename from test/interactive012/input
rename to test/interactive012/input.in
diff --git a/test/interactive012/run b/test/interactive012/run.sh
old mode 100755
new mode 100644
similarity index 73%
rename from test/interactive012/run
rename to test/interactive012/run.sh
index 597985d1f..5b715d07c
--- a/test/interactive012/run
+++ b/test/interactive012/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --nocolour --consolewidth 70 --quiet --port none interactive012.idr < input
+${IDRIS:-idris} $@ --nocolour --consolewidth 70 --quiet --port none interactive012.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive013/expected b/test/interactive013/expected.out
similarity index 100%
rename from test/interactive013/expected
rename to test/interactive013/expected.out
diff --git a/test/interactive013/input b/test/interactive013/input.in
similarity index 100%
rename from test/interactive013/input
rename to test/interactive013/input.in
diff --git a/test/interactive013/run b/test/interactive013/run.sh
old mode 100755
new mode 100644
similarity index 95%
rename from test/interactive013/run
rename to test/interactive013/run.sh
index 8d0d94cf3..605d13011
--- a/test/interactive013/run
+++ b/test/interactive013/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none interactive013.idr < input
+${IDRIS:-idris} $@ --quiet --port none interactive013.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive014/expected b/test/interactive014/expected.out
similarity index 100%
rename from test/interactive014/expected
rename to test/interactive014/expected.out
diff --git a/test/interactive014/input b/test/interactive014/input.in
similarity index 100%
rename from test/interactive014/input
rename to test/interactive014/input.in
diff --git a/test/interactive014/run b/test/interactive014/run.sh
old mode 100755
new mode 100644
similarity index 95%
rename from test/interactive014/run
rename to test/interactive014/run.sh
index 15d093d98..150f71d54
--- a/test/interactive014/run
+++ b/test/interactive014/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none interactive014.idr < input
+${IDRIS:-idris} $@ --quiet --port none interactive014.idr < input.in
 rm -f *.ibc
diff --git a/test/interactive015/expected b/test/interactive015/expected.out
similarity index 100%
rename from test/interactive015/expected
rename to test/interactive015/expected.out
diff --git a/test/interactive015/input b/test/interactive015/input.in
similarity index 100%
rename from test/interactive015/input
rename to test/interactive015/input.in
diff --git a/test/interactive015/run b/test/interactive015/run.sh
old mode 100755
new mode 100644
similarity index 96%
rename from test/interactive015/run
rename to test/interactive015/run.sh
index 58dcc8928..4f66ca3a4
--- a/test/interactive015/run
+++ b/test/interactive015/run.sh
@@ -1,7 +1,7 @@
 #!/usr/bin/env bash
 
 cp src/interactive015.idr .
-${IDRIS:-idris} "$@" --quiet --port none interactive015.idr < input
+${IDRIS:-idris} "$@" --quiet --port none interactive015.idr < input.in
 
 cat interactive015.idr
 
diff --git a/test/interactive016/expected b/test/interactive016/expected.out
similarity index 100%
rename from test/interactive016/expected
rename to test/interactive016/expected.out
diff --git a/test/interactive016/input b/test/interactive016/input.in
similarity index 100%
rename from test/interactive016/input
rename to test/interactive016/input.in
diff --git a/test/interactive016/run b/test/interactive016/run.sh
old mode 100755
new mode 100644
similarity index 96%
rename from test/interactive016/run
rename to test/interactive016/run.sh
index 33708bd5d..bf7031e6c
--- a/test/interactive016/run
+++ b/test/interactive016/run.sh
@@ -1,7 +1,7 @@
 #!/usr/bin/env bash
 
 cp src/interactive016.idr .
-${IDRIS:-idris} "$@" --quiet --port none interactive016.idr < input
+${IDRIS:-idris} "$@" --quiet --port none interactive016.idr < input.in
 
 cat interactive016.idr
 
diff --git a/test/interactive017/expected b/test/interactive017/expected.out
similarity index 100%
rename from test/interactive017/expected
rename to test/interactive017/expected.out
diff --git a/test/interactive017/run b/test/interactive017/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interactive017/run
rename to test/interactive017/run.sh
diff --git a/test/interactive018/expected b/test/interactive018/expected.out
similarity index 100%
rename from test/interactive018/expected
rename to test/interactive018/expected.out
diff --git a/test/interactive018/input b/test/interactive018/input.in
similarity index 100%
rename from test/interactive018/input
rename to test/interactive018/input.in
diff --git a/test/interactive018/run b/test/interactive018/run
deleted file mode 100755
index 83f327611..000000000
--- a/test/interactive018/run
+++ /dev/null
@@ -1,3 +0,0 @@
-#!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none Top.idr < input
-rm -f *.ibc
diff --git a/test/interactive018/run.sh b/test/interactive018/run.sh
new file mode 100644
index 000000000..deaa9862f
--- /dev/null
+++ b/test/interactive018/run.sh
@@ -0,0 +1,3 @@
+#!/usr/bin/env bash
+${IDRIS:-idris} $@ --quiet --port none Top.idr < input.in
+rm -f *.ibc
diff --git a/test/interfaces001/expected b/test/interfaces001/expected.out
similarity index 100%
rename from test/interfaces001/expected
rename to test/interfaces001/expected.out
diff --git a/test/interfaces001/input b/test/interfaces001/input.in
similarity index 100%
rename from test/interfaces001/input
rename to test/interfaces001/input.in
diff --git a/test/interfaces001/run b/test/interfaces001/run.sh
old mode 100755
new mode 100644
similarity index 74%
rename from test/interfaces001/run
rename to test/interfaces001/run.sh
index fca9dc497..42130616d
--- a/test/interfaces001/run
+++ b/test/interfaces001/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolour --consolewidth 70 InterfaceName.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolour --consolewidth 70 InterfaceName.idr < input.in
 rm -f *.ibc
diff --git a/test/interfaces002/expected b/test/interfaces002/expected.out
similarity index 100%
rename from test/interfaces002/expected
rename to test/interfaces002/expected.out
diff --git a/test/interfaces002/run b/test/interfaces002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces002/run
rename to test/interfaces002/run.sh
diff --git a/test/interfaces003/expected b/test/interfaces003/expected.out
similarity index 100%
rename from test/interfaces003/expected
rename to test/interfaces003/expected.out
diff --git a/test/interfaces003/run b/test/interfaces003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces003/run
rename to test/interfaces003/run.sh
diff --git a/test/interfaces004/expected b/test/interfaces004/expected.out
similarity index 100%
rename from test/interfaces004/expected
rename to test/interfaces004/expected.out
diff --git a/test/interfaces004/run b/test/interfaces004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces004/run
rename to test/interfaces004/run.sh
diff --git a/test/interfaces005/expected b/test/interfaces005/expected.out
similarity index 100%
rename from test/interfaces005/expected
rename to test/interfaces005/expected.out
diff --git a/test/interfaces005/run b/test/interfaces005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces005/run
rename to test/interfaces005/run.sh
diff --git a/test/interfaces006/expected b/test/interfaces006/expected.out
similarity index 100%
rename from test/interfaces006/expected
rename to test/interfaces006/expected.out
diff --git a/test/interfaces006/run b/test/interfaces006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces006/run
rename to test/interfaces006/run.sh
diff --git a/test/interfaces007/expected b/test/interfaces007/expected.out
similarity index 100%
rename from test/interfaces007/expected
rename to test/interfaces007/expected.out
diff --git a/test/interfaces007/run b/test/interfaces007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces007/run
rename to test/interfaces007/run.sh
diff --git a/test/interfaces008/expected b/test/interfaces008/expected.out
similarity index 100%
rename from test/interfaces008/expected
rename to test/interfaces008/expected.out
diff --git a/test/interfaces008/run b/test/interfaces008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces008/run
rename to test/interfaces008/run.sh
diff --git a/test/interfaces009/expected b/test/interfaces009/expected.out
similarity index 100%
rename from test/interfaces009/expected
rename to test/interfaces009/expected.out
diff --git a/test/interfaces009/run b/test/interfaces009/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces009/run
rename to test/interfaces009/run.sh
diff --git a/test/interfaces010/expected b/test/interfaces010/expected.out
similarity index 100%
rename from test/interfaces010/expected
rename to test/interfaces010/expected.out
diff --git a/test/interfaces010/run b/test/interfaces010/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/interfaces010/run
rename to test/interfaces010/run.sh
diff --git a/test/interpret001/expected b/test/interpret001/expected.out
similarity index 100%
rename from test/interpret001/expected
rename to test/interpret001/expected.out
diff --git a/test/interpret001/input b/test/interpret001/input.in
similarity index 100%
rename from test/interpret001/input
rename to test/interpret001/input.in
diff --git a/test/interpret001/run b/test/interpret001/run.sh
old mode 100755
new mode 100644
similarity index 88%
rename from test/interpret001/run
rename to test/interpret001/run.sh
index 24b22e2c5..e70b0bfee
--- a/test/interpret001/run
+++ b/test/interpret001/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolour double-echo.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolour double-echo.idr < input.in
 rm -f *.ibc
diff --git a/test/interpret002/expected b/test/interpret002/expected.out
similarity index 100%
rename from test/interpret002/expected
rename to test/interpret002/expected.out
diff --git a/test/interpret002/input b/test/interpret002/input.in
similarity index 100%
rename from test/interpret002/input
rename to test/interpret002/input.in
diff --git a/test/interpret002/run b/test/interpret002/run.sh
old mode 100755
new mode 100644
similarity index 88%
rename from test/interpret002/run
rename to test/interpret002/run.sh
index b4efe4077..cd5b95d80
--- a/test/interpret002/run
+++ b/test/interpret002/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolour file-error.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolour file-error.idr < input.in
 rm -f *.ibc
diff --git a/test/interpret003/expected b/test/interpret003/expected.out
similarity index 100%
rename from test/interpret003/expected
rename to test/interpret003/expected.out
diff --git a/test/interpret003/input b/test/interpret003/input.in
similarity index 100%
rename from test/interpret003/input
rename to test/interpret003/input.in
diff --git a/test/interpret003/run b/test/interpret003/run.sh
old mode 100755
new mode 100644
similarity index 87%
rename from test/interpret003/run
rename to test/interpret003/run.sh
index 3d5acb324..f6e02a8ba
--- a/test/interpret003/run
+++ b/test/interpret003/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none --nocolour interpret003.idr < input
+${IDRIS:-idris} $@ --quiet --port none --nocolour interpret003.idr < input.in
 rm -f *.ibc
diff --git a/test/io001/expected b/test/io001/expected.out
similarity index 100%
rename from test/io001/expected
rename to test/io001/expected.out
diff --git a/test/io001/run b/test/io001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/io001/run
rename to test/io001/run.sh
diff --git a/test/io002/expected b/test/io002/expected.out
similarity index 100%
rename from test/io002/expected
rename to test/io002/expected.out
diff --git a/test/io002/run b/test/io002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/io002/run
rename to test/io002/run.sh
diff --git a/test/io003/expected b/test/io003/expected.out
similarity index 100%
rename from test/io003/expected
rename to test/io003/expected.out
diff --git a/test/io003/run b/test/io003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/io003/run
rename to test/io003/run.sh
diff --git a/test/layout001/expected b/test/layout001/expected.out
similarity index 100%
rename from test/layout001/expected
rename to test/layout001/expected.out
diff --git a/test/layout001/run b/test/layout001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/layout001/run
rename to test/layout001/run.sh
diff --git a/test/literate001/expected b/test/literate001/expected.out
similarity index 100%
rename from test/literate001/expected
rename to test/literate001/expected.out
diff --git a/test/literate001/run b/test/literate001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/literate001/run
rename to test/literate001/run.sh
diff --git a/test/meta001/expected b/test/meta001/expected.out
similarity index 100%
rename from test/meta001/expected
rename to test/meta001/expected.out
diff --git a/test/meta001/run b/test/meta001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/meta001/run
rename to test/meta001/run.sh
diff --git a/test/meta002/expected b/test/meta002/expected.out
similarity index 100%
rename from test/meta002/expected
rename to test/meta002/expected.out
diff --git a/test/meta002/run b/test/meta002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/meta002/run
rename to test/meta002/run.sh
diff --git a/test/meta003/expected b/test/meta003/expected.out
similarity index 100%
rename from test/meta003/expected
rename to test/meta003/expected.out
diff --git a/test/meta003/run b/test/meta003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/meta003/run
rename to test/meta003/run.sh
diff --git a/test/meta004/expected b/test/meta004/expected.out
similarity index 100%
rename from test/meta004/expected
rename to test/meta004/expected.out
diff --git a/test/meta004/run b/test/meta004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/meta004/run
rename to test/meta004/run.sh
diff --git a/test/pkg001/expected b/test/pkg001/expected.out
similarity index 100%
rename from test/pkg001/expected
rename to test/pkg001/expected.out
diff --git a/test/pkg001/run b/test/pkg001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg001/run
rename to test/pkg001/run.sh
diff --git a/test/pkg001/test-pkg.ipkg b/test/pkg001/test-pkg.ipkg
index ac2b2c3e2..bc8ade729 100644
--- a/test/pkg001/test-pkg.ipkg
+++ b/test/pkg001/test-pkg.ipkg
@@ -12,6 +12,6 @@ license = BSD3 but see LICENSE for more information
 brief = "This is a test package."
 readme = README.md
 version = 1234
-homepage = http://www.idris-lang.org
-sourceloc = http://ww.github.com/idris-lang/Idris-Dev
-bugtracker = http://ww.github.com/idris-lang/Idris-Dev/issues
+homepage = https://www.idris-lang.org
+sourceloc = https://www.github.com/idris-lang/Idris-Dev
+bugtracker = https://www.github.com/idris-lang/Idris-Dev/issues
diff --git a/test/pkg002/expected b/test/pkg002/expected.out
similarity index 100%
rename from test/pkg002/expected
rename to test/pkg002/expected.out
diff --git a/test/pkg002/run b/test/pkg002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg002/run
rename to test/pkg002/run.sh
diff --git a/test/pkg003/expected b/test/pkg003/expected.out
similarity index 100%
rename from test/pkg003/expected
rename to test/pkg003/expected.out
diff --git a/test/pkg003/run b/test/pkg003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg003/run
rename to test/pkg003/run.sh
diff --git a/test/pkg004/expected b/test/pkg004/expected.out
similarity index 100%
rename from test/pkg004/expected
rename to test/pkg004/expected.out
diff --git a/test/pkg004/run b/test/pkg004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg004/run
rename to test/pkg004/run.sh
diff --git a/test/pkg005/expected b/test/pkg005/expected.out
similarity index 100%
rename from test/pkg005/expected
rename to test/pkg005/expected.out
diff --git a/test/pkg005/run b/test/pkg005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg005/run
rename to test/pkg005/run.sh
diff --git a/test/pkg006/expected b/test/pkg006/expected.out
similarity index 100%
rename from test/pkg006/expected
rename to test/pkg006/expected.out
diff --git a/test/pkg006/run b/test/pkg006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg006/run
rename to test/pkg006/run.sh
diff --git a/test/pkg007/expected b/test/pkg007/expected.out
similarity index 100%
rename from test/pkg007/expected
rename to test/pkg007/expected.out
diff --git a/test/pkg007/input b/test/pkg007/input.in
similarity index 100%
rename from test/pkg007/input
rename to test/pkg007/input.in
diff --git a/test/pkg007/run b/test/pkg007/run.sh
old mode 100755
new mode 100644
similarity index 74%
rename from test/pkg007/run
rename to test/pkg007/run.sh
index 07838ac7c..1a890002b
--- a/test/pkg007/run
+++ b/test/pkg007/run.sh
@@ -2,6 +2,6 @@
 cd toy
 ${IDRIS:-idris} $@ --build toy.ipkg --ibcsubdir ../ibcout
 cd ../ibcout
-${IDRIS:-idris} $@ --quiet < ../input
+${IDRIS:-idris} $@ --quiet < ../input.in
 cd ..
 rm -rf ibcout
diff --git a/test/pkg008/expected b/test/pkg008/expected.out
similarity index 100%
rename from test/pkg008/expected
rename to test/pkg008/expected.out
diff --git a/test/pkg008/run b/test/pkg008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg008/run
rename to test/pkg008/run.sh
diff --git a/test/pkg009/expected b/test/pkg009/expected.out
similarity index 100%
rename from test/pkg009/expected
rename to test/pkg009/expected.out
diff --git a/test/pkg009/run b/test/pkg009/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg009/run
rename to test/pkg009/run.sh
diff --git a/test/pkg010/expected b/test/pkg010/expected
deleted file mode 100644
index fb60c4205..000000000
--- a/test/pkg010/expected
+++ /dev/null
@@ -1,31 +0,0 @@
-Uncaught error: user error (wrongopts.ipkg:4:1:
-  |
-4 | <empty line>
-  | ^
-Invalid option `-total'
-
-Usage:  ([--nobanner] | [-q|--quiet] | [--ide-mode] | [--ide-mode-socket] |
-        [--client ARG] | [--log LEVEL] | [--logging-categories CATS] |
-        [--nobasepkgs] | [--noprelude] | [--nobuiltins] | [--check] |
-        [-o|--output FILE] | [--interface] | [--typeintype] | [--total] |
-        [--partial] | [--warnpartial] | [--warnreach] | [--warnipkg] |
-        [--nocoverage] | [--errorcontext] | [--info] | [--listlogcats] |
-        [--link] | [--listlibs] | [--libdir] | [--docdir] | [--include] | [--V2]
-        | [--V1] | [-V|--V0|--verbose] | [--ibcsubdir FILE] |
-        [-i|--idrispath ARG] | [--sourcepath ARG] | [--warn] |
-        [-p|--package ARG] | [--port PORT] | [--build IPKG] | [--install IPKG] |
-        [--repl IPKG] | [--clean IPKG] | [--mkdoc IPKG] | [--installdoc IPKG] |
-        [--checkpkg IPKG] | [--testpkg IPKG] | [--indent-with INDENT] |
-        [--indent-clause INDENT] | [--bytecode ARG] | [-S|--codegenonly] |
-        [-c|--compileonly] | [--dumpdefuns ARG] | [--dumpcases ARG] |
-        [--codegen TARGET] | [--portable-codegen TARGET] | [--cg-opt ARG] |
-        [-e|--eval EXPR] | [--execute] | [--exec EXPR] | [-X|--extension EXT] |
-        [--O3] | [--O2] | [--O1] | [--O0] | [--partial-eval] |
-        [--no-partial-eval] |
-        [--optimise-nat-like-types|--optimize-nat-like-types] |
-        [--no-optimise-nat-like-types|--no-optimize-nat-like-types] |
-        [-O|--level ARG] | [--target TRIPLE] | [--cpu CPU] | [--color|--colour]
-        | [--nocolor|--nocolour] | [--consolewidth WIDTH] | [--highlight] |
-        [--no-tactic-deprecation-warnings] |
-        [--allow-capitalized-pattern-variables]) [FILES] [-v|--version]
-)
diff --git a/test/pkg010/expected.out b/test/pkg010/expected.out
new file mode 100644
index 000000000..8f794f9b0
--- /dev/null
+++ b/test/pkg010/expected.out
@@ -0,0 +1,29 @@
+Uncaught error: user error (wrongopts.ipkg:4:1:
+  |
+4 | <empty line>
+  | ^
+Invalid option `-total'
+
+Usage:  [--nobanner | (-q|--quiet) | --ide-mode | --ide-mode-socket | 
+          --client ARG | --log LEVEL | --logging-categories CATS | 
+          --nobasepkgs | --noprelude | --nobuiltins | --check | 
+          (-o|--output FILE) | --interface | --typeintype | --total | 
+          --partial | --warnpartial | --warnreach | --warnipkg | --nocoverage | 
+          --errorcontext | --info | --listlogcats | --link | --listlibs | 
+          --libdir | --docdir | --include | --V2 | --V1 | (-V|--V0|--verbose) | 
+          --ibcsubdir FILE | (-i|--idrispath ARG) | --sourcepath ARG | --warn | 
+          (-p|--package ARG) | --port PORT | --build IPKG | --install IPKG | 
+          --repl IPKG | --clean IPKG | --mkdoc IPKG | --installdoc IPKG | 
+          --checkpkg IPKG | --testpkg IPKG | --indent-with INDENT | 
+          --indent-clause INDENT | --bytecode ARG | (-S|--codegenonly) | 
+          (-c|--compileonly) | --dumpdefuns ARG | --dumpcases ARG | 
+          --codegen TARGET | --portable-codegen TARGET | --cg-opt ARG | 
+          (-e|--eval EXPR) | --execute | --exec EXPR | (-X|--extension EXT) | 
+          --O3 | --O2 | --O1 | --O0 | --partial-eval | --no-partial-eval | 
+          (--optimise-nat-like-types|--optimize-nat-like-types) | 
+          (--no-optimise-nat-like-types|--no-optimize-nat-like-types) | 
+          (-O|--level ARG) | --target TRIPLE | --cpu CPU | (--color|--colour) | 
+          (--nocolor|--nocolour) | --consolewidth WIDTH | --highlight | 
+          --no-tactic-deprecation-warnings | 
+          --allow-capitalized-pattern-variables] [FILES] [-v|--version]
+)
diff --git a/test/pkg010/run b/test/pkg010/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pkg010/run
rename to test/pkg010/run.sh
diff --git a/test/prelude001/expected b/test/prelude001/expected.out
similarity index 100%
rename from test/prelude001/expected
rename to test/prelude001/expected.out
diff --git a/test/prelude001/run b/test/prelude001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/prelude001/run
rename to test/prelude001/run.sh
diff --git a/test/primitives001/expected b/test/primitives001/expected.out
similarity index 100%
rename from test/primitives001/expected
rename to test/primitives001/expected.out
diff --git a/test/primitives001/input b/test/primitives001/input.in
similarity index 100%
rename from test/primitives001/input
rename to test/primitives001/input.in
diff --git a/test/primitives001/run b/test/primitives001/run.sh
old mode 100755
new mode 100644
similarity index 86%
rename from test/primitives001/run
rename to test/primitives001/run.sh
index 3e06fd8e3..e68c7837b
--- a/test/primitives001/run
+++ b/test/primitives001/run.sh
@@ -2,5 +2,5 @@
 ${IDRIS:-idris} $@ test005.idr -o test005
 ./test005
 ${IDRIS:-idris} $@ substring.idr -o substring
-./substring < input
+./substring < input.in
 rm -f test005 substring *.ibc
diff --git a/test/primitives002/expected b/test/primitives002/expected.out
similarity index 100%
rename from test/primitives002/expected
rename to test/primitives002/expected.out
diff --git a/test/primitives002/run b/test/primitives002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/primitives002/run
rename to test/primitives002/run.sh
diff --git a/test/primitives003/expected b/test/primitives003/expected.out
similarity index 100%
rename from test/primitives003/expected
rename to test/primitives003/expected.out
diff --git a/test/primitives003/run b/test/primitives003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/primitives003/run
rename to test/primitives003/run.sh
diff --git a/test/primitives004-disabled/expected b/test/primitives004-disabled/expected.out
similarity index 100%
rename from test/primitives004-disabled/expected
rename to test/primitives004-disabled/expected.out
diff --git a/test/primitives004-disabled/run b/test/primitives004-disabled/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/primitives004-disabled/run
rename to test/primitives004-disabled/run.sh
diff --git a/test/primitives005/expected b/test/primitives005/expected.out
similarity index 100%
rename from test/primitives005/expected
rename to test/primitives005/expected.out
diff --git a/test/primitives005/run b/test/primitives005/run.sh
similarity index 100%
rename from test/primitives005/run
rename to test/primitives005/run.sh
diff --git a/test/primitives006/expected b/test/primitives006/expected.out
similarity index 100%
rename from test/primitives006/expected
rename to test/primitives006/expected.out
diff --git a/test/primitives006/run b/test/primitives006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/primitives006/run
rename to test/primitives006/run.sh
diff --git a/test/proof001/expected b/test/proof001/expected.out
similarity index 100%
rename from test/proof001/expected
rename to test/proof001/expected.out
diff --git a/test/proof001/run b/test/proof001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof001/run
rename to test/proof001/run.sh
diff --git a/test/proof002/expected b/test/proof002/expected.out
similarity index 100%
rename from test/proof002/expected
rename to test/proof002/expected.out
diff --git a/test/proof002/run b/test/proof002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof002/run
rename to test/proof002/run.sh
diff --git a/test/proof003/expected b/test/proof003/expected.out
similarity index 100%
rename from test/proof003/expected
rename to test/proof003/expected.out
diff --git a/test/proof003/run b/test/proof003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof003/run
rename to test/proof003/run.sh
diff --git a/test/proof004/expected b/test/proof004/expected.out
similarity index 100%
rename from test/proof004/expected
rename to test/proof004/expected.out
diff --git a/test/proof004/run b/test/proof004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof004/run
rename to test/proof004/run.sh
diff --git a/test/proof005/expected b/test/proof005/expected.out
similarity index 100%
rename from test/proof005/expected
rename to test/proof005/expected.out
diff --git a/test/proof005/run b/test/proof005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof005/run
rename to test/proof005/run.sh
diff --git a/test/proof006/expected b/test/proof006/expected.out
similarity index 100%
rename from test/proof006/expected
rename to test/proof006/expected.out
diff --git a/test/proof006/run b/test/proof006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof006/run
rename to test/proof006/run.sh
diff --git a/test/proof007/expected b/test/proof007/expected.out
similarity index 100%
rename from test/proof007/expected
rename to test/proof007/expected.out
diff --git a/test/proof007/run b/test/proof007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof007/run
rename to test/proof007/run.sh
diff --git a/test/proof008/expected b/test/proof008/expected.out
similarity index 100%
rename from test/proof008/expected
rename to test/proof008/expected.out
diff --git a/test/proof008/run b/test/proof008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof008/run
rename to test/proof008/run.sh
diff --git a/test/proof009/expected b/test/proof009/expected.out
similarity index 100%
rename from test/proof009/expected
rename to test/proof009/expected.out
diff --git a/test/proof009/input b/test/proof009/input.in
similarity index 100%
rename from test/proof009/input
rename to test/proof009/input.in
diff --git a/test/proof009/run b/test/proof009/run.sh
old mode 100755
new mode 100644
similarity index 84%
rename from test/proof009/run
rename to test/proof009/run.sh
index 98c5de4fb..aa4e220d6
--- a/test/proof009/run
+++ b/test/proof009/run.sh
@@ -1,3 +1,3 @@
 #!/usr/bin/env bash
-${IDRIS:-idris} $@ --consolewidth 70 --quiet --port none proof009.idr < input
+${IDRIS:-idris} $@ --consolewidth 70 --quiet --port none proof009.idr < input.in
 rm -f *.ibc
diff --git a/test/proof010/expected b/test/proof010/expected.out
similarity index 100%
rename from test/proof010/expected
rename to test/proof010/expected.out
diff --git a/test/proof010/run b/test/proof010/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof010/run
rename to test/proof010/run.sh
diff --git a/test/proof011/expected b/test/proof011/expected.out
similarity index 100%
rename from test/proof011/expected
rename to test/proof011/expected.out
diff --git a/test/proof011/run b/test/proof011/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proof011/run
rename to test/proof011/run.sh
diff --git a/test/proofsearch001/expected b/test/proofsearch001/expected.out
similarity index 100%
rename from test/proofsearch001/expected
rename to test/proofsearch001/expected.out
diff --git a/test/proofsearch001/run b/test/proofsearch001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proofsearch001/run
rename to test/proofsearch001/run.sh
diff --git a/test/proofsearch002/expected b/test/proofsearch002/expected.out
similarity index 100%
rename from test/proofsearch002/expected
rename to test/proofsearch002/expected.out
diff --git a/test/proofsearch002/run b/test/proofsearch002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proofsearch002/run
rename to test/proofsearch002/run.sh
diff --git a/test/proofsearch003/expected b/test/proofsearch003/expected.out
similarity index 100%
rename from test/proofsearch003/expected
rename to test/proofsearch003/expected.out
diff --git a/test/proofsearch003/run b/test/proofsearch003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/proofsearch003/run
rename to test/proofsearch003/run.sh
diff --git a/test/pruviloj001/expected b/test/pruviloj001/expected.out
similarity index 100%
rename from test/pruviloj001/expected
rename to test/pruviloj001/expected.out
diff --git a/test/pruviloj001/run b/test/pruviloj001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/pruviloj001/run
rename to test/pruviloj001/run.sh
diff --git a/test/quasiquote001/expected b/test/quasiquote001/expected.out
similarity index 100%
rename from test/quasiquote001/expected
rename to test/quasiquote001/expected.out
diff --git a/test/quasiquote001/run b/test/quasiquote001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/quasiquote001/run
rename to test/quasiquote001/run.sh
diff --git a/test/quasiquote002/expected b/test/quasiquote002/expected.out
similarity index 100%
rename from test/quasiquote002/expected
rename to test/quasiquote002/expected.out
diff --git a/test/quasiquote002/run b/test/quasiquote002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/quasiquote002/run
rename to test/quasiquote002/run.sh
diff --git a/test/quasiquote003/expected b/test/quasiquote003/expected.out
similarity index 100%
rename from test/quasiquote003/expected
rename to test/quasiquote003/expected.out
diff --git a/test/quasiquote003/run b/test/quasiquote003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/quasiquote003/run
rename to test/quasiquote003/run.sh
diff --git a/test/quasiquote004/expected b/test/quasiquote004/expected.out
similarity index 100%
rename from test/quasiquote004/expected
rename to test/quasiquote004/expected.out
diff --git a/test/quasiquote004/run b/test/quasiquote004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/quasiquote004/run
rename to test/quasiquote004/run.sh
diff --git a/test/quasiquote005/expected b/test/quasiquote005/expected.out
similarity index 100%
rename from test/quasiquote005/expected
rename to test/quasiquote005/expected.out
diff --git a/test/quasiquote005/run b/test/quasiquote005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/quasiquote005/run
rename to test/quasiquote005/run.sh
diff --git a/test/quasiquote006/expected b/test/quasiquote006/expected.out
similarity index 100%
rename from test/quasiquote006/expected
rename to test/quasiquote006/expected.out
diff --git a/test/quasiquote006/run b/test/quasiquote006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/quasiquote006/run
rename to test/quasiquote006/run.sh
diff --git a/test/records001/expected b/test/records001/expected.out
similarity index 100%
rename from test/records001/expected
rename to test/records001/expected.out
diff --git a/test/records001/run b/test/records001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/records001/run
rename to test/records001/run.sh
diff --git a/test/records002/expected b/test/records002/expected.out
similarity index 100%
rename from test/records002/expected
rename to test/records002/expected.out
diff --git a/test/records002/run b/test/records002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/records002/run
rename to test/records002/run.sh
diff --git a/test/records003/expected b/test/records003/expected.out
similarity index 100%
rename from test/records003/expected
rename to test/records003/expected.out
diff --git a/test/records003/run b/test/records003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/records003/run
rename to test/records003/run.sh
diff --git a/test/records004/expected b/test/records004/expected.out
similarity index 100%
rename from test/records004/expected
rename to test/records004/expected.out
diff --git a/test/records004/run b/test/records004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/records004/run
rename to test/records004/run.sh
diff --git a/test/records005/expected b/test/records005/expected.out
similarity index 100%
rename from test/records005/expected
rename to test/records005/expected.out
diff --git a/test/records005/run b/test/records005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/records005/run
rename to test/records005/run.sh
diff --git a/test/reg001/expected b/test/reg001/expected.out
similarity index 100%
rename from test/reg001/expected
rename to test/reg001/expected.out
diff --git a/test/reg001/run b/test/reg001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg001/run
rename to test/reg001/run.sh
diff --git a/test/reg002/expected b/test/reg002/expected.out
similarity index 100%
rename from test/reg002/expected
rename to test/reg002/expected.out
diff --git a/test/reg002/run b/test/reg002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg002/run
rename to test/reg002/run.sh
diff --git a/test/reg004/expected b/test/reg004/expected.out
similarity index 100%
rename from test/reg004/expected
rename to test/reg004/expected.out
diff --git a/test/reg004/run b/test/reg004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg004/run
rename to test/reg004/run.sh
diff --git a/test/reg005/expected b/test/reg005/expected.out
similarity index 100%
rename from test/reg005/expected
rename to test/reg005/expected.out
diff --git a/test/reg005/run b/test/reg005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg005/run
rename to test/reg005/run.sh
diff --git a/test/reg007/expected b/test/reg007/expected.out
similarity index 100%
rename from test/reg007/expected
rename to test/reg007/expected.out
diff --git a/test/reg007/run b/test/reg007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg007/run
rename to test/reg007/run.sh
diff --git a/test/reg013/expected b/test/reg013/expected.out
similarity index 100%
rename from test/reg013/expected
rename to test/reg013/expected.out
diff --git a/test/reg013/run b/test/reg013/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg013/run
rename to test/reg013/run.sh
diff --git a/test/reg016/expected b/test/reg016/expected.out
similarity index 100%
rename from test/reg016/expected
rename to test/reg016/expected.out
diff --git a/test/reg016/run b/test/reg016/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg016/run
rename to test/reg016/run.sh
diff --git a/test/reg017/expected b/test/reg017/expected.out
similarity index 100%
rename from test/reg017/expected
rename to test/reg017/expected.out
diff --git a/test/reg017/run b/test/reg017/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg017/run
rename to test/reg017/run.sh
diff --git a/test/reg020/expected b/test/reg020/expected.out
similarity index 100%
rename from test/reg020/expected
rename to test/reg020/expected.out
diff --git a/test/reg020/run b/test/reg020/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg020/run
rename to test/reg020/run.sh
diff --git a/test/reg024/expected b/test/reg024/expected.out
similarity index 100%
rename from test/reg024/expected
rename to test/reg024/expected.out
diff --git a/test/reg024/run b/test/reg024/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg024/run
rename to test/reg024/run.sh
diff --git a/test/reg025/expected b/test/reg025/expected.out
similarity index 100%
rename from test/reg025/expected
rename to test/reg025/expected.out
diff --git a/test/reg025/run b/test/reg025/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg025/run
rename to test/reg025/run.sh
diff --git a/test/reg027/expected b/test/reg027/expected.out
similarity index 100%
rename from test/reg027/expected
rename to test/reg027/expected.out
diff --git a/test/reg027/run b/test/reg027/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg027/run
rename to test/reg027/run.sh
diff --git a/test/reg029/expected b/test/reg029/expected.out
similarity index 100%
rename from test/reg029/expected
rename to test/reg029/expected.out
diff --git a/test/reg029/run b/test/reg029/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg029/run
rename to test/reg029/run.sh
diff --git a/test/reg031/expected b/test/reg031/expected.out
similarity index 100%
rename from test/reg031/expected
rename to test/reg031/expected.out
diff --git a/test/reg031/run b/test/reg031/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg031/run
rename to test/reg031/run.sh
diff --git a/test/reg032/expected b/test/reg032/expected.out
similarity index 100%
rename from test/reg032/expected
rename to test/reg032/expected.out
diff --git a/test/reg032/run b/test/reg032/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg032/run
rename to test/reg032/run.sh
diff --git a/test/reg039/expected b/test/reg039/expected.out
similarity index 100%
rename from test/reg039/expected
rename to test/reg039/expected.out
diff --git a/test/reg039/run b/test/reg039/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg039/run
rename to test/reg039/run.sh
diff --git a/test/reg040/expected b/test/reg040/expected.out
similarity index 100%
rename from test/reg040/expected
rename to test/reg040/expected.out
diff --git a/test/reg040/run b/test/reg040/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg040/run
rename to test/reg040/run.sh
diff --git a/test/reg041/expected b/test/reg041/expected.out
similarity index 100%
rename from test/reg041/expected
rename to test/reg041/expected.out
diff --git a/test/reg041/run b/test/reg041/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg041/run
rename to test/reg041/run.sh
diff --git a/test/reg042/expected b/test/reg042/expected.out
similarity index 100%
rename from test/reg042/expected
rename to test/reg042/expected.out
diff --git a/test/reg042/run b/test/reg042/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg042/run
rename to test/reg042/run.sh
diff --git a/test/reg045/expected b/test/reg045/expected.out
similarity index 100%
rename from test/reg045/expected
rename to test/reg045/expected.out
diff --git a/test/reg045/run b/test/reg045/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg045/run
rename to test/reg045/run.sh
diff --git a/test/reg048/expected b/test/reg048/expected.out
similarity index 100%
rename from test/reg048/expected
rename to test/reg048/expected.out
diff --git a/test/reg048/run b/test/reg048/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg048/run
rename to test/reg048/run.sh
diff --git a/test/reg051-disabled/expected b/test/reg051-disabled/expected.out
similarity index 100%
rename from test/reg051-disabled/expected
rename to test/reg051-disabled/expected.out
diff --git a/test/reg051-disabled/run b/test/reg051-disabled/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg051-disabled/run
rename to test/reg051-disabled/run.sh
diff --git a/test/reg052/expected b/test/reg052/expected.out
similarity index 100%
rename from test/reg052/expected
rename to test/reg052/expected.out
diff --git a/test/reg052/run b/test/reg052/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg052/run
rename to test/reg052/run.sh
diff --git a/test/reg067/expected b/test/reg067/expected.out
similarity index 100%
rename from test/reg067/expected
rename to test/reg067/expected.out
diff --git a/test/reg067/run b/test/reg067/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg067/run
rename to test/reg067/run.sh
diff --git a/test/reg075/expected b/test/reg075/expected.out
similarity index 100%
rename from test/reg075/expected
rename to test/reg075/expected.out
diff --git a/test/reg075/input b/test/reg075/input.in
similarity index 100%
rename from test/reg075/input
rename to test/reg075/input.in
diff --git a/test/reg075/run b/test/reg075/run
deleted file mode 100755
index 10c4bdc8a..000000000
--- a/test/reg075/run
+++ /dev/null
@@ -1,3 +0,0 @@
-#!/usr/bin/env bash
-${IDRIS:-idris} $@ --quiet --port none reg075.idr < input
-rm -f *.ibc
diff --git a/test/reg075/run.sh b/test/reg075/run.sh
new file mode 100644
index 000000000..b30b67d35
--- /dev/null
+++ b/test/reg075/run.sh
@@ -0,0 +1,3 @@
+#!/usr/bin/env bash
+${IDRIS:-idris} $@ --quiet --port none reg075.idr < input.in
+rm -f *.ibc
diff --git a/test/reg076/expected b/test/reg076/expected.out
similarity index 100%
rename from test/reg076/expected
rename to test/reg076/expected.out
diff --git a/test/reg076/input b/test/reg076/input.in
similarity index 100%
rename from test/reg076/input
rename to test/reg076/input.in
diff --git a/test/reg076/run b/test/reg076/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg076/run
rename to test/reg076/run.sh
diff --git a/test/reg077/expected b/test/reg077/expected.out
similarity index 100%
rename from test/reg077/expected
rename to test/reg077/expected.out
diff --git a/test/reg077/run b/test/reg077/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/reg077/run
rename to test/reg077/run.sh
diff --git a/test/regression001/expected b/test/regression001/expected.out
similarity index 100%
rename from test/regression001/expected
rename to test/regression001/expected.out
diff --git a/test/regression001/run b/test/regression001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/regression001/run
rename to test/regression001/run.sh
diff --git a/test/regression002/expected b/test/regression002/expected.out
similarity index 100%
rename from test/regression002/expected
rename to test/regression002/expected.out
diff --git a/test/regression002/run b/test/regression002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/regression002/run
rename to test/regression002/run.sh
diff --git a/test/regression003/expected b/test/regression003/expected.out
similarity index 100%
rename from test/regression003/expected
rename to test/regression003/expected.out
diff --git a/test/regression003/run b/test/regression003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/regression003/run
rename to test/regression003/run.sh
diff --git a/test/sourceLocation001/expected b/test/sourceLocation001/expected.out
similarity index 100%
rename from test/sourceLocation001/expected
rename to test/sourceLocation001/expected.out
diff --git a/test/sourceLocation001/run b/test/sourceLocation001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/sourceLocation001/run
rename to test/sourceLocation001/run.sh
diff --git a/test/st001/expected b/test/st001/expected.out
similarity index 100%
rename from test/st001/expected
rename to test/st001/expected.out
diff --git a/test/st001/run b/test/st001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st001/run
rename to test/st001/run.sh
diff --git a/test/st001/test001.idr b/test/st001/test001.idr
index 31c2ff1c9..ae451ca1a 100644
--- a/test/st001/test001.idr
+++ b/test/st001/test001.idr
@@ -40,7 +40,7 @@ readFileCount fh cnt =
 
 testFile : (ConsoleIO m, File m) => ST m () []
 testFile = with ST do 
-              Right fileHandle <- open "testFile" Read 
+              Right fileHandle <- open "testFile.in" Read
                     | Left ferr => do putStrLn (show ferr)
                                       pure ()
               count <- new 0
diff --git a/test/st001/testFile b/test/st001/testFile.in
similarity index 100%
rename from test/st001/testFile
rename to test/st001/testFile.in
diff --git a/test/st002/expected b/test/st002/expected.out
similarity index 100%
rename from test/st002/expected
rename to test/st002/expected.out
diff --git a/test/st002/run b/test/st002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st002/run
rename to test/st002/run.sh
diff --git a/test/st002/test002.idr b/test/st002/test002.idr
index b2745869f..3f6889378 100644
--- a/test/st002/test002.idr
+++ b/test/st002/test002.idr
@@ -40,7 +40,7 @@ readFileCount fh cnt =
 
 testFile : (ConsoleIO m, File m) => ST m () []
 testFile = with ST do
-              Right fileHandle <- open "testFile" Read 
+              Right fileHandle <- open "testFile.in" Read
                     | Left ferr => do putStrLn (show ferr)
                                       pure ()
               count <- new 0
diff --git a/test/st002/testFile b/test/st002/testFile.in
similarity index 100%
rename from test/st002/testFile
rename to test/st002/testFile.in
diff --git a/test/st003/expected b/test/st003/expected.out
similarity index 100%
rename from test/st003/expected
rename to test/st003/expected.out
diff --git a/test/st003/run b/test/st003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st003/run
rename to test/st003/run.sh
diff --git a/test/st003/test003.idr b/test/st003/test003.idr
index 9e194c9c4..275ed6c7d 100644
--- a/test/st003/test003.idr
+++ b/test/st003/test003.idr
@@ -7,7 +7,7 @@ import Control.ST.ImplicitCall
 
 testFile : (ConsoleIO m, File m) => ST m () []
 testFile = with ST do
-              Right str <- readFile "testFile" 
+              Right str <- readFile "testFile.in"
                   | Left ferr => do putStrLn (show ferr)
                                     pure ()
               putStrLn str 
diff --git a/test/st003/testFile b/test/st003/testFile.in
similarity index 100%
rename from test/st003/testFile
rename to test/st003/testFile.in
diff --git a/test/st004/expected b/test/st004/expected.out
similarity index 100%
rename from test/st004/expected
rename to test/st004/expected.out
diff --git a/test/st004/run b/test/st004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st004/run
rename to test/st004/run.sh
diff --git a/test/st005/expected b/test/st005/expected.out
similarity index 100%
rename from test/st005/expected
rename to test/st005/expected.out
diff --git a/test/st005/run b/test/st005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st005/run
rename to test/st005/run.sh
diff --git a/test/st006/expected b/test/st006/expected.out
similarity index 100%
rename from test/st006/expected
rename to test/st006/expected.out
diff --git a/test/st006/run b/test/st006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st006/run
rename to test/st006/run.sh
diff --git a/test/st007/expected b/test/st007/expected.out
similarity index 100%
rename from test/st007/expected
rename to test/st007/expected.out
diff --git a/test/st007/run b/test/st007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/st007/run
rename to test/st007/run.sh
diff --git a/test/sugar001/expected b/test/sugar001/expected.out
similarity index 100%
rename from test/sugar001/expected
rename to test/sugar001/expected.out
diff --git a/test/sugar001/run b/test/sugar001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/sugar001/run
rename to test/sugar001/run.sh
diff --git a/test/sugar002/expected b/test/sugar002/expected.out
similarity index 100%
rename from test/sugar002/expected
rename to test/sugar002/expected.out
diff --git a/test/sugar002/run b/test/sugar002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/sugar002/run
rename to test/sugar002/run.sh
diff --git a/test/sugar003/expected b/test/sugar003/expected.out
similarity index 100%
rename from test/sugar003/expected
rename to test/sugar003/expected.out
diff --git a/test/sugar003/run b/test/sugar003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/sugar003/run
rename to test/sugar003/run.sh
diff --git a/test/sugar004/expected b/test/sugar004/expected.out
similarity index 100%
rename from test/sugar004/expected
rename to test/sugar004/expected.out
diff --git a/test/sugar004/run b/test/sugar004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/sugar004/run
rename to test/sugar004/run.sh
diff --git a/test/sugar005/expected b/test/sugar005/expected.out
similarity index 100%
rename from test/sugar005/expected
rename to test/sugar005/expected.out
diff --git a/test/sugar005/run b/test/sugar005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/sugar005/run
rename to test/sugar005/run.sh
diff --git a/test/syntax001/expected b/test/syntax001/expected.out
similarity index 100%
rename from test/syntax001/expected
rename to test/syntax001/expected.out
diff --git a/test/syntax001/run b/test/syntax001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/syntax001/run
rename to test/syntax001/run.sh
diff --git a/test/syntax002/expected b/test/syntax002/expected.out
similarity index 100%
rename from test/syntax002/expected
rename to test/syntax002/expected.out
diff --git a/test/syntax002/run b/test/syntax002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/syntax002/run
rename to test/syntax002/run.sh
diff --git a/test/tactics001/expected b/test/tactics001/expected.out
similarity index 100%
rename from test/tactics001/expected
rename to test/tactics001/expected.out
diff --git a/test/tactics001/run b/test/tactics001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tactics001/run
rename to test/tactics001/run.sh
diff --git a/test/totality001/expected b/test/totality001/expected.out
similarity index 100%
rename from test/totality001/expected
rename to test/totality001/expected.out
diff --git a/test/totality001/run b/test/totality001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality001/run
rename to test/totality001/run.sh
diff --git a/test/totality002/expected b/test/totality002/expected.out
similarity index 100%
rename from test/totality002/expected
rename to test/totality002/expected.out
diff --git a/test/totality002/run b/test/totality002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality002/run
rename to test/totality002/run.sh
diff --git a/test/totality003/expected b/test/totality003/expected.out
similarity index 100%
rename from test/totality003/expected
rename to test/totality003/expected.out
diff --git a/test/totality003/run b/test/totality003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality003/run
rename to test/totality003/run.sh
diff --git a/test/totality004/expected b/test/totality004/expected.out
similarity index 100%
rename from test/totality004/expected
rename to test/totality004/expected.out
diff --git a/test/totality004/run b/test/totality004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality004/run
rename to test/totality004/run.sh
diff --git a/test/totality005/expected b/test/totality005/expected.out
similarity index 100%
rename from test/totality005/expected
rename to test/totality005/expected.out
diff --git a/test/totality005/run b/test/totality005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality005/run
rename to test/totality005/run.sh
diff --git a/test/totality006/expected b/test/totality006/expected.out
similarity index 100%
rename from test/totality006/expected
rename to test/totality006/expected.out
diff --git a/test/totality006/run b/test/totality006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality006/run
rename to test/totality006/run.sh
diff --git a/test/totality007/expected b/test/totality007/expected.out
similarity index 100%
rename from test/totality007/expected
rename to test/totality007/expected.out
diff --git a/test/totality007/run b/test/totality007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality007/run
rename to test/totality007/run.sh
diff --git a/test/totality008/expected b/test/totality008/expected.out
similarity index 100%
rename from test/totality008/expected
rename to test/totality008/expected.out
diff --git a/test/totality008/run b/test/totality008/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality008/run
rename to test/totality008/run.sh
diff --git a/test/totality009/expected b/test/totality009/expected.out
similarity index 100%
rename from test/totality009/expected
rename to test/totality009/expected.out
diff --git a/test/totality009/run b/test/totality009/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality009/run
rename to test/totality009/run.sh
diff --git a/test/totality010/expected b/test/totality010/expected.out
similarity index 100%
rename from test/totality010/expected
rename to test/totality010/expected.out
diff --git a/test/totality010/run b/test/totality010/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality010/run
rename to test/totality010/run.sh
diff --git a/test/totality011/expected b/test/totality011/expected.out
similarity index 100%
rename from test/totality011/expected
rename to test/totality011/expected.out
diff --git a/test/totality011/run b/test/totality011/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality011/run
rename to test/totality011/run.sh
diff --git a/test/totality012/expected b/test/totality012/expected.out
similarity index 100%
rename from test/totality012/expected
rename to test/totality012/expected.out
diff --git a/test/totality012/run b/test/totality012/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality012/run
rename to test/totality012/run.sh
diff --git a/test/totality013/expected b/test/totality013/expected.out
similarity index 100%
rename from test/totality013/expected
rename to test/totality013/expected.out
diff --git a/test/totality013/run b/test/totality013/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality013/run
rename to test/totality013/run.sh
diff --git a/test/totality014/expected b/test/totality014/expected.out
similarity index 100%
rename from test/totality014/expected
rename to test/totality014/expected.out
diff --git a/test/totality014/run b/test/totality014/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality014/run
rename to test/totality014/run.sh
diff --git a/test/totality015/expected b/test/totality015/expected.out
similarity index 100%
rename from test/totality015/expected
rename to test/totality015/expected.out
diff --git a/test/totality015/run b/test/totality015/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality015/run
rename to test/totality015/run.sh
diff --git a/test/totality016/expected b/test/totality016/expected.out
similarity index 100%
rename from test/totality016/expected
rename to test/totality016/expected.out
diff --git a/test/totality016/run b/test/totality016/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality016/run
rename to test/totality016/run.sh
diff --git a/test/totality017/expected b/test/totality017/expected.out
similarity index 100%
rename from test/totality017/expected
rename to test/totality017/expected.out
diff --git a/test/totality017/run b/test/totality017/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality017/run
rename to test/totality017/run.sh
diff --git a/test/totality018/expected b/test/totality018/expected.out
similarity index 100%
rename from test/totality018/expected
rename to test/totality018/expected.out
diff --git a/test/totality018/run b/test/totality018/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality018/run
rename to test/totality018/run.sh
diff --git a/test/totality019/expected b/test/totality019/expected.out
similarity index 100%
rename from test/totality019/expected
rename to test/totality019/expected.out
diff --git a/test/totality019/run b/test/totality019/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality019/run
rename to test/totality019/run.sh
diff --git a/test/totality020/expected b/test/totality020/expected.out
similarity index 100%
rename from test/totality020/expected
rename to test/totality020/expected.out
diff --git a/test/totality020/run b/test/totality020/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality020/run
rename to test/totality020/run.sh
diff --git a/test/totality021/expected b/test/totality021/expected.out
similarity index 100%
rename from test/totality021/expected
rename to test/totality021/expected.out
diff --git a/test/totality021/run b/test/totality021/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality021/run
rename to test/totality021/run.sh
diff --git a/test/totality022/expected b/test/totality022/expected.out
similarity index 100%
rename from test/totality022/expected
rename to test/totality022/expected.out
diff --git a/test/totality022/run b/test/totality022/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality022/run
rename to test/totality022/run.sh
diff --git a/test/totality023/expected b/test/totality023/expected.out
similarity index 100%
rename from test/totality023/expected
rename to test/totality023/expected.out
diff --git a/test/totality023/run b/test/totality023/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality023/run
rename to test/totality023/run.sh
diff --git a/test/totality024/expected b/test/totality024/expected.out
similarity index 100%
rename from test/totality024/expected
rename to test/totality024/expected.out
diff --git a/test/totality024/run b/test/totality024/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality024/run
rename to test/totality024/run.sh
diff --git a/test/totality025/expected b/test/totality025/expected.out
similarity index 100%
rename from test/totality025/expected
rename to test/totality025/expected.out
diff --git a/test/totality025/run b/test/totality025/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality025/run
rename to test/totality025/run.sh
diff --git a/test/totality026/expected b/test/totality026/expected.out
similarity index 100%
rename from test/totality026/expected
rename to test/totality026/expected.out
diff --git a/test/totality026/run b/test/totality026/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/totality026/run
rename to test/totality026/run.sh
diff --git a/test/tutorial001/expected b/test/tutorial001/expected.out
similarity index 100%
rename from test/tutorial001/expected
rename to test/tutorial001/expected.out
diff --git a/test/tutorial001/run b/test/tutorial001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial001/run
rename to test/tutorial001/run.sh
diff --git a/test/tutorial002/expected b/test/tutorial002/expected.out
similarity index 100%
rename from test/tutorial002/expected
rename to test/tutorial002/expected.out
diff --git a/test/tutorial002/run b/test/tutorial002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial002/run
rename to test/tutorial002/run.sh
diff --git a/test/tutorial003/expected b/test/tutorial003/expected.out
similarity index 100%
rename from test/tutorial003/expected
rename to test/tutorial003/expected.out
diff --git a/test/tutorial003/run b/test/tutorial003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial003/run
rename to test/tutorial003/run.sh
diff --git a/test/tutorial004/expected b/test/tutorial004/expected.out
similarity index 100%
rename from test/tutorial004/expected
rename to test/tutorial004/expected.out
diff --git a/test/tutorial004/run b/test/tutorial004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial004/run
rename to test/tutorial004/run.sh
diff --git a/test/tutorial005/expected b/test/tutorial005/expected.out
similarity index 100%
rename from test/tutorial005/expected
rename to test/tutorial005/expected.out
diff --git a/test/tutorial005/run b/test/tutorial005/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial005/run
rename to test/tutorial005/run.sh
diff --git a/test/tutorial006/expected b/test/tutorial006/expected.out
similarity index 100%
rename from test/tutorial006/expected
rename to test/tutorial006/expected.out
diff --git a/test/tutorial006/run b/test/tutorial006/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial006/run
rename to test/tutorial006/run.sh
diff --git a/test/tutorial007/expected b/test/tutorial007/expected.out
similarity index 100%
rename from test/tutorial007/expected
rename to test/tutorial007/expected.out
diff --git a/test/tutorial007/run b/test/tutorial007/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/tutorial007/run
rename to test/tutorial007/run.sh
diff --git a/test/unique001/expected b/test/unique001/expected.out
similarity index 100%
rename from test/unique001/expected
rename to test/unique001/expected.out
diff --git a/test/unique001/run b/test/unique001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/unique001/run
rename to test/unique001/run.sh
diff --git a/test/unique004/expected b/test/unique004/expected.out
similarity index 100%
rename from test/unique004/expected
rename to test/unique004/expected.out
diff --git a/test/unique004/run b/test/unique004/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/unique004/run
rename to test/unique004/run.sh
diff --git a/test/universes001/expected b/test/universes001/expected.out
similarity index 100%
rename from test/universes001/expected
rename to test/universes001/expected.out
diff --git a/test/universes001/run b/test/universes001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/universes001/run
rename to test/universes001/run.sh
diff --git a/test/universes002/expected b/test/universes002/expected.out
similarity index 100%
rename from test/universes002/expected
rename to test/universes002/expected.out
diff --git a/test/universes002/run b/test/universes002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/universes002/run
rename to test/universes002/run.sh
diff --git a/test/views001/expected b/test/views001/expected.out
similarity index 100%
rename from test/views001/expected
rename to test/views001/expected.out
diff --git a/test/views001/run b/test/views001/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/views001/run
rename to test/views001/run.sh
diff --git a/test/views002/expected b/test/views002/expected.out
similarity index 100%
rename from test/views002/expected
rename to test/views002/expected.out
diff --git a/test/views002/run b/test/views002/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/views002/run
rename to test/views002/run.sh
diff --git a/test/views003/expected b/test/views003/expected.out
similarity index 100%
rename from test/views003/expected
rename to test/views003/expected.out
diff --git a/test/views003/run b/test/views003/run.sh
old mode 100755
new mode 100644
similarity index 100%
rename from test/views003/run
rename to test/views003/run.sh
